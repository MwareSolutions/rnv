{"version":3,"file":"index.js","names":["rnvPluginList","c","Promise","resolve","logTask","o","_getPluginList","logToSummary","asString","isUpdate","output","asArray","plugins","allPlugins","i","Object","keys","files","rnv","pluginTemplates","configs","forEach","pk","k","p","platforms","SUPPORTED_PLATFORMS","v","length","slice","installedPlugin","buildConfig","installedString","chalk","yellow","green","push","versionString","version","bold","name","value","grey","sort","a","b","aStr","toLowerCase","bStr","com","rnvPluginAdd","inquirer","prompt","type","message","choices","pageSize","plugin","installMessage","selectedPlugins","white","questionPlugins","key","props","project","config","_checkAndAddDependantPlugins","pluginKeys","pluginKey","pluginProps","finalProps","i2","propValue","spinner","ora","join","start","writeFileSync","paths","succeed","logSuccess","dependsOn","templatePlugins","console","log","rnvPluginUpdate","confirm","json","getMergedPlugin","noMerge","rnvPlugin","origPlugin","String","scope","split","pop","skipMerge","_getMergedPlugin","logWarning","source","mergedPlugin","obj1","obj2","obj","sanitizeDynamicProps","mergeObjects","_refs","configurePlugins","reject","package","dependencies","hasPackageChanged","devDependencies","builds","runtime","isWrapper","red","npm","npmKey","npmDep","versionCheck","then","skipPackageUpdate","_requiresNpmInstall","catch","e","parsePlugins","platform","pluginCallback","includedPlugins","getConfigProp","excludedPlugins","includes","pluginPlat","enabled","deprecated","logError","appConfig","getLocalRenativePlugin","webpack","modulePaths","moduleAliases","renative","projectPath"],"sources":["../../src/pluginTools/index.js"],"sourcesContent":["import chalk from 'chalk';\nimport inquirer from 'inquirer';\nimport ora from 'ora';\nimport { mergeObjects, writeFileSync, sanitizeDynamicProps } from '../systemTools/fileutils';\nimport { getConfigProp } from '../common';\nimport { versionCheck } from '../configTools/configParser';\n\nimport { SUPPORTED_PLATFORMS } from '../constants';\nimport {\n    logSuccess,\n    logTask, logWarning, logError, logToSummary\n} from '../systemTools/logger';\nimport { executePipe } from '../projectTools/buildHooks';\n\nexport const rnvPluginList = c => new Promise((resolve) => {\n    logTask('_runList');\n\n    const o = _getPluginList(c);\n\n    // console.log(o.asString);\n    logToSummary(`Plugins:\\n\\n${o.asString}`);\n\n    resolve();\n});\n\nconst _getPluginList = (c, isUpdate = false) => {\n    const output = {\n        asString: '',\n        asArray: [],\n        plugins: [],\n        allPlugins: {} // this is used by rnvPluginAdd\n    };\n\n    let i = 1;\n\n    Object.keys(c.files.rnv.pluginTemplates.configs).forEach((pk) => {\n        const plugins = c.files.rnv.pluginTemplates.configs[pk].pluginTemplates;\n        Object.keys(plugins).forEach((k) => {\n            const p = plugins[k];\n\n            let platforms = '';\n            SUPPORTED_PLATFORMS.forEach((v) => {\n                if (p[v]) platforms += `${v}, `;\n            });\n            if (platforms.length) platforms = platforms.slice(0, platforms.length - 2);\n            const installedPlugin = c.buildConfig && c.buildConfig.plugins && c.buildConfig.plugins[k];\n            const installedString = installedPlugin ? chalk.yellow('installed') : chalk.green('not installed');\n            if (isUpdate && installedPlugin) {\n                output.plugins.push(k);\n                let versionString;\n                if (installedPlugin.version !== p.version) {\n                    versionString = `(${chalk.yellow(installedPlugin.version)}) => (${chalk.green(p.version)})`;\n                } else {\n                    versionString = `(${chalk.green(installedPlugin.version)})`;\n                }\n                output.asString += ` [${i}]> ${chalk.bold(k)} ${versionString}\\n`;\n                output.asArray.push({ name: `${k} ${versionString}`, value: k });\n                output.allPlugins[k] = p; // this is used by rnvPluginAdd\n                i++;\n            } else if (!isUpdate) {\n                output.plugins.push(k);\n                output.asString += ` [${i}]> ${chalk.bold(k)} (${chalk.grey(p.version)}) [${platforms}] - ${installedString}\\n`;\n                output.asArray.push({ name: `${k} (${chalk.grey(p.version)}) [${platforms}] - ${installedString}`, value: k });\n                output.allPlugins[k] = p; // this is used by rnvPluginAdd\n\n                i++;\n            }\n            output.asArray.sort((a, b) => {\n                const aStr = a.name.toLowerCase();\n                const bStr = b.name.toLowerCase();\n                let com = 0;\n                if (aStr > bStr) {\n                    com = 1;\n                } else if (aStr < bStr) {\n                    com = -1;\n                }\n                return com;\n            });\n        });\n    });\n\n\n    return output;\n};\n\nexport const rnvPluginAdd = async (c) => {\n    logTask('rnvPluginAdd');\n\n    const o = _getPluginList(c);\n\n    const { plugin } = await inquirer.prompt({\n        name: 'plugin',\n        type: 'rawlist',\n        message: 'Select the plugins you want to add',\n        choices: o.asArray,\n        pageSize: 50\n    });\n\n    const installMessage = [];\n    const selectedPlugins = {};\n    selectedPlugins[plugin] = o.allPlugins[plugin];\n    installMessage.push(`${chalk.white(plugin)} v(${chalk.green(o.allPlugins[plugin].version)})`);\n\n    const questionPlugins = {}\n\n    Object.keys(selectedPlugins).forEach((key) => {\n        // c.buildConfig.plugins[key] = 'source:rnv';\n        const plugin = selectedPlugins[key]\n        if(plugin.props) questionPlugins[key] = plugin;\n        c.files.project.config.plugins[key] = 'source:rnv';\n\n        // c.buildConfig.plugins[key] = selectedPlugins[key];\n        _checkAndAddDependantPlugins(c, selectedPlugins[key]);\n    });\n\n    const pluginKeys = Object.keys(questionPlugins)\n    for(let i = 0; i < pluginKeys.length; i++) {\n        const pluginKey = pluginKeys[i]\n        const plugin = questionPlugins[pluginKey];\n        const pluginProps = Object.keys(plugin.props);\n        const finalProps = {}\n        for(let i2 = 0; i2 < pluginProps.length; i2 ++) {\n            const { propValue } = await inquirer.prompt({\n                name: 'propValue',\n                type: 'input',\n                message: `${pluginKey}: Add value for ${pluginProps[i2]} (You can do this later in ./renative.json file)`\n            });\n            finalProps[pluginProps[i2]] = propValue\n        }\n        c.files.project.config.plugins[pluginKey] = {}\n        c.files.project.config.plugins[pluginKey].props = finalProps\n    }\n\n    const spinner = ora(`Installing: ${installMessage.join(', ')}`).start();\n\n    writeFileSync(c.paths.project.config, c.files.project.config);\n    spinner.succeed('All plugins installed!');\n    logSuccess('Plugins installed successfully!');\n};\n\nconst _checkAndAddDependantPlugins = (c, plugin) => {\n    if (plugin.dependsOn) {\n        plugin.dependsOn.forEach((v) => {\n            Object.keys(c.files.rnv.pluginTemplates.configs).forEach((p) => {\n                const templatePlugins = c.files.rnv.pluginTemplates.configs[p].pluginTemplates;\n                if (templatePlugins[v]) {\n                    console.log(`Added dependant plugin ${v}`);\n                    c.buildConfig.plugins[v] = templatePlugins[v];\n                }\n            });\n        });\n    }\n};\n\nexport const rnvPluginUpdate = async (c) => {\n    logTask('rnvPluginUpdate');\n\n    const o = _getPluginList(c, true);\n\n    console.log(o.asString);\n\n    const { confirm } = await inquirer.prompt({\n        name: 'confirm',\n        type: 'confirm',\n        message: 'Above installed plugins will be updated with RNV',\n    });\n\n    if (confirm) {\n        const { plugins } = c.buildConfig;\n        Object.keys(plugins).forEach((key) => {\n            // c.buildConfig.plugins[key] = o.json[key];\n            c.files.project.config.plugins[key] = o.json[key];\n        });\n\n        writeFileSync(c.paths.project.config, c.files.project.config);\n\n        logSuccess('Plugins updated successfully!');\n    }\n};\n\nconst getMergedPlugin = (c, key, plugins, noMerge = false) => {\n    const plugin = plugins[key];\n\n    // const origPlugin = c.files.rnv.pluginTemplates.config.pluginTemplates[key];\n    const rnvPlugin = c.files.rnv.pluginTemplates.configs?.rnv?.pluginTemplates?.[key];\n\n    let origPlugin;\n    if (typeof plugin === 'string' || plugin instanceof String) {\n        const scope = plugin.split(':').pop();\n\n        origPlugin = c.files.rnv.pluginTemplates.configs[scope]?.pluginTemplates?.[key];\n\n        if (origPlugin) {\n            if (rnvPlugin && !origPlugin?.skipMerge) {\n                origPlugin = _getMergedPlugin(c, rnvPlugin, origPlugin, true, true);\n            }\n            return origPlugin;\n        }\n        logWarning(`Plugin ${key} is not recognized plugin in ${plugin} scope`);\n        return null;\n    }\n\n    if (plugin) {\n        if (plugin.source) {\n            origPlugin = c.files.rnv.pluginTemplates.configs[plugin.source]?.pluginTemplates?.[key];\n            if (rnvPlugin && !origPlugin?.skipMerge) {\n                origPlugin = _getMergedPlugin(c, rnvPlugin, origPlugin, true, true);\n            }\n        } else {\n            origPlugin = rnvPlugin;\n        }\n    }\n\n\n    if (origPlugin) {\n        const mergedPlugin = _getMergedPlugin(c, origPlugin, plugin, true, true);\n        return mergedPlugin;\n    }\n\n    return plugin;\n};\n\nconst _getMergedPlugin = (c, obj1, obj2) => {\n    const obj = sanitizeDynamicProps(mergeObjects(c, obj1, obj2, true, true), c.buildConfig?._refs);\n    return sanitizeDynamicProps(obj, obj.props);\n};\n\n\nexport const configurePlugins = c => new Promise((resolve, reject) => {\n    logTask('configurePlugins');\n\n    if (!c.files.project.package.dependencies) {\n        c.files.project.package.dependencies = {};\n    }\n\n    let hasPackageChanged = false;\n\n    for (const k in c.buildConfig.plugins) {\n        const { dependencies } = c.files.project.package;\n        const { devDependencies } = c.files.project.package;\n        const plugin = getMergedPlugin(c, k, c.buildConfig.plugins);\n\n        if (!plugin) {\n            logWarning(`Plugin with name ${\n                chalk.white(k)} does not exists in ReNative source:rnv scope. you need to define it manually here: ${\n                chalk.white(c.paths.project.builds.config)}`);\n        } else if (dependencies && dependencies[k]) {\n            if (plugin['no-active'] !== true && plugin['no-npm'] !== true && dependencies[k] !== plugin.version) {\n                if (k === 'renative' && c.runtime.isWrapper) {\n                    logWarning('You\\'re in ReNative wrapper mode. plugin renative will stay as local dep!');\n                } else {\n                    logWarning(\n                        `Version mismatch of dependency ${chalk.white(k)} between:\n  ${chalk.white(c.paths.project.package)}: v(${chalk.red(dependencies[k])}) and\n  ${chalk.white(c.paths.project.builds.config)}: v(${chalk.green(plugin.version)}).\n  package.json will be overriden`\n                    );\n\n                    hasPackageChanged = true;\n                    dependencies[k] = plugin.version;\n                }\n            }\n        } else if (devDependencies && devDependencies[k]) {\n            if (plugin['no-active'] !== true && plugin['no-npm'] !== true && devDependencies[k] !== plugin.version) {\n                logWarning(\n                    `Version mismatch of devDependency ${chalk.white(k)} between package.json: v(${chalk.red(\n                        devDependencies[k],\n                    )}) and plugins.json: v(${chalk.red(plugin.version)}). package.json will be overriden`,\n                );\n                hasPackageChanged = true;\n                devDependencies[k] = plugin.version;\n            }\n        } else if (plugin['no-active'] !== true && plugin['no-npm'] !== true) {\n            // Dependency does not exists\n            logWarning(\n                `Missing dependency ${chalk.white(k)} v(${chalk.red(\n                    plugin.version,\n                )}) in package.json. package.json will be overriden`,\n            );\n\n            hasPackageChanged = true;\n            dependencies[k] = plugin.version;\n        }\n\n        if (plugin && plugin.npm) {\n            for (const npmKey in plugin.npm) {\n                const npmDep = plugin.npm[npmKey];\n                if (dependencies[npmKey] !== npmDep) {\n                    logWarning(`Plugin ${chalk.white(k)} requires npm dependency ${chalk.white(npmKey)} .Adding missing npm dependency to you package.json`);\n                    dependencies[npmKey] = npmDep;\n                    hasPackageChanged = true;\n                }\n            }\n        }\n    }\n\n    logTask(`configurePlugins:${hasPackageChanged}`, chalk.grey);\n    versionCheck(c)\n        .then(() => {\n            if (hasPackageChanged && !c.runtime.skipPackageUpdate) {\n                writeFileSync(c.paths.project.package, c.files.project.package);\n                c._requiresNpmInstall = true;\n            }\n            resolve();\n        }).catch(e => reject(e));\n});\n\nconst parsePlugins = (c, platform, pluginCallback) => {\n    logTask(`parsePlugins:${platform}`);\n    if (c.buildConfig) {\n        const includedPlugins = getConfigProp(c, platform, 'includedPlugins', []);\n        const excludedPlugins = getConfigProp(c, platform, 'excludedPlugins', []);\n        if (includedPlugins) {\n            const { plugins } = c.buildConfig;\n            if (plugins) {\n                Object.keys(plugins).forEach((key) => {\n                    if ((includedPlugins.includes('*') || includedPlugins.includes(key)) && !excludedPlugins.includes(key)) {\n                        const plugin = getMergedPlugin(c, key, plugins);\n                        if (plugin) {\n                            const pluginPlat = plugin[platform];\n                            if (pluginPlat) {\n                                if (plugin['no-active'] !== true && plugin.enabled !== false && pluginPlat.enabled !== false) {\n                                    if (plugin.deprecated) {\n                                        logWarning(plugin.deprecated);\n                                    }\n                                    if (pluginCallback) pluginCallback(plugin, pluginPlat, key);\n                                } else {\n                                    logWarning(`Plugin ${key} is marked disabled. skipping.`);\n                                }\n                            }\n                        }\n                    }\n                });\n            } else {\n                logError(`You have no plugins defined in ${chalk.white(c.paths.project.builds.config)}`);\n            }\n        } else {\n            logWarning(`You haven't included any ${chalk.white('{ common: { includedPlugins: [] }}')} in your ${chalk.white(c.paths.appConfig.config)}. Your app might not work correctly`);\n        }\n    }\n};\n\nconst getLocalRenativePlugin = () => ({\n    version: 'file:./packages/renative',\n    webpack: {\n        modulePaths: [],\n        moduleAliases: {\n            renative: {\n                projectPath: 'packages/renative'\n            }\n        }\n    }\n});\n\nexport { getMergedPlugin, parsePlugins, getLocalRenativePlugin };\n\nexport default { getMergedPlugin, parsePlugins, getLocalRenativePlugin };\n"],"mappings":"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"}