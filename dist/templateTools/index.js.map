{"version":3,"sources":["../../src/templateTools/index.js"],"names":["addTemplate","c","template","files","project","config","templates","version","_writeObjectSync","paths","checkIfTemplateInstalled","Promise","resolve","reject","buildConfig","chalk","white","k","t","obj","startsWith","replace","templateFolder","path","join","nodeModulesDir","fs","existsSync","_requiresNpmInstall","package","devDependencies","applyTemplate","selectedTemplate","currentTemplate","runtime","opts","getInstalledTemplateOptions","inquirer","prompt","type","name","message","choices","keysAsArray","_applyTemplate","_configureSrc","_configureAppConfigs","_configureProjectConfig","_configureRenativeConfig","configureEntryPoints","_cleanProjectTemplateSync","dirsToRemove","projectConfig","dir","srcDir","appConfigsDir","filesToRemove","defaults","supportedPlatforms","map","p","isWrapper","configTemplate","RENATIVE_CONFIG_TEMPLATE_NAME","grey","projectConfigDir","Object","keys","requiresForcedTemplateApply","appId","appConfigIds","forEach","v","appConfigPath","RENATIVE_CONFIG_NAME","appConfig","common","title","id","supPlats","pk","platforms","includes","templateConfig","isNew","mergedObj","plugins","renative","configLocal","plat","source","entryFile","backupSource","rnv","projectTemplate","dest","e","s","getTemplateOptions","projectTemplates","i","mapping","defaultVal","exists","installed","yellow","bold","rnvTemplateList","asString","rnvTemplateAdd","rnvTemplateApply","program"],"mappings":"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","sourcesContent":["import chalk from 'chalk';\nimport fs from 'fs';\nimport path from 'path';\nimport inquirer from 'inquirer';\n\nimport { RENATIVE_CONFIG_NAME, RENATIVE_CONFIG_TEMPLATE_NAME } from '../constants';\nimport {\n    copyFolderContentsRecursiveSync,\n    copyFileSync, writeFileSync, removeDirsSync,\n    removeFilesSync, mergeObjects, readObjectSync\n} from '../systemTools/fileutils';\nimport { logToSummary, logError, logInfo, logWarning, logTask } from '../systemTools/logger';\nimport { getLocalRenativePlugin } from '../pluginTools';\nimport { generateOptions } from '../systemTools/prompt';\nimport { setAppConfig, listAppConfigsFoldersSync, generateBuildConfig, generateLocalConfig, updateConfig } from '../configTools/configParser';\n\n\n// let templateName = c.buildConfig.currentTemplate;\n// if (!templateName) {\n//     templateName = 'renative-template-hello-world';\n//     logWarning(`You're missing template name in your ${chalk.white(c.paths.project.config)}. ReNative will add default ${chalk.white(templateName)} for you`);\n//     c.buildConfig.defaults.template = templateName;\n//     fs.writeFileSync(c.paths.project.config, JSON.stringify(c.files.project.config, null, 2));\n// }\n\n\nexport const addTemplate = (c, template) => {\n    logTask('addTemplate');\n\n    c.files.project.config.templates = c.files.project.config.templates || {};\n\n    if (!c.files.project.config.templates[template]) {\n        c.files.project.config.templates[template] = {\n            version: 'latest'\n        };\n    }\n\n    _writeObjectSync(c, c.paths.project.config, c.files.project.config);\n};\n\nexport const checkIfTemplateInstalled = c => new Promise((resolve, reject) => {\n    logTask('checkIfTemplateInstalled');\n    if (!c.buildConfig.templates) {\n        logWarning(`Your ${chalk.white(c.paths.project.config)} does not contain ${chalk.white('templates')} object. ReNative will skip template generation`);\n        resolve();\n        return;\n    }\n\n    for (const k in c.buildConfig.templates) {\n        let t = k;\n        const obj = c.buildConfig.templates[k];\n        if (k.version && k.version.startsWith('file:')) {\n            t = `../${k.version.replace('file:', '')}`;\n        }\n        const templateFolder = path.join(c.paths.project.nodeModulesDir, k);\n        if (!fs.existsSync(templateFolder)) {\n            logWarning(`Your ${chalk.white(templateFolder)} template is not installed. ReNative will install it for you`);\n            // npmInstall(c).then(() => resolve()).catch(e => reject(e));\n            // return;\n            c._requiresNpmInstall = true;\n        }\n        if (c.files.project.package.devDependencies) {\n            c.files.project.package.devDependencies[k] = obj.version;\n        }\n    }\n    _writeObjectSync(c, c.paths.project.package, c.files.project.package);\n\n    resolve();\n});\n\nexport const applyTemplate = async (c, selectedTemplate) => {\n    logTask(`applyTemplate:${c.buildConfig.currentTemplate}=>${selectedTemplate}:`);\n    c.runtime.selectedTemplate = selectedTemplate;\n\n    if (!c.buildConfig.currentTemplate) {\n        logWarning('You don\\'t have any current template selected');\n        const opts = getInstalledTemplateOptions(c);\n\n        const { template } = await inquirer.prompt({\n            type: 'list',\n            name: 'template',\n            message: 'Pick which template to apply',\n            choices: opts.keysAsArray\n        });\n\n        c.buildConfig.currentTemplate = template;\n        c.files.project.config.currentTemplate = template;\n        _writeObjectSync(c, c.paths.project.config, c.files.project.config);\n    }\n\n    await _applyTemplate(c);\n    await _configureSrc(c);\n    await _configureAppConfigs(c);\n    await _configureProjectConfig(c);\n    await _configureRenativeConfig(c);\n    await configureEntryPoints(c);\n};\n\nconst _cleanProjectTemplateSync = (c) => {\n    logTask('_cleanProjectTemplateSync');\n    const dirsToRemove = [\n        path.join(c.paths.project.projectConfig.dir),\n        path.join(c.paths.project.srcDir),\n        path.join(c.paths.project.appConfigsDir)\n    ];\n\n    const filesToRemove = c.buildConfig.defaults.supportedPlatforms.map(p => path.join(c.paths.project.dir, `index.${p}.js`));\n\n    removeDirsSync(dirsToRemove);\n    // TODO: NOT SERVED FROM TEMPLATE YET\n    removeFilesSync(filesToRemove);\n};\n\nconst _applyTemplate = async (c) => {\n    logTask(`_applyTemplate:${c.runtime.selectedTemplate}`);\n\n    if (c.runtime.selectedTemplate) {\n        _cleanProjectTemplateSync(c);\n        if (c.runtime.isWrapper) {\n            c.paths.template.dir = path.join(c.paths.project.dir, 'packages', c.runtime.selectedTemplate);\n        } else {\n            c.paths.template.dir = path.join(c.paths.project.nodeModulesDir, c.runtime.selectedTemplate);\n        }\n    } else {\n        c.paths.template.dir = path.join(c.paths.project.nodeModulesDir, c.buildConfig.currentTemplate);\n    }\n\n    c.paths.template.configTemplate = path.join(c.paths.template.dir, RENATIVE_CONFIG_TEMPLATE_NAME);\n\n    if (!fs.existsSync(c.paths.template.configTemplate)) {\n        logWarning(`Template file ${chalk.white(c.paths.template.configTemplate)} does not exist. check your ${chalk.white(c.paths.template.dir)}. skipping`);\n        return true;\n    }\n\n    logTask(`_applyTemplate:${c.runtime.selectedTemplate}:${c.paths.template.dir}`, chalk.grey);\n\n    c.paths.template.appConfigsDir = path.join(c.paths.template.dir, 'appConfigs');\n    c.paths.template.projectConfigDir = path.join(c.paths.template.dir, 'projectConfig');\n    c.runtime.currentTemplate = c.files.project.config.currentTemplate;\n    if (!c.runtime.currentTemplate) {\n        c.runtime.currentTemplate = Object.keys(c.files.project.config.templates)[0];\n        c.runtime.requiresForcedTemplateApply = true;\n    }\n\n    await setAppConfig(c, c.runtime.appId);\n    generateLocalConfig(c, !!c.runtime.selectedTemplate);\n\n    return true;\n};\n\nconst _configureSrc = c => new Promise((resolve, reject) => {\n    // Check src\n    logTask('configureProject:check src', chalk.grey);\n    if (!fs.existsSync(c.paths.project.srcDir)) {\n        logInfo(`Looks like your src folder ${chalk.white(c.paths.project.srcDir)} is missing! Let's create one for you.`);\n        copyFolderContentsRecursiveSync(path.join(c.paths.template.dir, 'src'), c.paths.project.srcDir);\n    }\n    resolve();\n});\n\n\nconst _configureAppConfigs = async (c) => {\n    // Check appConfigs\n    logTask('configureProject:check appConfigs', chalk.grey);\n    //\n    if (!fs.existsSync(c.paths.project.appConfigsDir)) {\n        logInfo(\n            `Looks like your appConfig folder ${chalk.white(\n                c.paths.project.appConfigsDir,\n            )} is missing! ReNative will create one from template.`,\n        );\n\n        // TODO: GET CORRECT PROJECT TEMPLATE\n        copyFolderContentsRecursiveSync(c.paths.template.appConfigsDir, c.paths.project.appConfigsDir);\n\n        const appConfigIds = listAppConfigsFoldersSync(c, true);\n\n        // Update App Title to match package.json\n        try {\n            appConfigIds.forEach((v) => {\n                const appConfigPath = path.join(c.paths.project.appConfigsDir, v, RENATIVE_CONFIG_NAME);\n                const appConfig = readObjectSync(appConfigPath);\n                if (appConfig) {\n                    appConfig.common = appConfig.common || {};\n                    if (!c.runtime.isWrapper) {\n                        appConfig.common.title = c.files.project.config?.defaults?.title;\n                        appConfig.common.id = c.files.project.config?.defaults?.id;\n                    }\n\n                    _writeObjectSync(c, appConfigPath, appConfig);\n                }\n            });\n\n            const supPlats = c.files.project?.defaults?.supportedPlatforms;\n\n            if (supPlats) {\n                for (const pk in appConfig.platforms) {\n                    if (!supPlats.includes(pk)) {\n                        delete appConfig.platforms[pk];\n                    }\n                }\n            }\n            await updateConfig(c, true);\n        } catch (e) {\n            logError(e);\n        }\n    }\n};\n\nconst _configureProjectConfig = c => new Promise((resolve, reject) => {\n    // Check projectConfigs\n    logTask('configureProject:check projectConfigs', chalk.grey);\n    if (!fs.existsSync(c.paths.project.projectConfig.dir)) {\n        logInfo(\n            `Looks like your projectConfig folder ${chalk.white(c.paths.project.projectConfig.dir)} is missing! Let's create one for you.`,\n        );\n        copyFolderContentsRecursiveSync(c.paths.template.projectConfigDir, c.paths.project.projectConfig.dir);\n    }\n    resolve();\n});\n\nconst _configureRenativeConfig = c => new Promise((resolve, reject) => {\n    // renative.json\n    const templateConfig = readObjectSync(c.paths.template.configTemplate);\n    logTask('configureProject:check renative.json', chalk.grey);\n    if (!c.runtime.isWrapper) {\n        if (c.runtime.selectedTemplate || c.runtime.requiresForcedTemplateApply || c.files.project.config.isNew) {\n            logWarning(\n                `Looks like your ${c.paths.project.config} need to be updated with ${c.paths.template.configTemplate}`,\n            );\n            const mergedObj = mergeObjects(c, c.files.project.config, templateConfig, false, true);\n            mergedObj.currentTemplate = c.runtime.currentTemplate;\n            mergedObj.isNew = null;\n            delete mergedObj.isNew;\n            c.files.project.config = mergedObj;\n            _writeObjectSync(c, c.paths.project.config, mergedObj);\n        }\n    } else {\n        if (templateConfig.plugins.renative) {\n            templateConfig.plugins.renative = getLocalRenativePlugin();\n        }\n        _writeObjectSync(c, c.paths.project.configLocal, templateConfig);\n    }\n    resolve();\n});\n\nexport const configureEntryPoints = c => new Promise((resolve, reject) => {\n    logTask('configureEntryPoints');\n    // Check entry\n    // TODO: RN bundle command fails if entry files are not at root\n    // logTask('configureProject:check entry');\n    // if (!fs.existsSync(c.paths.entryDir)) {\n    //     logWarning(`Looks like your entry folder ${chalk.white(c.paths.entryDir)} is missing! Let's create one for you.`);\n    //     copyFolderContentsRecursiveSync(path.join(c.paths.rnv.dir, 'entry'), c.paths.entryDir);\n    // }\n\n    try {\n        if (!fs.existsSync(c.paths.appConfig.config)) {\n            logWarning(`ERROR: c.paths.appConfig.config: ${c.paths.appConfig.config} does not exist`);\n            resolve();\n            return;\n        }\n        let plat;\n        const p = c.buildConfig.platforms;\n        const supportedPlatforms = c.buildConfig.defaults?.supportedPlatforms;\n        for (const k in p) {\n            if (supportedPlatforms && supportedPlatforms.includes(k) || !supportedPlatforms) {\n                plat = p[k];\n                const source = path.join(c.paths.template.dir, `${plat.entryFile}.js`);\n                const backupSource = path.join(c.paths.rnv.projectTemplate.dir, 'entry', `${plat.entryFile}.js`);\n                const dest = path.join(c.paths.project.dir, `${plat.entryFile}.js`);\n                if (!fs.existsSync(dest)) {\n                    if (!plat.entryFile) {\n                        logWarning(`You missing entryFile for ${chalk.white(k)} platform in your ${chalk.white(c.paths.appConfig.config)}.`);\n                    } else if (!fs.existsSync(source)) {\n                        logInfo(`You missing entry file ${chalk.white(source)} in your template. ReNative Will use default backup entry from ${chalk.white(backupSource)}!`);\n                        copyFileSync(backupSource, dest);\n                    } else {\n                        logInfo(`You missing entry file ${chalk.white(plat.entryFile)} in your project. let's create one for you!`);\n                        copyFileSync(source, dest);\n                    }\n                }\n            } else {\n                logWarning(`Extra platform ${chalk.white(k)} will be ignored because it's not configured in your ${chalk.white('./renative.json: { defaults.supportedPlatforms }')} object.`);\n            }\n        }\n    } catch (e) {\n        reject();\n        return;\n    }\n\n    resolve();\n});\n\nconst _writeObjectSync = (c, p, s) => {\n    writeFileSync(p, s);\n    generateBuildConfig(c);\n};\n\nexport const getTemplateOptions = c => generateOptions(c.buildConfig.projectTemplates, false, null, (i, obj, mapping, defaultVal) => {\n    const exists = c.buildConfig.templates?.[defaultVal];\n    const installed = exists ? chalk.yellow(' (installed)') : '';\n    return ` [${chalk.grey(i + 1)}]> ${chalk.bold(defaultVal)}${installed} \\n`;\n});\n\nexport const getInstalledTemplateOptions = (c) => {\n    if (c.buildConfig.templates) {\n        return generateOptions(c.buildConfig.templates);\n    }\n    logError('You don\\'t have any local templates installed', false, true);\n    return [];\n};\n\n\nexport const rnvTemplateList = c => new Promise((resolve, reject) => {\n    logTask('rnvTemplateList');\n    const opts = getTemplateOptions(c);\n    logToSummary(`Templates:\\n\\n${opts.asString}`);\n    resolve();\n});\n\nexport const rnvTemplateAdd = async (c) => {\n    logTask('rnvTemplateAdd');\n\n    const opts = getTemplateOptions(c);\n\n    const { template } = await inquirer.prompt({\n        type: 'list',\n        message: 'Pick which template to install',\n        name: 'template',\n        choices: opts.keysAsArray\n    });\n\n    addTemplate(c, template);\n};\n\nexport const rnvTemplateApply = async (c) => {\n    logTask(`rnvTemplateApply:${c.program.template}`);\n\n    if (c.program.template) {\n        return applyTemplate(c, c.program.template);\n    }\n    const opts = getInstalledTemplateOptions(c);\n\n    const { template } = await inquirer.prompt({\n        type: 'list',\n        message: 'Pick which template to install',\n        name: 'template',\n        choices: opts.keysAsArray\n    });\n\n    applyTemplate(c, template);\n};\n"],"file":"index.js"}