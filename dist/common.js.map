{"version":3,"file":"common.js","names":["initializeBuilder","cmd","subCmd","process","program","c","createRnvConfig","configureLogger","command","subCommand","info","logInitialize","generateChecksum","str","algorithm","encoding","crypto","createHash","update","digest","getSourceExts","sExt","PLATFORMS","platform","sourceExts","factors","platforms","fallbacks","getSourceExtsAsString","length","join","sanitizeColor","val","logWarning","rgb","rgbDecimal","hex","colorString","get","to","map","v","Math","round","isBuildSchemeSupported","logTask","scheme","buildConfig","buildSchemes","schemeDoesNotExist","logError","opts","generateOptions","inquirerPrompt","name","type","message","choices","keysAsArray","logMessage","selectedScheme","confirmActiveBundler","runtime","skipActiveServerCheck","warningMessage","port","confirm","Promise","reject","getAppFolder","path","paths","project","builds","dir","appId","getAppSubFolder","subFolder","IOS","TVOS","getAppTemplateFolder","platformTemplatesDirs","CLI_PROPS","getConfigProp","key","defaultVal","p","ps","resultPlatforms","undefined","getFlavouredProp","resultCli","includes","resultScheme","resultCommon","common","result","Config","getValueOrMergedObject","chalk","grey","getAppId","id","idSuffix","getAppTitle","getAppVersion","files","package","version","getAppAuthor","author","getAppLicense","license","getEntryFile","entryFile","getGetJsBundleFile","getAppDescription","description","getAppVersionCode","versionCode","vc","split","forEach","Number","toString","logErrorPlatform","white","PLATFORM_RUNS","configureIfRequired","device","nc","appConfig","reset","cleanPlatformBuild","resetHard","cleanPlaformAssets","createPlatformBuild","CLI","getBinaryPath","appFolder","signingConfig","productName","appName","ANDROID","ANDROID_TV","ANDROID_WEAR","WEB","MACOS","WINDOWS","TIZEN","TIZEN_MOBILE","WEBOS","writeCleanFile","source","destination","overrides","fs","existsSync","pFile","readFileSync","pFileClean","regEx","RegExp","pattern","replace","override","writeFileSync","getBuildsFolder","customPath","pp","getIP","ip","address","cleanPlatformIfRequired","logInfo","checkPortInUse","resolve","detectPort","err","availablePort","parseInt","resolveNodeModulePath","filePath","pth","rnv","nodeModulesDir","obj","val1","getBuildFilePath","sp","sp2","projectConfig","sp3","waitForEmulator","cli","callback","attempts","maxAttempts","CHECK_INTEVAL","maxErrorLength","spinner","ora","start","interval","setInterval","execCLI","silent","timeout","then","resp","clearInterval","succeed","fail","catch","waitForWebpack","extendConfig","devServerHost","getValidLocalhost","localhost","url","axios","res","status","importPackageFromProject","getConfig","pkg","require","default"],"sources":["../src/common.js"],"sourcesContent":["import chalk from 'chalk';\nimport fs from 'fs';\nimport path from 'path';\nimport detectPort from 'detect-port';\nimport ora from 'ora';\nimport ip from 'ip';\nimport axios from 'axios';\nimport colorString from 'color-string';\nimport crypto from 'crypto';\nimport { getValidLocalhost } from './utils';\nimport { createPlatformBuild, cleanPlatformBuild } from './platformTools';\nimport CLI from './cli';\nimport {\n    configureLogger, logError, logTask,\n    logWarning, logInfo,\n    logInitialize\n} from './systemTools/logger';\nimport {\n    IOS, ANDROID, ANDROID_TV, ANDROID_WEAR, WEB, TIZEN, TIZEN_MOBILE, TVOS,\n    WEBOS, MACOS, WINDOWS,\n    PLATFORMS\n} from './constants';\nimport { execCLI } from './systemTools/exec';\nimport {\n    createRnvConfig,\n} from './configTools/configParser';\nimport { cleanPlaformAssets } from './projectTools/projectParser';\nimport { generateOptions, inquirerPrompt } from './systemTools/prompt';\nimport Config from './config';\n\nexport const initializeBuilder = async (cmd, subCmd, process, program) => {\n    const c = createRnvConfig(program, process, cmd, subCmd);\n\n    configureLogger(c, c.process, c.command, c.subCommand, program.info === true);\n    logInitialize();\n\n    return c;\n};\n\n\nexport const generateChecksum = (str, algorithm, encoding) => crypto\n    .createHash(algorithm || 'md5')\n    .update(str, 'utf8')\n    .digest(encoding || 'hex');\n\nexport const getSourceExts = (c) => {\n    const sExt = PLATFORMS[c.platform]?.sourceExts;\n    if (sExt) {\n        return [...sExt.factors, ...sExt.platforms, ...sExt.fallbacks];\n    }\n    return [];\n};\n\nexport const getSourceExtsAsString = (c) => {\n    const sourceExts = getSourceExts(c);\n    return sourceExts.length ? `['${sourceExts.join('\\',\\'')}']` : '[]';\n};\n\nexport const sanitizeColor = (val) => {\n    if (!val) {\n        logWarning('sanitizeColor: passed null. will use default #FFFFFF instead');\n        return {\n            rgb: [255, 255, 255, 1],\n            rgbDecimal: [1, 1, 1, 1],\n            hex: '#FFFFFF'\n        };\n    }\n\n    const rgb = colorString.get.rgb(val);\n    const hex = colorString.to.hex(rgb);\n\n    return {\n        rgb,\n        rgbDecimal: rgb.map(v => (v > 1 ? Math.round((v / 255) * 10) / 10 : v)),\n        hex\n    };\n};\n\nexport const isBuildSchemeSupported = async (c) => {\n    logTask(`isBuildSchemeSupported:${c.platform}`);\n\n    const { scheme } = c.program;\n\n    if (!c.buildConfig.platforms[c.platform]) {\n        c.buildConfig.platforms[c.platform] = {};\n    }\n\n    const { buildSchemes } = c.buildConfig.platforms[c.platform];\n\n\n    if (!buildSchemes) {\n        logWarning(`Your appConfig for platform ${c.platform} has no buildSchemes. Will continue with defaults`);\n        return false;\n    }\n\n    const schemeDoesNotExist = scheme && !buildSchemes[scheme];\n    if (scheme === true || schemeDoesNotExist) {\n        if (schemeDoesNotExist && scheme && scheme !== true) {\n            logError('Build scheme you picked does not exists.');\n        }\n        const opts = generateOptions(buildSchemes);\n\n        const { selectedScheme } = await inquirerPrompt({\n            name: 'selectedScheme',\n            type: 'list',\n            message: 'Pick one of available buildSchemes',\n            choices: opts.keysAsArray,\n            logMessage: 'You need to specify scheme'\n        });\n\n        c.program.scheme = selectedScheme;\n        return selectedScheme;\n    }\n    return scheme;\n};\n\nexport const confirmActiveBundler = async (c) => {\n    if (c.runtime.skipActiveServerCheck) return true;\n    const { confirm } = await inquirerPrompt({\n        type: 'confirm',\n        message: 'It will be used for this session. Continue?',\n        warningMessage: `Another ${c.platform} server at port ${c.runtime.port} already running`\n    });\n\n    if (confirm) return true;\n    return Promise.reject('Cancelled by user');\n};\n\nexport const getAppFolder = (c, platform) => path.join(c.paths.project.builds.dir, `${c.runtime.appId}_${platform}`);\n\nexport const getAppSubFolder = (c, platform) => {\n    let subFolder = '';\n    if (platform === IOS) subFolder = 'RNVApp';\n    else if (platform === TVOS) subFolder = 'RNVAppTVOS';\n    return path.join(getAppFolder(c, platform), subFolder);\n};\n\nexport const getAppTemplateFolder = (c, platform) => path.join(c.paths.project.platformTemplatesDirs[platform], `${platform}`);\n\nexport const CLI_PROPS = [\n    'provisioningStyle',\n    'codeSignIdentity',\n    'provisionProfileSpecifier'\n];\n\n// We need to slowly move this to Config and refactor everything to use it from there\nexport const getConfigProp = (c, platform, key, defaultVal) => {\n    if (!c.buildConfig) {\n        logError('getConfigProp: c.buildConfig is undefined!');\n        return null;\n    }\n    const p = c.buildConfig.platforms[platform];\n    const ps = c.runtime.scheme;\n    let resultPlatforms;\n    let scheme;\n    if (p) {\n        scheme = p.buildSchemes ? p.buildSchemes[ps] : undefined;\n        resultPlatforms = getFlavouredProp(c, c.buildConfig.platforms[platform], key);\n    }\n\n    scheme = scheme || {};\n    const resultCli = CLI_PROPS.includes(key) ? c.program[key] : undefined;\n    const resultScheme = scheme[key];\n    const resultCommon = getFlavouredProp(c, c.buildConfig.common, key);\n\n    let result = Config.getValueOrMergedObject(resultCli, resultScheme, resultPlatforms, resultCommon);\n\n    if (result === undefined) result = defaultVal; // default the value only if it's not specified in any of the files. i.e. undefined\n    logTask(`getConfigProp:${platform}:${key}:${result}`, chalk.grey);\n    return result;\n};\n\nexport const getAppId = (c, platform) => {\n    const id = getConfigProp(c, platform, 'id');\n    const idSuffix = getConfigProp(c, platform, 'idSuffix');\n    return idSuffix ? `${id}${idSuffix}` : id;\n};\n\nexport const getAppTitle = (c, platform) => getConfigProp(c, platform, 'title');\n\nexport const getAppVersion = (c, platform) => getConfigProp(c, platform, 'version') || c.files.project.package?.version;\n\nexport const getAppAuthor = (c, platform) => getConfigProp(c, platform, 'author') || c.files.project.package?.author;\n\nexport const getAppLicense = (c, platform) => getConfigProp(c, platform, 'license') || c.files.project.package?.license;\n\nexport const getEntryFile = (c, platform) => c.buildConfig.platforms?.[platform]?.entryFile;\n\nexport const getGetJsBundleFile = (c, platform) => getConfigProp(c, platform, 'getJsBundleFile');\n\nexport const getAppDescription = (c, platform) => getConfigProp(c, platform, 'description') || c.files.project.package?.description;\n\nexport const getAppVersionCode = (c, platform) => {\n    const versionCode = getConfigProp(c, platform, 'versionCode');\n    if (versionCode) return versionCode;\n\n    const version = getAppVersion(c, platform);\n\n    let vc = '';\n    version\n        .split('-')[0]\n        .split('.')\n        .forEach((v) => {\n            vc += v.length > 1 ? v : `0${v}`;\n        });\n    return Number(vc).toString();\n};\n\nexport const logErrorPlatform = (c, platform) => {\n    logError(`Platform: ${chalk.white(platform)} doesn't support command: ${chalk.white(c.command)}`);\n};\n\nexport const PLATFORM_RUNS = {};\n\nexport const configureIfRequired = async (c, platform) => {\n    logTask(`configureIfRequired:${platform}`);\n\n    if (PLATFORM_RUNS[platform]) {\n        return;\n    }\n    PLATFORM_RUNS[platform] = true;\n    const { device } = c.program;\n    const nc = {\n        command: 'configure',\n        program: {\n            appConfig: c.id,\n            update: false,\n            platform,\n            device\n        }\n    };\n\n    if (c.program.reset) {\n        await cleanPlatformBuild(c, platform);\n    }\n\n    if (c.program.resetHard) {\n        await cleanPlaformAssets(c);\n    }\n    await createPlatformBuild(c, platform);\n    await CLI(c, nc);\n};\n\nexport const getBinaryPath = (c, platform) => {\n    const appFolder = getAppFolder(c, platform);\n    const id = getConfigProp(c, platform, 'id');\n    const signingConfig = getConfigProp(c, platform, 'signingConfig', 'debug');\n    const version = getAppVersion(c, platform);\n    const productName = 'ReNative - macos';\n    const appName = getConfigProp(c, platform, 'appName');\n\n    switch (platform) {\n        case IOS:\n        case TVOS:\n            return `${appFolder}/release/RNVApp.ipa`;\n        case ANDROID:\n        case ANDROID_TV:\n        case ANDROID_WEAR:\n            return `${appFolder}/app/build/outputs/apk/${signingConfig}/app-${signingConfig}.apk`;\n        case WEB:\n            return `${appFolder}/public`;\n        case MACOS:\n        case WINDOWS:\n            return `${appFolder}/build/release/${productName}-${version}`;\n        case TIZEN:\n        case TIZEN_MOBILE:\n            return `${appFolder}/output/${appName}.wgt`;\n        case WEBOS:\n            return `${appFolder}/output/${id}_${version}_all.ipk`;\n        default:\n            return appFolder;\n    }\n};\n\nexport const writeCleanFile = (source, destination, overrides) => {\n    // logTask(`writeCleanFile`)\n    if (!fs.existsSync(source)) {\n        logError(`Cannot write file. source path doesn't exists: ${source}`);\n        return;\n    }\n    if (!fs.existsSync(destination)) {\n        logWarning(`destination path doesn't exists: ${destination}. will create new one`);\n        // return;\n    }\n    const pFile = fs.readFileSync(source, 'utf8');\n    let pFileClean = pFile;\n    if (overrides) {\n        overrides.forEach((v) => {\n            const regEx = new RegExp(v.pattern, 'g');\n            pFileClean = pFileClean.replace(regEx, v.override);\n        });\n    }\n\n    fs.writeFileSync(destination, pFileClean, 'utf8');\n};\n\nexport const getBuildsFolder = (c, platform, customPath) => {\n    const pp = customPath || c.paths.appConfig.dir;\n    // if (!fs.existsSync(pp)) {\n    //     logWarning(`Path ${chalk.white(pp)} does not exist! creating one for you..`);\n    // }\n    const p = path.join(pp, `builds/${platform}@${c.runtime.scheme}`);\n    if (fs.existsSync(p)) return p;\n    return path.join(pp, `builds/${platform}`);\n};\n\nexport const getIP = () => ip.address();\n\nexport const cleanPlatformIfRequired = async (c, platform) => {\n    if (c.program.reset) {\n        logInfo(`You passed ${chalk.white('-r')} argument. paltform ${chalk.white(platform)} will be cleaned up first!`);\n        await cleanPlatformBuild(c, platform);\n    }\n};\n\nexport const checkPortInUse = (c, platform, port) => new Promise((resolve, reject) => {\n    detectPort(port, (err, availablePort) => {\n        if (err) {\n            reject(err);\n            return;\n        }\n        resolve(parseInt(port, 10) !== parseInt(availablePort, 10));\n    });\n});\n\nexport const resolveNodeModulePath = (c, filePath) => {\n    let pth = path.join(c.paths.rnv.nodeModulesDir, filePath);\n    if (!fs.existsSync(pth)) {\n        pth = path.join(c.paths.project.nodeModulesDir, filePath);\n    }\n    return pth;\n};\n\nexport const getFlavouredProp = (c, obj, key) => {\n    if (!key) return null;\n    const val1 = obj[`${key}@${c.runtime.scheme}`];\n    if (val1) return val1;\n    return obj[key];\n};\n\nexport const getBuildFilePath = (c, platform, filePath) => {\n    // P1 => platformTemplates\n    let sp = path.join(getAppTemplateFolder(c, platform), filePath);\n    // P2 => appConfigs/base + @buildSchemes\n    const sp2 = path.join(getBuildsFolder(c, platform, c.paths.project.projectConfig.dir), filePath);\n    if (fs.existsSync(sp2)) sp = sp2;\n    // P3 => appConfigs + @buildSchemes\n    const sp3 = path.join(getBuildsFolder(c, platform), filePath);\n    if (fs.existsSync(sp3)) sp = sp3;\n    return sp;\n};\n\nexport const waitForEmulator = async (c, cli, command, callback) => {\n    let attempts = 0;\n    const maxAttempts = 30;\n    const CHECK_INTEVAL = 2000;\n    const { maxErrorLength } = c.program;\n    const spinner = ora('Waiting for emulator to boot...').start();\n\n    return new Promise((resolve, reject) => {\n        const interval = setInterval(() => {\n            execCLI(c, cli, command, { silent: true, timeout: 10000, maxErrorLength })\n                .then((resp) => {\n                    if (callback(resp)) {\n                        clearInterval(interval);\n                        spinner.succeed();\n                        return resolve(true);\n                    }\n                    attempts++;\n                    if (attempts === maxAttempts) {\n                        clearInterval(interval);\n                        spinner.fail('Can\\'t connect to the running emulator. Try restarting it.');\n                        return reject('Can\\'t connect to the running emulator. Try restarting it.');\n                    }\n                }).catch(() => {\n                    attempts++;\n                    if (attempts > maxAttempts) {\n                        clearInterval(interval);\n                        spinner.fail('Can\\'t connect to the running emulator. Try restarting it.');\n                        return reject('Can\\'t connect to the running emulator. Try restarting it.');\n                    }\n                });\n        }, CHECK_INTEVAL);\n    });\n};\n\nexport const waitForWebpack = async (c) => {\n    logTask(`waitForWebpack:${c.runtime.port}`);\n    let attempts = 0;\n    const maxAttempts = 10;\n    const CHECK_INTEVAL = 2000;\n    // const spinner = ora('Waiting for webpack to finish...').start();\n\n    const extendConfig = getConfigProp(c, c.platform, 'webpackConfig', {});\n    const devServerHost = getValidLocalhost(extendConfig.devServerHost, c.runtime.localhost);\n    const url = `http://${devServerHost}:${c.runtime.port}/assets/bundle.js`;\n    return new Promise((resolve, reject) => {\n        const interval = setInterval(() => {\n            axios.get(url).then((res) => {\n                if (res.status === 200) {\n                    clearInterval(interval);\n                    // spinner.succeed();\n                    return resolve(true);\n                }\n                attempts++;\n                if (attempts === maxAttempts) {\n                    clearInterval(interval);\n                    // spinner.fail('Can\\'t connect to webpack. Try restarting it.');\n                    return reject('Can\\'t connect to webpack. Try restarting it.');\n                }\n            }).catch(() => {\n                attempts++;\n                if (attempts > maxAttempts) {\n                    clearInterval(interval);\n                    // spinner.fail('Can\\'t connect to webpack. Try restarting it.');\n                    return reject('Can\\'t connect to webpack. Try restarting it.');\n                }\n            });\n        }, CHECK_INTEVAL);\n    });\n};\nexport const importPackageFromProject = (name) => {\n    const c = Config.getConfig();\n    // eslint-disable-next-line global-require, import/no-dynamic-require\n    const pkg = require(path.join(c.paths.project.nodeModulesDir, `/${name}`));\n    if (pkg.default) return pkg.default;\n    return pkg;\n};\n\nexport default {\n    getBuildFilePath,\n    getBuildsFolder,\n    isBuildSchemeSupported,\n    getAppFolder,\n    getAppTemplateFolder,\n    initializeBuilder,\n    logErrorPlatform,\n    configureIfRequired,\n    getAppId,\n    getAppTitle,\n    getAppVersion,\n    getAppVersionCode,\n    writeCleanFile,\n    getEntryFile,\n    getGetJsBundleFile,\n    getAppDescription,\n    getAppAuthor,\n    getAppLicense,\n    getConfigProp,\n    getIP,\n    cleanPlatformIfRequired,\n    checkPortInUse,\n    resolveNodeModulePath,\n    waitForEmulator\n};\n"],"mappings":"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"}