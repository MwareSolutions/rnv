{"version":3,"file":"linux.js","names":["LinuxPlatformSetup","c","software","commandExistsSync","shell","exec","availableDownloader","logInfo","installSoftware","sdk","location","setupConfig","android","logDebug","globalConfigPath","JSON","stringify","androidSdk","updateConfigFile","files","workspace","config","sdks","ANDROID_SDK","cli","CLI_ANDROID_EMULATOR","getRealPath","path","join","CLI_ANDROID_ADB","CLI_ANDROID_AVDMANAGER","CLI_ANDROID_SDKMANAGER","BasePlatformSetup"],"sources":["../../src/setupTools/linux.js"],"sourcesContent":["import shell from 'shelljs';\nimport path from 'path';\n\nimport { commandExistsSync } from '../systemTools/exec';\nimport { logInfo, logDebug } from '../systemTools/logger';\nimport BasePlatformSetup from './base';\nimport { updateConfigFile, getRealPath } from '../systemTools/fileutils';\nimport setupConfig from './config';\nimport {\n    CLI_ANDROID_ADB,\n    CLI_ANDROID_AVDMANAGER,\n    CLI_ANDROID_EMULATOR,\n    CLI_ANDROID_SDKMANAGER\n} from '../constants';\n\nclass LinuxPlatformSetup extends BasePlatformSetup {\n    constructor(c) {\n        super('linux', c);\n    }\n\n    async installSoftware(software) {\n        if (commandExistsSync('apt-get')) {\n            await shell.exec(`apt-get -qq update && apt-get install ${software} -y > /dev/null`);\n        }\n        // @todo also treat other linux flavours\n        return true;\n    }\n\n    async installPrereqs() {\n        if (!this.availableDownloader) {\n            logInfo('Looks like you don\\'t have wget or curl installed. We\\'ll install wget for you');\n            await this.installSoftware('wget');\n            this.availableDownloader = 'wget';\n        }\n\n        if (!commandExistsSync('unzip')) {\n            logInfo('Looks like you don\\'t have unzip installed. We\\'ll install it for you');\n            await this.installSoftware('unzip');\n        }\n\n        if (!commandExistsSync('javac')) {\n            logInfo('Looks like you don\\'t have java installed. We\\'ll install it for you');\n            await this.installSoftware('openjdk-8-jdk');\n        }\n\n        return true;\n    }\n\n    async postInstall(sdk) {\n        if (sdk === 'android') {\n            const { location } = setupConfig.android;\n            logDebug(`Updating ${this.globalConfigPath} with ${JSON.stringify({ androidSdk: location })}`);\n            await updateConfigFile({ androidSdk: location }, this.globalConfigPath);\n            // @todo find a more elegant way to update this\n            this.c.files.workspace.config.sdks.ANDROID_SDK = location;\n            const { sdks: { ANDROID_SDK } } = this.c.files.workspace.config;\n            this.c.cli[CLI_ANDROID_EMULATOR] = getRealPath(this.c, path.join(ANDROID_SDK, 'emulator/emulator'));\n            this.c.cli[CLI_ANDROID_ADB] = getRealPath(this.c, path.join(ANDROID_SDK, 'platform-tools/adb'));\n            this.c.cli[CLI_ANDROID_AVDMANAGER] = getRealPath(this.c, path.join(ANDROID_SDK, 'tools/bin/avdmanager'));\n            this.c.cli[CLI_ANDROID_SDKMANAGER] = getRealPath(this.c, path.join(ANDROID_SDK, 'tools/bin/sdkmanager'));\n        }\n    }\n}\n\nexport default LinuxPlatformSetup;\n"],"mappings":"4sBAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uCAKsB;;;;;;;AAEhBA,kBAAkB;AACpB,4BAAYC,CAAC,CAAE;AACL,OAAO,CAAEA,CAAC;AACpB,CAAC;;AAED,yBAAsBC,QAAQ;AACtB,GAAAC,uBAAiB,EAAC,SAAS,CAAC;AACtBC,gBAAK,CAACC,IAAI,0CAA0CH,QAAQ,mBAAkB;;;AAGjF,IAAI,sEACd;;;AAED;AACS,IAAI,CAACI,mBAAmB;AACzB,GAAAC,eAAO,EAAC,gFAAgF,CAAC,CAAC;AACpF,IAAI,CAACC,eAAe,CAAC,MAAM,CAAC;AAClC,IAAI,CAACF,mBAAmB,CAAG,MAAM,CAAC;;;AAGjC,GAAAH,uBAAiB,EAAC,OAAO,CAAC;AAC3B,GAAAI,eAAO,EAAC,uEAAuE,CAAC,CAAC;AAC3E,IAAI,CAACC,eAAe,CAAC,OAAO,CAAC;;;AAGlC,GAAAL,uBAAiB,EAAC,OAAO,CAAC;AAC3B,GAAAI,eAAO,EAAC,sEAAsE,CAAC,CAAC;AAC1E,IAAI,CAACC,eAAe,CAAC,eAAe,CAAC;;;AAGxC,IAAI,wEACd;;;AAED,qBAAkBC,GAAG;AACbA,GAAG,GAAK,SAAS;AACTC,QAAQ,CAAKC,eAAW,CAACC,OAAO,CAAhCF,QAAQ;AAChB,GAAAG,gBAAQ,cAAa,IAAI,CAACC,gBAAgB,UAASC,IAAI,CAACC,SAAS,CAAC,CAAEC,UAAU,CAAEP,QAAS,CAAC,CAAC,CAAG,CAAC;AACzF,GAAAQ,2BAAgB,EAAC,CAAED,UAAU,CAAEP,QAAS,CAAC,CAAE,IAAI,CAACI,gBAAgB,CAAC;;AAEvE,IAAI,CAACb,CAAC,CAACkB,KAAK,CAACC,SAAS,CAACC,MAAM,CAACC,IAAI,CAACC,WAAW,CAAGb,QAAQ;AACzCa,WAAW,CAAO,IAAI,CAACtB,CAAC,CAACkB,KAAK,CAACC,SAAS,CAACC,MAAM,CAAvDC,IAAI,CAAIC,WAAW;AAC3B,IAAI,CAACtB,CAAC,CAACuB,GAAG,CAACC,+BAAoB,CAAC,CAAG,GAAAC,sBAAW,EAAC,IAAI,CAACzB,CAAC,CAAE0B,aAAI,CAACC,IAAI,CAACL,WAAW,CAAE,mBAAmB,CAAC,CAAC;AACnG,IAAI,CAACtB,CAAC,CAACuB,GAAG,CAACK,0BAAe,CAAC,CAAG,GAAAH,sBAAW,EAAC,IAAI,CAACzB,CAAC,CAAE0B,aAAI,CAACC,IAAI,CAACL,WAAW,CAAE,oBAAoB,CAAC,CAAC;AAC/F,IAAI,CAACtB,CAAC,CAACuB,GAAG,CAACM,iCAAsB,CAAC,CAAG,GAAAJ,sBAAW,EAAC,IAAI,CAACzB,CAAC,CAAE0B,aAAI,CAACC,IAAI,CAACL,WAAW,CAAE,sBAAsB,CAAC,CAAC;AACxG,IAAI,CAACtB,CAAC,CAACuB,GAAG,CAACO,iCAAsB,CAAC,CAAG,GAAAL,sBAAW,EAAC,IAAI,CAACzB,CAAC,CAAE0B,aAAI,CAACC,IAAI,CAACL,WAAW,CAAE,sBAAsB,CAAC,CAAC,CAAC,sEAEhH,gCA9C4BS,aAAiB;;;;;AAiDnChC,kBAAkB"}