{"version":3,"file":"windows.js","names":["LinuxPlatformSetup","c","scoopInstalled","logInfo","os","commandExistsSync","availableDownloader","software","shell","exec","replaceHomeFolder","reloadPathEnv","bucket","getInstalledPathSync","installSoftware","addScoopBucket","logDebug","executeAsync","androidSdkLocation","sdksToInstall","downloadDir","setupConfig","tizen","downloadLocation","split","pop","join","inquirer","prompt","type","name","message","default","validate","value","fs","existsSync","res","path","sdkPath","tizenSdkPath","downloadLink","webos","openCommand","webosSdkPath","BasePlatformSetup"],"sources":["../../src/setupTools/windows.js"],"sourcesContent":["import shell from 'shelljs';\nimport { getInstalledPathSync } from 'get-installed-path';\nimport path from 'path';\nimport { exec } from 'child_process';\nimport inquirer from 'inquirer';\nimport fs from 'fs';\n\nimport { commandExistsSync, executeAsync, openCommand } from '../systemTools/exec';\nimport { logInfo, logDebug } from '../systemTools/logger';\nimport { replaceHomeFolder } from '../systemTools/fileutils';\nimport BasePlatformSetup from './base';\nimport setupConfig from './config';\n\nclass LinuxPlatformSetup extends BasePlatformSetup {\n    constructor(c) {\n        super('win32', c);\n        this.scoopInstalled = false;\n    }\n\n    checkPrereqs() {\n        logInfo(`Platform ${this.os}`);\n        logInfo('Checking wget is installed');\n        if (commandExistsSync('wget')) {\n            this.availableDownloader = 'wget';\n        }\n\n        // check if scoop is installed\n        if (commandExistsSync('scoop')) {\n            this.scoopInstalled = true;\n        }\n    }\n\n    async installSoftware(software) {\n        await shell.exec(replaceHomeFolder(`~/scoop/shims/scoop install ${software}`));\n        await this.reloadPathEnv();\n        return true;\n    }\n\n    addScoopBucket(bucket) {\n        return shell.exec(replaceHomeFolder(`~/scoop/shims/scoop bucket add ${bucket}`));\n    }\n\n    async reloadPathEnv() {\n        await shell.exec(`${getInstalledPathSync('rnv')}/scripts/resetPath.vbs`);\n        await shell.exec('%TEMP%/resetvars.bat');\n        return true;\n    }\n\n    async installPrereqs() {\n        if (!this.scoopInstalled) {\n            logInfo('Installing Scoop...');\n            await shell.exec(`powershell -executionpolicy remotesigned \"& \"\"${getInstalledPathSync('rnv')}/scripts/installPackageManager.ps1\"\"\"`);\n            await this.reloadPathEnv();\n        }\n        if (!this.availableDownloader) {\n            logInfo('Looks like you don\\'t have wget or curl installed. We\\'ll install wget for you');\n            await this.installSoftware('wget');\n            this.availableDownloader = 'wget';\n        }\n\n        if (!commandExistsSync('unzip')) {\n            logInfo('Looks like you don\\'t have unzip installed. We\\'ll install it for you');\n            await this.installSoftware('unzip');\n        }\n\n        if (!commandExistsSync('javac')) {\n            logInfo('Looks like you don\\'t have java installed. We\\'ll install it for you');\n            await this.installSoftware('shellcheck');\n            await this.addScoopBucket('java');\n            await this.installSoftware('ojdkbuild8');\n        }\n\n        return true;\n    }\n\n    async installSdksAndEmulator() {\n        logDebug('Accepting licenses');\n        await executeAsync({}, `${this.androidSdkLocation}/tools/bin/sdkmanager.bat --licenses`);\n        logDebug('Installing SDKs', this.sdksToInstall);\n        await executeAsync({}, `${this.androidSdkLocation}/tools/bin/sdkmanager.bat ${this.sdksToInstall}`);\n    }\n\n    async installTizenSdk() {\n        let downloadDir = setupConfig.tizen.downloadLocation.split('/');\n        downloadDir.pop();\n        downloadDir = downloadDir.join('/');\n        logInfo(`Opening ${downloadDir}. Please install the SDK then continue after it finished installing.`);\n        exec(`start \"\" \"${downloadDir}\"`);\n\n        const res = await inquirer.prompt({\n            type: 'input',\n            name: 'sdkPath',\n            message: \"Where did you install the SDK? (if you haven't changed the default just press enter)\",\n            default: 'C:\\\\tizen-studio',\n            validate(value) {\n                if (fs.existsSync(value)) return true;\n                return 'Path does not exist';\n            }\n        });\n\n        await inquirer.prompt({\n            type: 'confirm',\n            name: 'toolsInstalled',\n            message: 'Please open Package Manager and install: Tizen SDK Tools (Main SDK), TV Extensions-* (Extension SDK). Continue after you finished installing them.',\n            validate() {\n                return fs.existsSync(path.join(res.sdkPath, 'tools/ide/bin/tizen.bat')) || 'This does not look like a Tizen SDK path';\n            }\n        });\n\n        this.tizenSdkPath = res.sdkPath;\n    }\n\n    async installWebosSdk() {\n        const { downloadLink } = setupConfig.webos;\n        logInfo(`Opening ${downloadLink}. Please download and install the SDK then continue after it finished installing. Make sure you also install the CLI and Emulator components`);\n        exec(`${openCommand} ${downloadLink}`);\n        const res = await inquirer.prompt({\n            type: 'input',\n            name: 'sdkPath',\n            message: \"Where did you install the SDK? (if you haven't changed the default just press enter)\",\n            default: 'C:\\\\webOS_TV_SDK',\n            validate(value) {\n                if (fs.existsSync(value)) return true;\n                return 'Path does not exist';\n            }\n        });\n\n        await inquirer.prompt({\n            type: 'confirm',\n            name: 'toolsInstalled',\n            message: 'Are the CLI and Emulator components installed?',\n            validate() {\n                return fs.existsSync(path.join(res.sdkPath, 'tools/ide/bin/tizen.bat')) || 'This does not look like a Tizen SDK path';\n            }\n        });\n\n        this.webosSdkPath = res.sdkPath;\n    }\n}\n\nexport default LinuxPlatformSetup;\n"],"mappings":"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"}