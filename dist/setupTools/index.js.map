{"version":3,"sources":["../../src/setupTools/index.js"],"names":["c","Config","getConfig","platform","process","LinuxPlatformSetup","WindowsPlatformSetup","DarwinPlatformSetup","Error"],"mappings":"mKAAA;AACA;AACA;AACA,yD;;AAEe,kBAACA,CAAD,CAAO;AAClB,GAAI,CAACA,CAAL,CAAQA,CAAC,CAAGC,gBAAOC,SAAP,EAAJ;AACR,OAAkCF,CAAlC,CAAmBG,QAAnB,IAAQC,OAAR,CAAmBD,QAAnB;AACA,GAAIA,QAAQ,GAAK,OAAjB,CAA0B,MAAO,IAAIE,eAAJ,CAAuBL,CAAvB,CAAP;AAC1B,GAAIG,QAAQ,GAAK,OAAjB,CAA0B,MAAO,IAAIG,iBAAJ,CAAyBN,CAAzB,CAAP;AAC1B,GAAIG,QAAQ,GAAK,QAAjB,CAA2B,MAAO,IAAII,gBAAJ,EAAP;;;AAG3B,KAAM,IAAIC,CAAAA,KAAJ,CAAU,8CAAV,CAAN;AACH,C","sourcesContent":["import LinuxPlatformSetup from './linux';\nimport WindowsPlatformSetup from './windows';\nimport DarwinPlatformSetup from './darwin';\nimport Config from '../config';\n\nexport default (c) => {\n    if (!c) c = Config.getConfig();\n    const { process: { platform } } = c;\n    if (platform === 'linux') return new LinuxPlatformSetup(c);\n    if (platform === 'win32') return new WindowsPlatformSetup(c);\n    if (platform === 'darwin') return new DarwinPlatformSetup();\n    // @todo add support for more\n\n    throw new Error('Platform unsupported for automated SDK setup');\n};\n"],"file":"index.js"}