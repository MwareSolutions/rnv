{"version":3,"file":"crypto.js","names":["getEnvVar","c","p1","paths","workspace","dir","split","pop","replace","p2","files","project","package","name","envVar","toUpperCase","logDebug","rnvCryptoUpdateProfile","updateProfile","rnvCryptoEncrypt","Promise","resolve","reject","logTask","source","destRaw","config","crypto","encrypt","dest","tsWorkspacePath","path","join","getRealPath","destTemp","timestamp","Date","getTime","key","program","process","env","chalk","white","tar","gzip","file","cwd","then","executeAsync","_getOpenSllPath","privateParams","removeFilesSync","fs","writeFileSync","logSuccess","catch","e","logWarning","projectConfig","rnvCryptoDecrypt","sourceRaw","decrypt","ts","destFolder","wsPath","ci","reset","options","inquirerPrompt","type","choices","message","option","cleanFolder","existsSync","x","copyFileSync","platform","defaultOpenssl","isSystemMac","rnv","rnvCryptoInstallProfiles","logError","ppFolder","home","mkdirSync","list","getFileListSync","mobileprovisionArr","filter","v","endsWith","forEach","console","log","rnvCryptoInstallCerts","maxErrorLength","kChain","keychain","kChainPath","cerPromises","cerArr","all","map","rnvCryptoUpdateProfiles","IOS","TVOS","appId","runtime","_updateProfiles","setAppConfig","grey","acList","listAppConfigsFoldersSync","fullList","currentAppId","reduce","previousPromise","_updateProfile","checkCrypto","tsProjectPath","tsWorkspace","tsProject","parseInt","readFileSync","toString"],"sources":["../../src/systemTools/crypto.js"],"sourcesContent":["import path from 'path';\nimport tar from 'tar';\nimport chalk from 'chalk';\nimport fs from 'fs';\nimport { logWarning, logError, logTask, logDebug, logSuccess } from './logger';\nimport { isSystemMac } from '../utils';\nimport { listAppConfigsFoldersSync, generateBuildConfig, setAppConfig } from '../configTools/configParser';\nimport { IOS, TVOS } from '../constants';\nimport { getRealPath, removeFilesSync, getFileListSync, copyFileSync, mkdirSync, readObjectSync } from './fileutils';\nimport { executeAsync } from './exec';\nimport { updateProfile } from '../platformTools/apple/fastlane';\nimport { inquirerPrompt } from './prompt';\nimport { cleanFolder } from '../../dist/systemTools/fileutils';\n\nconst getEnvVar = (c) => {\n    const p1 = c.paths.workspace.dir.split('/').pop().replace('.', '');\n    const p2 = c.files.project.package.name.replace('@', '').replace('/', '_').replace(/-/g, '_');\n    const envVar = `CRYPTO_${p1}_${p2}`.toUpperCase();\n    logDebug('encrypt looking for env var:', envVar);\n    return envVar;\n};\n\nexport const rnvCryptoUpdateProfile = async (c) => {\n    await updateProfile(c);\n};\n\nexport const rnvCryptoEncrypt = c => new Promise((resolve, reject) => {\n    logTask('rnvCryptoEncrypt');\n\n    const source = `./${c.files.project.package.name}`;\n    const destRaw = c.files.project.config?.crypto?.encrypt?.dest;\n    const tsWorkspacePath = path.join(c.paths.workspace.dir, c.files.project.package.name, 'timestamp');\n\n    if (destRaw) {\n        const dest = `${getRealPath(c, destRaw, 'encrypt.dest')}`;\n        const destTemp = `${path.join(c.paths.workspace.dir, c.files.project.package.name.replace('/', '-'))}.tgz`;\n        const timestamp = (new Date()).getTime();\n        const envVar = getEnvVar(c);\n        const key = c.program.key || c.process.env[envVar];\n        if (!key) {\n            reject(`encrypt: You must pass ${chalk.white('--key')} or have env var ${chalk.white(envVar)} defined`);\n            return;\n        }\n        tar.c(\n            {\n                gzip: true,\n                file: destTemp,\n                cwd: c.paths.workspace.dir\n            },\n            [source]\n        )\n            .then(() => executeAsync(c, `${_getOpenSllPath(c)} enc -aes-256-cbc -md md5 -salt -in ${destTemp} -out ${dest} -k ${key}`, { privateParams: [key] }))\n            .then(() => {\n                removeFilesSync([destTemp]);\n                fs.writeFileSync(`${dest}.timestamp`, timestamp);\n                fs.writeFileSync(`${tsWorkspacePath}`, timestamp);\n                logSuccess(`Files succesfully encrypted into ${dest}`);\n                resolve();\n            }).catch((e) => {\n                reject(e);\n            });\n    } else {\n        logWarning(`You don't have {{ crypto.encrypt.dest }} specificed in ${chalk.white(c.paths.projectConfig)}`);\n        resolve();\n    }\n});\n\nexport const rnvCryptoDecrypt = async (c) => {\n    logTask('rnvCryptoDecrypt');\n\n    const sourceRaw = c.files.project.config?.crypto?.decrypt?.source;\n\n    if (sourceRaw) {\n        const source = `${getRealPath(c, sourceRaw, 'decrypt.source')}`;\n        const ts = `${source}.timestamp`;\n        const destFolder = path.join(c.paths.workspace.dir, c.files.project.package.name);\n        const destTemp = `${path.join(c.paths.workspace.dir, c.files.project.package.name.replace('/', '-'))}.tgz`;\n        const envVar = getEnvVar(c);\n\n\n        const wsPath = path.join(c.paths.workspace.dir, c.files.project.package.name);\n        if (c.program.ci !== true && c.program.reset !== true) {\n            const options = [\n                'Yes - override (recommended)',\n                'Yes - merge',\n                'Skip'\n            ];\n            const { option } = await inquirerPrompt({\n                name: 'option',\n                type: 'list',\n                choices: options,\n                message: `How to decrypt to ${chalk.white(destFolder)} ?`\n            });\n            if (option === options[0]) {\n                await cleanFolder(wsPath);\n            } else if (option === options[2]) {\n                return true;\n            }\n        } else {\n            await cleanFolder(wsPath);\n        }\n\n\n        const key = c.program.key || c.process.env[envVar];\n        if (!key) {\n            return Promise.reject(`encrypt: You must pass ${chalk.white('--key')} or have env var ${chalk.white(envVar)} defined`);\n        }\n        if (!fs.existsSync(source)) {\n            return Promise.reject(`Can't decrypt. ${chalk.white(source)} is missing!`);\n        }\n\n        await executeAsync(c, `${_getOpenSllPath(c)} enc -aes-256-cbc -md md5 -d -in ${source} -out ${destTemp} -k ${key}`, { privateParams: [key] });\n\n        await tar.x({\n            file: destTemp,\n            cwd: c.paths.workspace.dir\n        });\n\n        removeFilesSync([destTemp]);\n        if (fs.existsSync(ts)) {\n            copyFileSync(ts, path.join(c.paths.workspace.dir, c.files.project.package.name, 'timestamp'));\n        }\n        logSuccess(`Files succesfully extracted into ${destFolder}`);\n    } else {\n        logWarning(`You don't have {{ crypto.encrypt.dest }} specificed in ${chalk.white(c.paths.projectConfig)}`);\n        return true;\n    }\n};\n\nconst _getOpenSllPath = (c) => {\n    const { process: { platform } } = c;\n    let defaultOpenssl = 'openssl';\n    // if (platform === 'linux') defaultOpenssl = path.join(c.paths.rnv.dir, 'bin/openssl-linux');\n    if (isSystemMac) defaultOpenssl = path.join(c.paths.rnv.dir, 'bin/openssl-osx');\n    // if (fs.existsSync(defaultOpenssl)) {\n    //     return defaultOpenssl;\n    // }\n    // logWarning(`${defaultOpenssl} is missing. will use default one`);\n\n    return defaultOpenssl;\n};\n\nexport const rnvCryptoInstallProfiles = c => new Promise((resolve, reject) => {\n    logTask('rnvCryptoInstallProfiles');\n    if (c.platform !== 'ios') {\n        logError(`rnvCryptoInstallProfiles: platform ${c.platform} not supported`);\n        resolve();\n        return;\n    }\n\n    const ppFolder = path.join(c.paths.home.dir, 'Library/MobileDevice/Provisioning Profiles');\n\n    if (!fs.existsSync(ppFolder)) {\n        logWarning(`folder ${ppFolder} does not exist!`);\n        mkdirSync(ppFolder);\n    }\n\n    const list = getFileListSync(c.paths.workspace.project.dir);\n    const mobileprovisionArr = list.filter(v => v.endsWith('.mobileprovision'));\n\n    try {\n        mobileprovisionArr.forEach((v) => {\n            console.log(`rnvCryptoInstallProfiles: Installing: ${v}`);\n            copyFileSync(v, ppFolder);\n        });\n    } catch (e) {\n        logError(e);\n    }\n\n    resolve();\n});\n\nexport const rnvCryptoInstallCerts = c => new Promise((resolve, reject) => {\n    logTask('rnvCryptoInstallCerts');\n    const { maxErrorLength } = c.program;\n\n    if (c.platform !== 'ios') {\n        logError(`_installTempCerts: platform ${c.platform} not supported`);\n        resolve();\n        return;\n    }\n    const kChain = c.program.keychain || 'ios-build.keychain';\n    const kChainPath = path.join(c.paths.home.dir, 'Library/Keychains', kChain);\n    const list = getFileListSync(c.paths.workspace.project.dir);\n    const cerPromises = [];\n    const cerArr = list.filter(v => v.endsWith('.cer'));\n\n    Promise.all(cerArr.map(v => executeAsync(c, `security import ${v} -k ${kChain} -A`)))\n        .then(() => resolve())\n        .catch((e) => {\n            logWarning(e);\n            resolve();\n        });\n});\n\n\nexport const rnvCryptoUpdateProfiles = async (c) => {\n    logTask('rnvCryptoUpdateProfiles');\n    switch (c.platform) {\n        case IOS:\n        case TVOS:\n            const { appId } = c.runtime;\n            await _updateProfiles(c);\n            await setAppConfig(c, appId);\n        default:\n            return true;\n    }\n    return Promise.reject(`updateProfiles: Platform ${c.platform} not supported`);\n};\n\nconst _updateProfiles = (c) => {\n    logTask('_updateProfiles', chalk.grey);\n    const acList = listAppConfigsFoldersSync(c, true);\n    const fullList = [];\n    const currentAppId = c.runtime.appId;\n\n    return acList.reduce((previousPromise, v) => previousPromise.then(() => _updateProfile(c, v)), Promise.resolve());\n};\n\nconst _updateProfile = (c, v) => new Promise((resolve, reject) => {\n    logTask(`_updateProfile:${v}`, chalk.grey);\n    updateProfile(c, v)\n        .then(() => resolve())\n        .catch(e => reject(e));\n});\n\nexport const checkCrypto = async (c) => {\n    logTask('checkCrypto');\n\n    if (c.program.ci) return;\n\n    const sourceRaw = c.files.project.config?.crypto?.decrypt?.source;\n    const source = `./${c.files.project.package.name}`;\n    const destRaw = c.files.project.config?.crypto?.encrypt?.dest;\n\n    if (destRaw) {\n        if (sourceRaw && destRaw) {\n            const source = `${getRealPath(c, sourceRaw, 'decrypt.source')}`;\n            const tsProjectPath = `${source}.timestamp`;\n            const wsPath = path.join(c.paths.workspace.dir, c.files.project.package.name);\n            const tsWorkspacePath = path.join(wsPath, 'timestamp');\n            if (!fs.existsSync(source)) {\n                logWarning('This project uses encrypted files but you don\\'t have them installed');\n            } else {\n                let tsWorkspace = 0;\n                let tsProject = 0;\n                if (fs.existsSync(tsWorkspacePath)) {\n                    tsWorkspace = parseInt(fs.readFileSync(tsWorkspacePath).toString());\n                }\n\n                if (fs.existsSync(tsProjectPath)) {\n                    tsProject = parseInt(fs.readFileSync(tsProjectPath).toString());\n                }\n\n                if (tsProject > tsWorkspace) {\n                    logWarning(`Your ${tsWorkspacePath} is out of date. you should run decrypt`);\n                    await rnvCryptoDecrypt(c);\n                    return;\n                }\n\n                if (tsProject < tsWorkspace) {\n                    logWarning(`Your ${tsWorkspacePath} is newer than your project one.`);\n                }\n            }\n        }\n    }\n};\n"],"mappings":"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"}