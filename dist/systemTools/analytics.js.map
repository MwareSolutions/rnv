{"version":3,"file":"analytics.js","names":["sanitizeError","err","includes","toLowerCase","split","Redash","e","defaultProps","fingerprint","machineIdSync","os","platform","rnvVersion","pkg","version","axios","post","REDASH_URL","headers","REDASH_KEY","catch","Analytics","errorFixer","knowItAll","Config","isAnalyticsEnabled","require","init","dsn","release","integrations","RewriteFrames","root","iteratee","frame","filename","path","sep","context","withScope","scope","extra","tags","setTags","setExtras","Error","captureException","captureEvent","Promise","resolve","client","getCurrentHub","getClient","close","then"],"sources":["../../src/systemTools/analytics.js"],"sourcesContent":["import { RewriteFrames } from '@sentry/integrations';\nimport { machineIdSync } from 'node-machine-id';\nimport axios from 'axios';\nimport os from 'os';\nimport path from 'path';\n\nimport Config from '../config';\nimport pkg from '../../package.json';\nimport { REDASH_KEY, REDASH_URL } from '../constants';\n\n// deal with useless duplicate errors on sentry because of different error texts\nconst sanitizeError = (err) => {\n    if (err) {\n        if (err.includes('file if you SDK path is correct.')) {\n            return err.toLowerCase().split('. check your ')[0];\n        }\n        if (err.includes('AppConfig error - ')) {\n            return err.split(' - ')[0];\n        }\n    }\n\n    return err;\n};\n\nclass Redash {\n    captureEvent(e) {\n        const defaultProps = {\n            fingerprint: machineIdSync(),\n            os: os.platform(),\n            rnvVersion: pkg.version,\n        };\n        return axios.post(REDASH_URL, { ...e, ...defaultProps }, {\n            headers: {\n                'x-api-key': REDASH_KEY\n            }\n        }).catch(() => true);\n    }\n}\n\nclass Analytics {\n    constructor() {\n        this.errorFixer = null;\n        this.knowItAll = null;\n    }\n\n    initialize() {\n        if (Config.isAnalyticsEnabled) {\n            // ERROR HANDLING\n            // eslint-disable-next-line global-require\n            this.errorFixer = require('@sentry/node');\n\n            this.errorFixer.init({\n                dsn: 'https://004caee3caa04c81a10f2ba31a945362@sentry.io/1795473',\n                release: `rnv@${pkg.version}`,\n                integrations: [new RewriteFrames({\n                    root: '/',\n                    iteratee: (frame) => {\n                        if (frame.filename.includes(`rnv${path.sep}dist${path.sep}`) || frame.filename.includes(`rnv${path.sep}src${path.sep}`)) {\n                            if (frame.filename.includes(`rnv${path.sep}dist${path.sep}`)) {\n                                frame.filename = frame.filename.split(`rnv${path.sep}dist${path.sep}`)[1];\n                            } else {\n                                frame.filename = frame.filename.split(`rnv${path.sep}src${path.sep}`)[1];\n                            }\n                        } else if (frame.filename.includes(`${path.sep}node_modules${path.sep}`)) {\n                            frame.filename = `node_modules/${frame.filename.split(`${path.sep}node_modules${path.sep}`)[1]}`;\n                        }\n                        return frame;\n                    }\n                })]\n            });\n\n            // EVENT HANDLING\n            this.knowItAll = new Redash();\n        }\n    }\n\n    captureException(e, context = {}) {\n        if (Config.isAnalyticsEnabled && this.errorFixer) {\n            this.errorFixer.withScope((scope) => {\n                const { extra = {}, tags = {} } = context;\n                scope.setTags({ ...tags, os: os.platform() });\n                scope.setExtras({ ...extra, fingerprint: machineIdSync() });\n                if (e instanceof Error) {\n                    this.errorFixer.captureException(e);\n                } else {\n                    this.errorFixer.captureException(new Error(sanitizeError(e)));\n                }\n            });\n        }\n    }\n\n    async captureEvent(e) {\n        if (Config.isAnalyticsEnabled && this.knowItAll) {\n            return this.knowItAll.captureEvent(e);\n        }\n        return true;\n    }\n\n    teardown() {\n        return new Promise((resolve) => {\n            if (Config.isAnalyticsEnabled && this.errorFixer) {\n                const client = this.errorFixer.getCurrentHub().getClient();\n                if (client) {\n                    return client.close(2000).then(resolve);\n                }\n                return resolve();\n            }\n            return resolve();\n        });\n    }\n}\n\nexport default new Analytics();\n"],"mappings":"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"}