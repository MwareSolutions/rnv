{"version":3,"sources":["../../src/systemTools/fileutils.js"],"names":["copyFileSync","source","target","targetFile","indexOf","fs","existsSync","lstatSync","isDirectory","path","join","basename","src","readFileSync","dst","Buffer","compare","writeFileSync","e","console","log","invalidatePodsChecksum","c","appFolder","paths","project","builds","dir","runtime","appId","platform","podChecksumPath","unlinkSync","copyFolderRecursiveSync","convertSvg","skipPaths","files","targetFolder","mkdirSync","readdirSync","forEach","file","curSource","extname","jsDest","saveAsJs","copyFolderContentsRecursiveSync","includes","copyFolderContentsRecursive","Promise","resolve","reject","err","dest","Svg2Js","createSync","destination","removeDir","callback","shelljs","mkdir","cleanFolder","d","removeFilesSync","filePaths","filePath","removeDirsSync","dirPaths","i","length","removeDirSync","removeDirs","allFolders","deletedFolders","rmSelf","undefined","x","statSync","rmdirSync","obj","spaces","addNewLine","output","JSON","stringify","toString","writeObjectSync","readObjectSync","sanitize","parse","sanitizeDynamicRefs","_refs","sanitizeDynamicProps","chalk","white","updateObjectSync","updateObj","getRealPath","p","key","original","startsWith","replace","rnv","home","workspace","_refToValue","ref","val","split","realPath","reduce","o","arrayMerge","destinationArray","sourceArray","mergeOptions","jointArray","concat","uniqueArray","filter","item","index","_arrayMergeOverride","Array","isArray","v","Object","keys","props","pk","mergeObjects","obj1","obj2","dynamicRefs","replaceArrays","updateConfigFile","update","globalConfigPath","configContents","androidSdk","sdks","ANDROID_SDK","tizenSdk","TIZEN_SDK","webosSdk","WEBOS_SDK","replaceHomeFolder","isSystemWin","process","env","USERPROFILE","HOME","getFileListSync","results","list","stat","push"],"mappings":"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","sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport rimraf from 'rimraf';\nimport Svg2Js from 'svg2js';\nimport shelljs from 'shelljs';\nimport merge from 'deepmerge';\nimport chalk from 'chalk';\nimport ncp from 'ncp';\nimport { isSystemWin } from '../utils';\n\nimport { logDebug, logError, logWarning, logInfo } from './logger';\n\nexport const copyFileSync = (source, target) => {\n    logDebug('copyFileSync', source);\n    let targetFile = target;\n    // if target is a directory a new file with the same name will be created\n    if (source.indexOf('.DS_Store') !== -1) return;\n\n    if (fs.existsSync(target)) {\n        if (fs.lstatSync(target).isDirectory()) {\n            targetFile = path.join(target, path.basename(source));\n        }\n    }\n    if (fs.existsSync(targetFile)) {\n        const src = fs.readFileSync(source);\n        const dst = fs.readFileSync(targetFile);\n\n        if (Buffer.compare(src, dst) === 0) return;\n    }\n    logDebug('copyFileSync', source, targetFile, 'executed');\n    try {\n        fs.writeFileSync(targetFile, fs.readFileSync(source));\n    } catch (e) {\n        console.log('copyFileSync', e);\n    }\n};\n\nexport const invalidatePodsChecksum = (c) => {\n    const appFolder = path.join(c.paths.project.builds.dir, `${c.runtime.appId}_${c.platform}`);\n    const podChecksumPath = path.join(appFolder, 'Podfile.checksum');\n    if (fs.existsSync(podChecksumPath)) {\n        fs.unlinkSync(podChecksumPath);\n    }\n};\n\nexport const copyFolderRecursiveSync = (source, target, convertSvg = true, skipPaths) => {\n    logDebug('copyFolderRecursiveSync', source, target);\n    if (!fs.existsSync(source)) return;\n\n    let files = [];\n    // check if folder needs to be created or integrated\n    const targetFolder = path.join(target, path.basename(source));\n    if (!fs.existsSync(targetFolder)) {\n        mkdirSync(targetFolder);\n    }\n    // copy\n    if (fs.lstatSync(source).isDirectory()) {\n        files = fs.readdirSync(source);\n        files.forEach((file) => {\n            const curSource = path.join(source, file);\n            if (fs.lstatSync(curSource).isDirectory()) {\n                copyFolderRecursiveSync(curSource, targetFolder);\n            } else if (path.extname(curSource) === '.svg' && convertSvg === true) {\n                const jsDest = path.join(targetFolder, `${path.basename(curSource)}.js`);\n                logDebug(`file ${curSource} is svg and convertSvg is set to true. converitng to ${jsDest}`);\n                saveAsJs(curSource, jsDest);\n            } else {\n                copyFileSync(curSource, targetFolder);\n            }\n        });\n    }\n};\n\nexport const copyFolderContentsRecursiveSync = (source, target, convertSvg = true, skipPaths) => {\n    logDebug('copyFolderContentsRecursiveSync', source, target, skipPaths);\n    if (!fs.existsSync(source)) return;\n    let files = [];\n    const targetFolder = path.join(target);\n    if (!fs.existsSync(targetFolder)) {\n        mkdirSync(targetFolder);\n    }\n    if (fs.lstatSync(source).isDirectory()) {\n        files = fs.readdirSync(source);\n        files.forEach((file) => {\n            const curSource = path.join(source, file);\n            if (!skipPaths || (skipPaths && !skipPaths.includes(curSource))) {\n                if (fs.lstatSync(curSource).isDirectory()) {\n                    copyFolderRecursiveSync(curSource, targetFolder, convertSvg, skipPaths);\n                } else {\n                    copyFileSync(curSource, targetFolder);\n                }\n            }\n        });\n    }\n};\n\nexport const copyFolderContentsRecursive = (source, target, convertSvg = true, skipPaths) => new Promise((resolve, reject) => {\n    logDebug('copyFolderContentsRecursive', source, target, skipPaths);\n    if (!fs.existsSync(source)) return;\n    const targetFolder = path.resolve(target);\n    if (!fs.existsSync(targetFolder)) {\n        mkdirSync(targetFolder);\n    }\n    ncp(source, targetFolder, (err) => {\n        if (err) {\n            return reject(err);\n        }\n        return resolve();\n    });\n});\n\nexport const saveAsJs = (source, dest) => {\n    Svg2Js.createSync({\n        source,\n        destination: dest,\n    });\n};\n\nexport const removeDir = (path, callback) => {\n    rimraf(path, callback);\n};\n\nexport const mkdirSync = (dir) => {\n    if (!dir) return;\n    if (fs.existsSync(dir)) return;\n    try {\n        shelljs.mkdir('-p', dir);\n    } catch (e) {\n        logWarning(`shelljs.mkdir failed for dir: ${dir} with error: ${e}`);\n    }\n};\n\nexport const cleanFolder = d => new Promise((resolve, reject) => {\n    logDebug('cleanFolder', d);\n    removeDir(d, () => {\n        mkdirSync(d);\n        resolve();\n    });\n});\n\nexport const removeFilesSync = (filePaths) => {\n    logDebug('removeFilesSync', filePaths);\n    filePaths.forEach((filePath) => {\n        try {\n            if (fs.existsSync(filePath)) {\n                fs.unlinkSync(filePath);\n            } else {\n                logDebug(`Path ${filePath} does not exist`);\n            }\n        } catch (e) {\n            logError(e);\n        }\n    });\n};\n\nexport const removeDirsSync = (dirPaths) => {\n    logDebug('removeDirsSync', dirPaths);\n\n    for (let i = 0; i < dirPaths.length; i++) {\n        try {\n            removeDirSync(dirPaths[i]);\n        } catch (e) {\n            logError(e);\n        }\n    }\n};\n\n\nexport const removeDirs = dirPaths => new Promise((resolve, reject) => {\n    logDebug('removeDirs', dirPaths);\n    const allFolders = dirPaths.length;\n    let deletedFolders = 0;\n    for (let i = 0; i < allFolders; i++) {\n        rimraf(dirPaths[i], (e) => {\n            if (e) {\n                logError(e);\n            }\n            deletedFolders++;\n            if (deletedFolders >= allFolders) resolve();\n        });\n    }\n    if (allFolders === 0) resolve();\n});\n\n\nexport const removeDirSync = (dir, rmSelf) => {\n    let files;\n    rmSelf = (rmSelf === undefined) ? true : rmSelf;\n    dir += '/';\n    try { files = fs.readdirSync(dir); } catch (e) { logDebug('!Oops, directory not exist.'); return; }\n    if (files.length > 0) {\n        files.forEach((x, i) => {\n            if (fs.statSync(dir + x).isDirectory()) {\n                removeDirSync(dir + x);\n            } else {\n                fs.unlinkSync(dir + x);\n            }\n        });\n    }\n    if (rmSelf) {\n        // check if user want to delete the directory ir just the files in this directory\n        fs.rmdirSync(dir);\n    }\n};\n\nexport const writeFileSync = (filePath, obj, spaces, addNewLine = true) => {\n    logDebug('writeFileSync', filePath);\n    if (filePath.includes('?') || filePath.includes('undefined')) return;\n    let output;\n    if (typeof obj === 'string') {\n        output = obj;\n    } else {\n        output = `${JSON.stringify(obj, null, spaces || 4)}${addNewLine ? '\\n' : ''}`;\n    }\n    if (fs.existsSync(filePath)) {\n        if (fs.readFileSync(filePath).toString() === output) return;\n    }\n    logDebug('writeFileSync', filePath, 'executed');\n    fs.writeFileSync(filePath, output);\n};\n\nexport const writeObjectSync = (filePath, obj, spaces, addNewLine = true) => {\n    logDebug('writeObjectSync', filePath);\n    logWarning('writeObjectSync is DEPRECATED. use writeFileSync instead');\n    return writeFileSync(filePath, obj, spaces, addNewLine);\n};\n\nexport const readObjectSync = (filePath, sanitize = false, c) => {\n    logDebug(`readObjectSync:${sanitize}:${filePath}`);\n    if (!filePath) {\n        logDebug('readObjectSync: filePath is undefined');\n        return null;\n    }\n    if (!fs.existsSync(filePath)) {\n        logDebug(`readObjectSync: File at ${filePath} does not exist`);\n        return null;\n    }\n    let obj;\n    try {\n        obj = JSON.parse(fs.readFileSync(filePath));\n        if (sanitize) {\n            logDebug(`readObjectSync: will sanitize file at: ${filePath}`);\n            if (c) {\n                obj = sanitizeDynamicRefs(c, obj);\n            }\n            if (obj._refs) {\n                obj = sanitizeDynamicProps(obj, obj._refs);\n            }\n        }\n    } catch (e) {\n        logWarning(`readObjectSync: Parsing of ${chalk.white(filePath)} failed with ${e}`);\n        return null;\n    }\n    return obj;\n};\n\nexport const updateObjectSync = (filePath, updateObj) => {\n    let output;\n    const obj = readObjectSync(filePath);\n    if (obj) {\n        output = merge(obj, updateObj);\n    } else {\n        output = updateObj;\n    }\n    writeFileSync(filePath, output);\n    return output;\n};\n\nexport const getRealPath = (c, p, key = 'undefined', original) => {\n    if (!p) {\n        if (original) logInfo(`Path ${chalk.white(key)} is not defined. using default: ${chalk.white(original)}`);\n        return original;\n    }\n    if (p.startsWith('./')) {\n        return path.join(c.paths.project.dir, p);\n    }\n    const output = p.replace(/\\$RNV_HOME/g, c.paths.rnv.dir)\n        .replace(/~/g, c.paths.home.dir)\n        .replace(/\\$USER_HOME/g, c.paths.home.dir)\n        .replace(/\\$PROJECT_HOME/g, c.paths.project.dir)\n        .replace(/\\$WORKSPACE_HOME/g, c.paths.workspace.dir)\n        .replace(/RNV_HOME/g, c.paths.rnv.dir)\n        .replace(/USER_HOME/g, c.paths.home.dir)\n        .replace(/PROJECT_HOME/g, c.paths.project.dir);\n    return output;\n};\n\nconst _refToValue = (c, ref, key) => {\n    const val = ref.replace('$REF$:', '').split('$...');\n\n    const realPath = getRealPath(c, val[0], key);\n\n    if (realPath && realPath.includes('.json') && val.length === 2) {\n        if (fs.existsSync(realPath)) {\n            const obj = readObjectSync(realPath);\n\n            try {\n                const output = val[1].split('.').reduce((o, i) => o[i], obj);\n                return output;\n            } catch (e) {\n                logWarning(`_refToValue: ${e}`);\n            }\n        } else {\n            logWarning(`_refToValue: ${chalk.white(realPath)} does not exist!`);\n        }\n    }\n    return ref;\n};\n\nexport const arrayMerge = (destinationArray, sourceArray, mergeOptions) => {\n    const jointArray = destinationArray.concat(sourceArray);\n    const uniqueArray = jointArray.filter((item, index) => jointArray.indexOf(item) === index);\n    return uniqueArray;\n};\n\nconst _arrayMergeOverride = (destinationArray, sourceArray, mergeOptions) => sourceArray;\n\nexport const sanitizeDynamicRefs = (c, obj) => {\n    if (!obj) return obj;\n    if (Array.isArray(obj)) {\n        obj.forEach((v) => {\n            sanitizeDynamicRefs(c, v);\n        });\n    }\n    Object.keys(obj).forEach((key) => {\n        const val = obj[key];\n        if (val) {\n            if (typeof val === 'string') {\n                if (val.startsWith('$REF$:')) {\n                    obj[key] = _refToValue(c, val, key);\n                }\n            } else {\n                sanitizeDynamicRefs(c, val);\n            }\n        }\n    });\n    return obj;\n};\n\nexport const sanitizeDynamicProps = (obj, props) => {\n    if (!obj || !props) return obj;\n    if (Array.isArray(obj)) {\n        obj.forEach((v) => {\n            if (typeof val === 'string') {\n                Object.keys(props).forEach((pk) => {\n                    val = val.replace(`@${pk}@`, props[pk]).replace(`{{props.${pk}}}`, props[pk]);\n                    obj[key] = val;\n                });\n            } else {\n                sanitizeDynamicProps(v, props);\n            }\n        });\n    }\n    Object.keys(obj).forEach((key) => {\n        let val = obj[key];\n        if (val) {\n            if (typeof val === 'string') {\n                Object.keys(props).forEach((pk) => {\n                    val = val.replace(`@${pk}@`, props[pk]).replace(`{{props.${pk}}}`, props[pk]);\n                    obj[key] = val;\n                });\n            } else {\n                sanitizeDynamicProps(val, props);\n            }\n        }\n    });\n    return obj;\n};\n\n\nexport const mergeObjects = (c, obj1, obj2, dynamicRefs = true, replaceArrays = false) => {\n    if (!obj2) return obj1;\n    if (!obj1) return obj2;\n    const obj = merge(obj1, obj2, { arrayMerge: replaceArrays ? _arrayMergeOverride : arrayMerge });\n    return dynamicRefs ? sanitizeDynamicRefs(c, obj) : obj;\n};\n\nexport const updateConfigFile = async (update, globalConfigPath) => {\n    const configContents = JSON.parse(fs.readFileSync(globalConfigPath));\n\n    if (update.androidSdk) {\n        configContents.sdks.ANDROID_SDK = update.androidSdk;\n    }\n\n    if (update.tizenSdk) {\n        configContents.sdks.TIZEN_SDK = update.tizenSdk;\n    }\n\n    if (update.webosSdk) {\n        configContents.sdks.WEBOS_SDK = update.webosSdk;\n    }\n\n    logDebug(`Updating ${globalConfigPath}. New file ${JSON.stringify(configContents, null, 3)}`);\n\n    fs.writeFileSync(globalConfigPath, JSON.stringify(configContents, null, 3));\n};\n\nexport const replaceHomeFolder = (p) => {\n    if (isSystemWin) return p.replace('~', process.env.USERPROFILE);\n    return p.replace('~', process.env.HOME);\n};\n\nexport const getFileListSync = (dir) => {\n    let results = [];\n    const list = fs.readdirSync(dir);\n    list.forEach((file) => {\n        file = `${dir}/${file}`;\n        const stat = fs.statSync(file);\n        if (stat && stat.isDirectory()) {\n            /* Recurse into a subdirectory */\n            results = results.concat(getFileListSync(file));\n        } else {\n            /* Is a file */\n            results.push(file);\n        }\n    });\n    return results;\n};\n\nexport default {\n    sanitizeDynamicRefs,\n    getFileListSync,\n    removeDirs,\n    copyFileSync,\n    copyFolderRecursiveSync,\n    removeDir,\n    removeDirsSync,\n    removeFilesSync,\n    saveAsJs,\n    mkdirSync,\n    copyFolderContentsRecursive,\n    copyFolderContentsRecursiveSync,\n    cleanFolder,\n    writeFileSync,\n    readObjectSync,\n    updateObjectSync,\n    arrayMerge,\n    mergeObjects,\n    updateConfigFile,\n    replaceHomeFolder\n};\n"],"file":"fileutils.js"}