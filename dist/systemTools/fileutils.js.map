{"version":3,"file":"fileutils.js","names":["copyFileSync","source","target","logDebug","targetFile","indexOf","fs","existsSync","lstatSync","isDirectory","path","join","basename","src","readFileSync","dst","Buffer","compare","writeFileSync","e","console","log","invalidatePodsChecksum","c","appFolder","paths","project","builds","dir","runtime","appId","platform","podChecksumPath","unlinkSync","copyFolderRecursiveSync","convertSvg","skipPaths","files","targetFolder","mkdirSync","readdirSync","forEach","file","curSource","extname","jsDest","saveAsJs","copyFolderContentsRecursiveSync","includes","copyFolderContentsRecursive","Promise","resolve","reject","ncp","err","dest","Svg2Js","createSync","destination","removeDir","callback","rimraf","shelljs","mkdir","logWarning","cleanFolder","d","removeFilesSync","filePaths","filePath","logError","removeDirsSync","dirPaths","i","length","removeDirSync","removeDirs","allFolders","deletedFolders","rmSelf","undefined","x","statSync","rmdirSync","obj","spaces","addNewLine","output","JSON","stringify","toString","writeObjectSync","readObjectSync","sanitize","parse","sanitizeDynamicRefs","_refs","sanitizeDynamicProps","chalk","white","updateObjectSync","updateObj","merge","getRealPath","p","key","original","logInfo","startsWith","replace","rnv","home","workspace","_refToValue","ref","val","split","realPath","reduce","o","arrayMerge","destinationArray","sourceArray","mergeOptions","jointArray","concat","uniqueArray","filter","item","index","_arrayMergeOverride","Array","isArray","v","Object","keys","props","pk","mergeObjects","obj1","obj2","dynamicRefs","replaceArrays","updateConfigFile","update","globalConfigPath","configContents","androidSdk","sdks","ANDROID_SDK","tizenSdk","TIZEN_SDK","webosSdk","WEBOS_SDK","replaceHomeFolder","isSystemWin","process","env","USERPROFILE","HOME","getFileListSync","results","list","stat","push"],"sources":["../../src/systemTools/fileutils.js"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport rimraf from 'rimraf';\nimport Svg2Js from 'svg2js';\nimport shelljs from 'shelljs';\nimport merge from 'deepmerge';\nimport chalk from 'chalk';\nimport ncp from 'ncp';\nimport { isSystemWin } from '../utils';\n\nimport { logDebug, logError, logWarning, logInfo } from './logger';\n\nexport const copyFileSync = (source, target) => {\n    logDebug('copyFileSync', source);\n    let targetFile = target;\n    // if target is a directory a new file with the same name will be created\n    if (source.indexOf('.DS_Store') !== -1) return;\n\n    if (fs.existsSync(target)) {\n        if (fs.lstatSync(target).isDirectory()) {\n            targetFile = path.join(target, path.basename(source));\n        }\n    }\n    if (fs.existsSync(targetFile)) {\n        const src = fs.readFileSync(source);\n        const dst = fs.readFileSync(targetFile);\n\n        if (Buffer.compare(src, dst) === 0) return;\n    }\n    logDebug('copyFileSync', source, targetFile, 'executed');\n    try {\n        fs.writeFileSync(targetFile, fs.readFileSync(source));\n    } catch (e) {\n        console.log('copyFileSync', e);\n    }\n};\n\nexport const invalidatePodsChecksum = (c) => {\n    const appFolder = path.join(c.paths.project.builds.dir, `${c.runtime.appId}_${c.platform}`);\n    const podChecksumPath = path.join(appFolder, 'Podfile.checksum');\n    if (fs.existsSync(podChecksumPath)) {\n        fs.unlinkSync(podChecksumPath);\n    }\n};\n\nexport const copyFolderRecursiveSync = (source, target, convertSvg = true, skipPaths) => {\n    logDebug('copyFolderRecursiveSync', source, target);\n    if (!fs.existsSync(source)) return;\n\n    let files = [];\n    // check if folder needs to be created or integrated\n    const targetFolder = path.join(target, path.basename(source));\n    if (!fs.existsSync(targetFolder)) {\n        mkdirSync(targetFolder);\n    }\n    // copy\n    if (fs.lstatSync(source).isDirectory()) {\n        files = fs.readdirSync(source);\n        files.forEach((file) => {\n            const curSource = path.join(source, file);\n            if (fs.lstatSync(curSource).isDirectory()) {\n                copyFolderRecursiveSync(curSource, targetFolder);\n            } else if (path.extname(curSource) === '.svg' && convertSvg === true) {\n                const jsDest = path.join(targetFolder, `${path.basename(curSource)}.js`);\n                logDebug(`file ${curSource} is svg and convertSvg is set to true. converitng to ${jsDest}`);\n                saveAsJs(curSource, jsDest);\n            } else {\n                copyFileSync(curSource, targetFolder);\n            }\n        });\n    }\n};\n\nexport const copyFolderContentsRecursiveSync = (source, target, convertSvg = true, skipPaths) => {\n    logDebug('copyFolderContentsRecursiveSync', source, target, skipPaths);\n    if (!fs.existsSync(source)) return;\n    let files = [];\n    const targetFolder = path.join(target);\n    if (!fs.existsSync(targetFolder)) {\n        mkdirSync(targetFolder);\n    }\n    if (fs.lstatSync(source).isDirectory()) {\n        files = fs.readdirSync(source);\n        files.forEach((file) => {\n            const curSource = path.join(source, file);\n            if (!skipPaths || (skipPaths && !skipPaths.includes(curSource))) {\n                if (fs.lstatSync(curSource).isDirectory()) {\n                    copyFolderRecursiveSync(curSource, targetFolder, convertSvg, skipPaths);\n                } else {\n                    copyFileSync(curSource, targetFolder);\n                }\n            }\n        });\n    }\n};\n\nexport const copyFolderContentsRecursive = (source, target, convertSvg = true, skipPaths) => new Promise((resolve, reject) => {\n    logDebug('copyFolderContentsRecursive', source, target, skipPaths);\n    if (!fs.existsSync(source)) return;\n    const targetFolder = path.resolve(target);\n    if (!fs.existsSync(targetFolder)) {\n        mkdirSync(targetFolder);\n    }\n    ncp(source, targetFolder, (err) => {\n        if (err) {\n            return reject(err);\n        }\n        return resolve();\n    });\n});\n\nexport const saveAsJs = (source, dest) => {\n    Svg2Js.createSync({\n        source,\n        destination: dest,\n    });\n};\n\nexport const removeDir = (path, callback) => {\n    rimraf(path, callback);\n};\n\nexport const mkdirSync = (dir) => {\n    if (!dir) return;\n    if (fs.existsSync(dir)) return;\n    try {\n        shelljs.mkdir('-p', dir);\n    } catch (e) {\n        logWarning(`shelljs.mkdir failed for dir: ${dir} with error: ${e}`);\n    }\n};\n\nexport const cleanFolder = d => new Promise((resolve, reject) => {\n    logDebug('cleanFolder', d);\n    removeDir(d, () => {\n        mkdirSync(d);\n        resolve();\n    });\n});\n\nexport const removeFilesSync = (filePaths) => {\n    logDebug('removeFilesSync', filePaths);\n    filePaths.forEach((filePath) => {\n        try {\n            if (fs.existsSync(filePath)) {\n                fs.unlinkSync(filePath);\n            } else {\n                logDebug(`Path ${filePath} does not exist`);\n            }\n        } catch (e) {\n            logError(e);\n        }\n    });\n};\n\nexport const removeDirsSync = (dirPaths) => {\n    logDebug('removeDirsSync', dirPaths);\n\n    for (let i = 0; i < dirPaths.length; i++) {\n        try {\n            removeDirSync(dirPaths[i]);\n        } catch (e) {\n            logError(e);\n        }\n    }\n};\n\n\nexport const removeDirs = dirPaths => new Promise((resolve, reject) => {\n    logDebug('removeDirs', dirPaths);\n    const allFolders = dirPaths.length;\n    let deletedFolders = 0;\n    for (let i = 0; i < allFolders; i++) {\n        rimraf(dirPaths[i], (e) => {\n            if (e) {\n                logError(e);\n            }\n            deletedFolders++;\n            if (deletedFolders >= allFolders) resolve();\n        });\n    }\n    if (allFolders === 0) resolve();\n});\n\n\nexport const removeDirSync = (dir, rmSelf) => {\n    let files;\n    rmSelf = (rmSelf === undefined) ? true : rmSelf;\n    dir += '/';\n    try { files = fs.readdirSync(dir); } catch (e) { logDebug('!Oops, directory not exist.'); return; }\n    if (files.length > 0) {\n        files.forEach((x, i) => {\n            if (fs.statSync(dir + x).isDirectory()) {\n                removeDirSync(dir + x);\n            } else {\n                fs.unlinkSync(dir + x);\n            }\n        });\n    }\n    if (rmSelf) {\n        // check if user want to delete the directory ir just the files in this directory\n        fs.rmdirSync(dir);\n    }\n};\n\nexport const writeFileSync = (filePath, obj, spaces, addNewLine = true) => {\n    logDebug('writeFileSync', filePath);\n    if (filePath.includes('?') || filePath.includes('undefined')) return;\n    let output;\n    if (typeof obj === 'string') {\n        output = obj;\n    } else {\n        output = `${JSON.stringify(obj, null, spaces || 4)}${addNewLine ? '\\n' : ''}`;\n    }\n    if (fs.existsSync(filePath)) {\n        if (fs.readFileSync(filePath).toString() === output) return;\n    }\n    logDebug('writeFileSync', filePath, 'executed');\n    fs.writeFileSync(filePath, output);\n};\n\nexport const writeObjectSync = (filePath, obj, spaces, addNewLine = true) => {\n    logDebug('writeObjectSync', filePath);\n    logWarning('writeObjectSync is DEPRECATED. use writeFileSync instead');\n    return writeFileSync(filePath, obj, spaces, addNewLine);\n};\n\nexport const readObjectSync = (filePath, sanitize = false, c) => {\n    logDebug(`readObjectSync:${sanitize}:${filePath}`);\n    if (!filePath) {\n        logDebug('readObjectSync: filePath is undefined');\n        return null;\n    }\n    if (!fs.existsSync(filePath)) {\n        logDebug(`readObjectSync: File at ${filePath} does not exist`);\n        return null;\n    }\n    let obj;\n    try {\n        obj = JSON.parse(fs.readFileSync(filePath));\n        if (sanitize) {\n            logDebug(`readObjectSync: will sanitize file at: ${filePath}`);\n            if (c) {\n                obj = sanitizeDynamicRefs(c, obj);\n            }\n            if (obj._refs) {\n                obj = sanitizeDynamicProps(obj, obj._refs);\n            }\n        }\n    } catch (e) {\n        logWarning(`readObjectSync: Parsing of ${chalk.white(filePath)} failed with ${e}`);\n        return null;\n    }\n    return obj;\n};\n\nexport const updateObjectSync = (filePath, updateObj) => {\n    let output;\n    const obj = readObjectSync(filePath);\n    if (obj) {\n        output = merge(obj, updateObj);\n    } else {\n        output = updateObj;\n    }\n    writeFileSync(filePath, output);\n    return output;\n};\n\nexport const getRealPath = (c, p, key = 'undefined', original) => {\n    if (!p) {\n        if (original) logInfo(`Path ${chalk.white(key)} is not defined. using default: ${chalk.white(original)}`);\n        return original;\n    }\n    if (p.startsWith('./')) {\n        return path.join(c.paths.project.dir, p);\n    }\n    const output = p.replace(/\\$RNV_HOME/g, c.paths.rnv.dir)\n        .replace(/~/g, c.paths.home.dir)\n        .replace(/\\$USER_HOME/g, c.paths.home.dir)\n        .replace(/\\$PROJECT_HOME/g, c.paths.project.dir)\n        .replace(/\\$WORKSPACE_HOME/g, c.paths.workspace.dir)\n        .replace(/RNV_HOME/g, c.paths.rnv.dir)\n        .replace(/USER_HOME/g, c.paths.home.dir)\n        .replace(/PROJECT_HOME/g, c.paths.project.dir);\n    return output;\n};\n\nconst _refToValue = (c, ref, key) => {\n    const val = ref.replace('$REF$:', '').split('$...');\n\n    const realPath = getRealPath(c, val[0], key);\n\n    if (realPath && realPath.includes('.json') && val.length === 2) {\n        if (fs.existsSync(realPath)) {\n            const obj = readObjectSync(realPath);\n\n            try {\n                const output = val[1].split('.').reduce((o, i) => o[i], obj);\n                return output;\n            } catch (e) {\n                logWarning(`_refToValue: ${e}`);\n            }\n        } else {\n            logWarning(`_refToValue: ${chalk.white(realPath)} does not exist!`);\n        }\n    }\n    return ref;\n};\n\nexport const arrayMerge = (destinationArray, sourceArray, mergeOptions) => {\n    const jointArray = destinationArray.concat(sourceArray);\n    const uniqueArray = jointArray.filter((item, index) => jointArray.indexOf(item) === index);\n    return uniqueArray;\n};\n\nconst _arrayMergeOverride = (destinationArray, sourceArray, mergeOptions) => sourceArray;\n\nexport const sanitizeDynamicRefs = (c, obj) => {\n    if (!obj) return obj;\n    if (Array.isArray(obj)) {\n        obj.forEach((v) => {\n            sanitizeDynamicRefs(c, v);\n        });\n    }\n    Object.keys(obj).forEach((key) => {\n        const val = obj[key];\n        if (val) {\n            if (typeof val === 'string') {\n                if (val.startsWith('$REF$:')) {\n                    obj[key] = _refToValue(c, val, key);\n                }\n            } else {\n                sanitizeDynamicRefs(c, val);\n            }\n        }\n    });\n    return obj;\n};\n\nexport const sanitizeDynamicProps = (obj, props) => {\n    if (!obj || !props) return obj;\n    if (Array.isArray(obj)) {\n        obj.forEach((v) => {\n            if (typeof val === 'string') {\n                Object.keys(props).forEach((pk) => {\n                    val = val.replace(`@${pk}@`, props[pk]).replace(`{{props.${pk}}}`, props[pk]);\n                    obj[key] = val;\n                });\n            } else {\n                sanitizeDynamicProps(v, props);\n            }\n        });\n    }\n    Object.keys(obj).forEach((key) => {\n        let val = obj[key];\n        if (val) {\n            if (typeof val === 'string') {\n                Object.keys(props).forEach((pk) => {\n                    val = val.replace(`@${pk}@`, props[pk]).replace(`{{props.${pk}}}`, props[pk]);\n                    obj[key] = val;\n                });\n            } else {\n                sanitizeDynamicProps(val, props);\n            }\n        }\n    });\n    return obj;\n};\n\n\nexport const mergeObjects = (c, obj1, obj2, dynamicRefs = true, replaceArrays = false) => {\n    if (!obj2) return obj1;\n    if (!obj1) return obj2;\n    const obj = merge(obj1, obj2, { arrayMerge: replaceArrays ? _arrayMergeOverride : arrayMerge });\n    return dynamicRefs ? sanitizeDynamicRefs(c, obj) : obj;\n};\n\nexport const updateConfigFile = async (update, globalConfigPath) => {\n    const configContents = JSON.parse(fs.readFileSync(globalConfigPath));\n\n    if (update.androidSdk) {\n        configContents.sdks.ANDROID_SDK = update.androidSdk;\n    }\n\n    if (update.tizenSdk) {\n        configContents.sdks.TIZEN_SDK = update.tizenSdk;\n    }\n\n    if (update.webosSdk) {\n        configContents.sdks.WEBOS_SDK = update.webosSdk;\n    }\n\n    logDebug(`Updating ${globalConfigPath}. New file ${JSON.stringify(configContents, null, 3)}`);\n\n    fs.writeFileSync(globalConfigPath, JSON.stringify(configContents, null, 3));\n};\n\nexport const replaceHomeFolder = (p) => {\n    if (isSystemWin) return p.replace('~', process.env.USERPROFILE);\n    return p.replace('~', process.env.HOME);\n};\n\nexport const getFileListSync = (dir) => {\n    let results = [];\n    const list = fs.readdirSync(dir);\n    list.forEach((file) => {\n        file = `${dir}/${file}`;\n        const stat = fs.statSync(file);\n        if (stat && stat.isDirectory()) {\n            /* Recurse into a subdirectory */\n            results = results.concat(getFileListSync(file));\n        } else {\n            /* Is a file */\n            results.push(file);\n        }\n    });\n    return results;\n};\n\nexport default {\n    sanitizeDynamicRefs,\n    getFileListSync,\n    removeDirs,\n    copyFileSync,\n    copyFolderRecursiveSync,\n    removeDir,\n    removeDirsSync,\n    removeFilesSync,\n    saveAsJs,\n    mkdirSync,\n    copyFolderContentsRecursive,\n    copyFolderContentsRecursiveSync,\n    cleanFolder,\n    writeFileSync,\n    readObjectSync,\n    updateObjectSync,\n    arrayMerge,\n    mergeObjects,\n    updateConfigFile,\n    replaceHomeFolder\n};\n"],"mappings":"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"}