{"version":3,"file":"exec.js","names":["require","exec","execSync","_execute","c","command","opts","defaultOpts","stdio","localDir","path","resolve","preferLocal","all","maxErrorLength","program","mono","interactive","silent","shell","mergedOpts","cleanCommand","interval","intervalTimer","timer","privateMask","Array","isArray","join","logMessage","privateParams","replaceOverridesInString","logDebug","ignoreErrors","spinner","ora","text","start","setInterval","console","log","child","rawCommand","args","execa","MAX_OUTPUT_LENGTH","printLastLine","buffer","Buffer","from","toString","trim","lastLine","split","pop","substring","length","info","stdout","pipe","process","on","then","res","off","succeed","clearInterval","catch","err","fail","errMessage","parseErrorMessage","stderr","message","Promise","reject","execCLI","cli","p","fs","existsSync","chalk","white","paths","globalConfigPath","executeAsync","cmd","Config","getConfig","includes","platform","replace","executeTelnet","port","nc2","NClient","output","addr","runtime","localhost","parseInt","connect","send","data","resp","close","toSearch","arr","errFound","filter","v","search","map","str","extractedError","isUsingWindows","fileNotExists","commandName","callback","access","constants","F_OK","fileNotExistsSync","accessSync","e","localExecutable","X_OK","localExecutableSync","commandExistsUnix","cleanedCommandName","isFile","error","commandExistsWindows","test","commandExistsUnixSync","commandExistsWindowsSync","cleanInput","s","isPathName","dirname","basename","commandExists","commandExistsSync","cleanNodeModules","logTask","project","nodeModulesDir","removeDirs","rnv","npmInstall","failOnError","invalidatePodsChecksum","logError","logWarning","f","openCommand"],"sources":["../../src/systemTools/exec.js"],"sourcesContent":["// /* eslint-disable import/no-cycle */\nimport path from 'path';\nimport fs, { access, accessSync, constants } from 'fs';\nimport chalk from 'chalk';\nimport execa from 'execa';\nimport ora from 'ora';\nimport NClient from 'netcat/client';\nimport Config from '../config';\n\nimport { logDebug, logTask, logError, logWarning } from './logger';\nimport { removeDirs, invalidatePodsChecksum } from './fileutils';\nimport { replaceOverridesInString } from '../utils';\n\nconst { exec, execSync } = require('child_process');\n\n/**\n *\n * Also accepts the Node's child_process exec/spawn options\n *\n * @typedef {Object} Opts\n * @property {Object} privateParams - private params that will be masked in the logs\n * @property {Boolean} silent - don't print anything\n * @property {Boolean} ignoreErrors - will print the loader but it will finish with a\n * checkmark regardless of the outcome. Also, it never throws a catch.\n * @property {Boolean} interactive - when you want to execute a command that requires user input\n *\n * Execute commands\n *\n * @param {String} command - command to be executed\n * @param {Opts} [opts={}] - the options for the command\n * @returns {Promise}\n *\n */\nconst _execute = (c, command, opts = {}) => {\n    const defaultOpts = {\n        stdio: 'pipe',\n        localDir: path.resolve('./node_modules/.bin'),\n        preferLocal: true,\n        all: true,\n        maxErrorLength: c.program?.maxErrorLength,\n        mono: c.program?.mono,\n    };\n\n    if (opts.interactive) {\n        defaultOpts.silent = true;\n        defaultOpts.stdio = 'inherit';\n        defaultOpts.shell = true;\n    }\n\n    const mergedOpts = { ...defaultOpts, ...opts };\n\n    let cleanCommand = command;\n    let interval;\n    const intervalTimer = 30000; // 30s\n    let timer = intervalTimer;\n    const privateMask = '*******';\n\n    if (Array.isArray(command)) cleanCommand = command.join(' ');\n\n    let logMessage = cleanCommand;\n    const { privateParams } = mergedOpts;\n    if (privateParams && Array.isArray(privateParams)) {\n        logMessage = replaceOverridesInString(command, privateParams, privateMask);\n    }\n\n    logDebug(`_execute: ${logMessage}`);\n    const { silent, mono, maxErrorLength, ignoreErrors } = mergedOpts;\n    const spinner = !silent && !mono && ora({ text: `Executing: ${logMessage}` }).start();\n\n    if (mono) {\n        interval = setInterval(() => {\n            console.log(`Executing: ${logMessage} - ${timer / 1000}s`);\n            timer += intervalTimer;\n        }, intervalTimer);\n    }\n    let child;\n    if (opts.rawCommand) {\n        const { args } = opts.rawCommand;\n        child = execa(command, args, mergedOpts);\n    } else {\n        child = execa.command(cleanCommand, mergedOpts);\n    }\n\n    const MAX_OUTPUT_LENGTH = 200;\n\n    const printLastLine = (buffer) => {\n        const text = Buffer.from(buffer).toString().trim();\n        const lastLine = text.split('\\n').pop();\n        spinner.text = replaceOverridesInString(lastLine.substring(0, MAX_OUTPUT_LENGTH), privateParams, privateMask);\n        if (lastLine.length === MAX_OUTPUT_LENGTH) spinner.text += '...\\n';\n    };\n\n    if (c.program?.info) {\n        child?.stdout?.pipe(process.stdout);\n    } else if (spinner) {\n        child?.stdout?.on('data', printLastLine);\n    }\n\n    return child.then((res) => {\n        spinner && child?.stdout?.off('data', printLastLine);\n        !silent && !mono && spinner.succeed(`Executing: ${logMessage}`);\n        logDebug(replaceOverridesInString(res.all, privateParams, privateMask));\n        interval && clearInterval(interval);\n        // logDebug(res);\n        return res.stdout;\n    }).catch((err) => {\n        spinner && child?.stdout?.off('data', printLastLine);\n        if (!silent && !mono && !ignoreErrors) spinner.fail(`FAILED: ${logMessage}`); // parseErrorMessage will return false if nothing is found, default to previous implementation\n\n        logDebug(replaceOverridesInString(err.all, privateParams, privateMask));\n        interval && clearInterval(interval);\n        // logDebug(err);\n        if (ignoreErrors && !silent && !mono) {\n            spinner.succeed(`Executing: ${logMessage}`);\n            return true;\n        }\n        let errMessage = parseErrorMessage(err.all, maxErrorLength) || err.stderr || err.message;\n        errMessage = replaceOverridesInString(errMessage, privateParams, privateMask);\n        return Promise.reject(`COMMAND: \\n\\n${logMessage} \\n\\nFAILED with ERROR: \\n\\n${errMessage}`); // parseErrorMessage will return false if nothing is found, default to previous implementation\n    });\n};\n\n/**\n *\n * Execute CLI command\n *\n * @param {Object} c - the trusty old c object\n * @param {String} cli - the cli to be executed\n * @param {String} command - the command to be executed\n * @param {Opts} [opts={}] - the options for the command\n * @returns {Promise}\n *\n */\nconst execCLI = (c, cli, command, opts = {}) => {\n    if (!c.program) return Promise.reject('You need to pass c object as first parameter to execCLI()');\n    const p = c.cli[cli];\n\n    if (!fs.existsSync(p)) {\n        logDebug('execCLI error', cli, command);\n        return Promise.reject(`Location of your cli ${chalk.white(p)} does not exists. check your ${chalk.white(\n            c.paths.globalConfigPath\n        )} file if you SDK path is correct`);\n    }\n\n    return _execute(c, `${p} ${command}`, { ...opts, shell: true });\n};\n\n/**\n *\n * Execute a plain command\n *\n * @param {String} command - the command to be executed\n * @param {Opts} [opts={}] - the options for the command\n * @returns {Promise}\n *\n */\nconst executeAsync = (c, cmd, opts) => {\n    // swap values if c is not specified and get it from it's rightful place, config :)\n    if (typeof c === 'string') {\n        opts = cmd;\n        cmd = c;\n        c = Config.getConfig();\n    }\n    if (cmd.includes('npm') && process.platform === 'win32') cmd.replace('npm', 'npm.cmd');\n    return _execute(c, cmd, opts);\n};\n\n/**\n *\n * Connect to a local telnet server and execute a command\n *\n * @param {Number|String} port - where do you want me to connect to?\n * @param {String} command - the command to be executed once I'm connected\n * @returns {Promise}\n *\n */\nconst executeTelnet = (c, port, command) => new Promise((resolve) => {\n    const nc2 = new NClient();\n    logDebug(`execTelnet: ${port} ${command}`);\n\n    let output = '';\n\n    nc2.addr(c.runtime.localhost)\n        .port(parseInt(port, 10))\n        .connect()\n        .send(`${command}\\n`);\n    nc2.on('data', (data) => {\n        const resp = Buffer.from(data).toString();\n        output += resp;\n        if (output.includes('OK')) nc2.close();\n    });\n    nc2.on('close', () => resolve(output));\n});\n\n// Legacy error parser\n// export const parseErrorMessage = (text, maxErrorLength = 800) => {\n//     const errors = [];\n//     const toSearch = /(exception|error|fatal|\\[!])/i;\n//\n//     const extractError = (t) => {\n//         const errorFound = t ? t.search(toSearch) : -1;\n//         if (errorFound === -1) return errors.length ? errors.join(' ') : false; // return the errors or false if we found nothing at all\n//         const usefulString = t.substring(errorFound); // dump first part of the string that doesn't contain what we look for\n//         let extractedError = usefulString.substring(0, maxErrorLength);\n//         if (extractedError.length === maxErrorLength) extractedError += '...'; // add elipsis if string is bigger than maxErrorLength\n//         errors.push(extractedError); // save the error\n//         const newString = usefulString.substring(100); // dump everything we processed and continue\n//         return extractError(newString);\n//     };\n//\n//     return extractError(text);\n// };\n\nexport const parseErrorMessage = (text, maxErrorLength = 800) => {\n    if (!text) return '';\n    const toSearch = /(exception|error|fatal|\\[!])/i;\n    let arr = text.split('\\n');\n\n    let errFound = 0;\n    arr = arr.filter((v) => {\n        if (v === '') return false;\n        // Cleaner iOS reporting\n        if (v.includes('-Werror')) {\n            return false;\n        }\n        // Cleaner Android reporting\n        if (v.includes('[DEBUG]') || v.includes('[INFO]') || v.includes('[LIFECYCLE]') || v.includes('[WARN]') || v.includes(':+HeapDumpOnOutOfMemoryError') || v.includes('.errors.') || v.includes('-exception-') || v.includes('error_prone_annotations')) {\n            return false;\n        }\n        if (v.search(toSearch) !== -1) {\n            errFound = 5;\n            return true;\n        }\n        if (errFound > 0) {\n            errFound -= 1;\n            return true;\n        }\n        return false;\n    });\n\n    arr = arr.map((str) => {\n        const v = str.replace(/\\s{2,}/g, ' ');\n        let extractedError = v.substring(0, maxErrorLength);\n        if (extractedError.length === maxErrorLength) extractedError += '...';\n        return extractedError;\n    });\n\n    return arr.join('\\n');\n};\n\n\nconst isUsingWindows = process.platform === 'win32';\n\nconst fileNotExists = (commandName, callback) => {\n    access(commandName, constants.F_OK,\n        (err) => {\n            callback(!err);\n        });\n};\n\nconst fileNotExistsSync = (commandName) => {\n    try {\n        accessSync(commandName, constants.F_OK);\n        return false;\n    } catch (e) {\n        return true;\n    }\n};\n\nconst localExecutable = (commandName, callback) => {\n    access(commandName, constants.F_OK | constants.X_OK,\n        (err) => {\n            callback(null, !err);\n        });\n};\n\nconst localExecutableSync = (commandName) => {\n    try {\n        accessSync(commandName, constants.F_OK | constants.X_OK);\n        return true;\n    } catch (e) {\n        return false;\n    }\n};\n\nconst commandExistsUnix = (commandName, cleanedCommandName, callback) => {\n    fileNotExists(commandName, (isFile) => {\n        if (!isFile) {\n            exec(`command -v ${cleanedCommandName\n            } 2>/dev/null`\n                  + ` && { echo >&1 ${cleanedCommandName}; exit 0; }`,\n            (error, stdout) => {\n                callback(null, !!stdout);\n            });\n            return;\n        }\n\n        localExecutable(commandName, callback);\n    });\n};\n\nconst commandExistsWindows = (commandName, cleanedCommandName, callback) => {\n    if (/[\\x00-\\x1f<>:\"\\|\\?\\*]/.test(commandName)) {\n        callback(null, false);\n        return;\n    }\n    exec(`where ${cleanedCommandName}`,\n        (error) => {\n            if (error !== null) {\n                callback(null, false);\n            } else {\n                callback(null, true);\n            }\n        });\n};\n\nconst commandExistsUnixSync = (commandName, cleanedCommandName) => {\n    if (fileNotExistsSync(commandName)) {\n        try {\n            const stdout = execSync(`command -v ${cleanedCommandName\n            } 2>/dev/null`\n              + ` && { echo >&1 ${cleanedCommandName}; exit 0; }`);\n            return !!stdout;\n        } catch (error) {\n            return false;\n        }\n    }\n    return localExecutableSync(commandName);\n};\n\nconst commandExistsWindowsSync = (commandName, cleanedCommandName) => {\n    if (/[\\x00-\\x1f<>:\"\\|\\?\\*]/.test(commandName)) {\n        return false;\n    }\n    try {\n        const stdout = execSync(`where ${cleanedCommandName}`, { stdio: [] });\n        return !!stdout;\n    } catch (error) {\n        return false;\n    }\n};\n\nlet cleanInput = (s) => {\n    if (/[^A-Za-z0-9_\\/:=-]/.test(s)) {\n        s = `'${s.replace(/'/g, \"'\\\\''\")}'`;\n        s = s.replace(/^(?:'')+/g, '') // unduplicate single-quote at the beginning\n            .replace(/\\\\'''/g, \"\\\\'\"); // remove non-escaped single-quote if there are enclosed between 2 escaped\n    }\n    return s;\n};\n\nif (isUsingWindows) {\n    cleanInput = (s) => {\n        const isPathName = /[\\\\]/.test(s);\n        if (isPathName) {\n            const dirname = `\"${path.dirname(s)}\"`;\n            const basename = `\"${path.basename(s)}\"`;\n            return `${dirname}:${basename}`;\n        }\n        return `\"${s}\"`;\n    };\n}\n\nconst commandExists = (commandName, callback) => {\n    const cleanedCommandName = cleanInput(commandName);\n    if (!callback && typeof Promise !== 'undefined') {\n        return new Promise(((resolve, reject) => {\n            commandExists(commandName, (error, output) => {\n                if (output) {\n                    resolve(commandName);\n                } else {\n                    reject(error);\n                }\n            });\n        }));\n    }\n    if (isUsingWindows) {\n        commandExistsWindows(commandName, cleanedCommandName, callback);\n    } else {\n        commandExistsUnix(commandName, cleanedCommandName, callback);\n    }\n};\n\nconst commandExistsSync = (commandName) => {\n    const cleanedCommandName = cleanInput(commandName);\n    if (isUsingWindows) {\n        return commandExistsWindowsSync(commandName, cleanedCommandName);\n    }\n    return commandExistsUnixSync(commandName, cleanedCommandName);\n};\n\nexport const cleanNodeModules = c => new Promise((resolve, reject) => {\n    logTask(`cleanNodeModules:${c.paths.project.nodeModulesDir}`);\n    removeDirs([\n        path.join(c.paths.project.nodeModulesDir, 'react-native-safe-area-view/.git'),\n        path.join(c.paths.project.nodeModulesDir, '@react-navigation/native/node_modules/react-native-safe-area-view/.git'),\n        path.join(c.paths.project.nodeModulesDir, 'react-navigation/node_modules/react-native-safe-area-view/.git'),\n        path.join(c.paths.rnv.nodeModulesDir, 'react-native-safe-area-view/.git'),\n        path.join(c.paths.rnv.nodeModulesDir, '@react-navigation/native/node_modules/react-native-safe-area-view/.git'),\n        path.join(c.paths.rnv.nodeModulesDir, 'react-navigation/node_modules/react-native-safe-area-view/.git')\n    ]).then(() => resolve()).catch(e => reject(e));\n});\n\nexport const npmInstall = async (failOnError = false) => {\n    logTask('npmInstall');\n    const c = Config.getConfig();\n\n    return executeAsync('npm install')\n        .then(() => invalidatePodsChecksum(c))\n        .catch((e) => {\n            if (failOnError) {\n                return logError(e);\n            }\n            logWarning(`${e}\\n Seems like your node_modules is corrupted by other libs. ReNative will try to fix it for you`);\n            return cleanNodeModules(Config.getConfig())\n                .then(() => npmInstall(true))\n                .catch(f => logError(f));\n        });\n};\n\n// eslint-disable-next-line no-nested-ternary\nconst openCommand = process.platform === 'darwin' ? 'open' : process.platform === 'win32' ? 'start' : 'xdg-open';\n\nexport { executeAsync, execCLI, commandExists, commandExistsSync, openCommand, executeTelnet };\n\nexport default {\n    executeAsync,\n    execCLI,\n    openCommand,\n    executeTelnet\n};\n"],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAAoD;;AAEpD,aAA2BA,OAAO,CAAC,eAAe,CAAC,CAA3CC,IAAI,UAAJA,IAAI,CAAEC,QAAQ,UAARA,QAAQ;;;;;;;;;;;;;;;;;;;;AAoBtB,GAAMC,SAAQ,CAAG,QAAXA,SAAQ,CAAIC,CAAC,CAAEC,OAAO,CAAgB,2CAAdC,KAAI,2DAAG,CAAC,CAAC;AACnC,GAAMC,YAAW,CAAG;AAChBC,KAAK,CAAE,MAAM;AACbC,QAAQ,CAAEC,aAAI,CAACC,OAAO,CAAC,qBAAqB,CAAC;AAC7CC,WAAW,CAAE,IAAI;AACjBC,GAAG,CAAE,IAAI;AACTC,cAAc,aAAEV,CAAC,CAACW,OAAO,eAAT,WAAWD,cAAc;AACzCE,IAAI,cAAEZ,CAAC,CAACW,OAAO,eAAT,YAAWC;AACrB,CAAC;;AAED,GAAIV,IAAI,CAACW,WAAW,CAAE;AAClBV,WAAW,CAACW,MAAM,CAAG,IAAI;AACzBX,WAAW,CAACC,KAAK,CAAG,SAAS;AAC7BD,WAAW,CAACY,KAAK,CAAG,IAAI;AAC5B;;AAEA,GAAMC,WAAU,gCAAQb,WAAW,EAAKD,IAAI,CAAE;;AAE9C,GAAIe,aAAY,CAAGhB,OAAO;AAC1B,GAAIiB,SAAQ;AACZ,GAAMC,cAAa,CAAG,KAAK;AAC3B,GAAIC,MAAK,CAAGD,aAAa;AACzB,GAAME,YAAW,CAAG,SAAS;;AAE7B,GAAIC,KAAK,CAACC,OAAO,CAACtB,OAAO,CAAC,CAAEgB,YAAY,CAAGhB,OAAO,CAACuB,IAAI,CAAC,GAAG,CAAC;;AAE5D,GAAIC,WAAU,CAAGR,YAAY;AAC7B,GAAQS,cAAa,CAAKV,UAAU,CAA5BU,aAAa;AACrB,GAAIA,aAAa,EAAIJ,KAAK,CAACC,OAAO,CAACG,aAAa,CAAC,CAAE;AAC/CD,UAAU,CAAG,GAAAE,+BAAwB,EAAC1B,OAAO,CAAEyB,aAAa,CAAEL,WAAW,CAAC;AAC9E;;AAEA,GAAAO,gBAAQ,eAAcH,UAAU,CAAG;AACnC,GAAQX,OAAM,CAAyCE,UAAU,CAAzDF,MAAM,CAAEF,IAAI,CAAmCI,UAAU,CAAjDJ,IAAI,CAAEF,cAAc,CAAmBM,UAAU,CAA3CN,cAAc,CAAEmB,YAAY,CAAKb,UAAU,CAA3Ba,YAAY;AAClD,GAAMC,QAAO,CAAG,CAAChB,MAAM,EAAI,CAACF,IAAI,EAAI,GAAAmB,YAAG,EAAC,CAAEC,IAAI,eAAgBP,UAAa,CAAC,CAAC,CAACQ,KAAK,EAAE;;AAErF,GAAIrB,IAAI,CAAE;AACNM,QAAQ,CAAGgB,WAAW,CAAC,UAAM;AACzBC,OAAO,CAACC,GAAG,eAAeX,UAAU,OAAML,KAAK,CAAG,IAAI,KAAI;AAC1DA,KAAK,EAAID,aAAa;AAC1B,CAAC,CAAEA,aAAa,CAAC;AACrB;AACA,GAAIkB,MAAK;AACT,GAAInC,IAAI,CAACoC,UAAU,CAAE;AACjB,GAAQC,KAAI,CAAKrC,IAAI,CAACoC,UAAU,CAAxBC,IAAI;AACZF,KAAK,CAAG,GAAAG,cAAK,EAACvC,OAAO,CAAEsC,IAAI,CAAEvB,UAAU,CAAC;AAC5C,CAAC,IAAM;AACHqB,KAAK,CAAGG,cAAK,CAACvC,OAAO,CAACgB,YAAY,CAAED,UAAU,CAAC;AACnD;;AAEA,GAAMyB,kBAAiB,CAAG,GAAG;;AAE7B,GAAMC,cAAa,CAAG,QAAhBA,cAAa,CAAIC,MAAM,CAAK;AAC9B,GAAMX,KAAI,CAAGY,MAAM,CAACC,IAAI,CAACF,MAAM,CAAC,CAACG,QAAQ,EAAE,CAACC,IAAI,EAAE;AAClD,GAAMC,SAAQ,CAAGhB,IAAI,CAACiB,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,EAAE;AACvCpB,OAAO,CAACE,IAAI,CAAG,GAAAL,+BAAwB,EAACqB,QAAQ,CAACG,SAAS,CAAC,CAAC,CAAEV,iBAAiB,CAAC,CAAEf,aAAa,CAAEL,WAAW,CAAC;AAC7G,GAAI2B,QAAQ,CAACI,MAAM,GAAKX,iBAAiB,CAAEX,OAAO,CAACE,IAAI,EAAI,OAAO;AACtE,CAAC;;AAED,gBAAIhC,CAAC,CAACW,OAAO,SAAT,YAAW0C,IAAI,CAAE;AACjB,QAAAhB,KAAK,8BAAL,OAAOiB,MAAM,eAAb,cAAeC,IAAI,CAACC,OAAO,CAACF,MAAM,CAAC;AACvC,CAAC,IAAM,IAAIxB,OAAO,CAAE;AAChB,SAAAO,KAAK,+BAAL,QAAOiB,MAAM,eAAb,eAAeG,EAAE,CAAC,MAAM,CAAEf,aAAa,CAAC;AAC5C;;AAEA,MAAOL,MAAK,CAACqB,IAAI,CAAC,SAACC,GAAG,CAAK;AACvB7B,OAAO,YAAIO,KAAK,+BAAL,QAAOiB,MAAM,eAAb,eAAeM,GAAG,CAAC,MAAM,CAAElB,aAAa,CAAC;AACpD,CAAC5B,MAAM,EAAI,CAACF,IAAI,EAAIkB,OAAO,CAAC+B,OAAO,eAAepC,UAAU,CAAG;AAC/D,GAAAG,gBAAQ,EAAC,GAAAD,+BAAwB,EAACgC,GAAG,CAAClD,GAAG,CAAEiB,aAAa,CAAEL,WAAW,CAAC,CAAC;AACvEH,QAAQ,EAAI4C,aAAa,CAAC5C,QAAQ,CAAC;;AAEnC,MAAOyC,IAAG,CAACL,MAAM;AACrB,CAAC,CAAC,CAACS,KAAK,CAAC,SAACC,GAAG,CAAK;AACdlC,OAAO,YAAIO,KAAK,+BAAL,QAAOiB,MAAM,eAAb,eAAeM,GAAG,CAAC,MAAM,CAAElB,aAAa,CAAC;AACpD,GAAI,CAAC5B,MAAM,EAAI,CAACF,IAAI,EAAI,CAACiB,YAAY,CAAEC,OAAO,CAACmC,IAAI,YAAYxC,UAAU,CAAG;;AAE5E,GAAAG,gBAAQ,EAAC,GAAAD,+BAAwB,EAACqC,GAAG,CAACvD,GAAG,CAAEiB,aAAa,CAAEL,WAAW,CAAC,CAAC;AACvEH,QAAQ,EAAI4C,aAAa,CAAC5C,QAAQ,CAAC;;AAEnC,GAAIW,YAAY,EAAI,CAACf,MAAM,EAAI,CAACF,IAAI,CAAE;AAClCkB,OAAO,CAAC+B,OAAO,eAAepC,UAAU,CAAG;AAC3C,MAAO,KAAI;AACf;AACA,GAAIyC,WAAU,CAAGC,iBAAiB,CAACH,GAAG,CAACvD,GAAG,CAAEC,cAAc,CAAC,EAAIsD,GAAG,CAACI,MAAM,EAAIJ,GAAG,CAACK,OAAO;AACxFH,UAAU,CAAG,GAAAvC,+BAAwB,EAACuC,UAAU,CAAExC,aAAa,CAAEL,WAAW,CAAC;AAC7E,MAAOiD,QAAO,CAACC,MAAM,iBAAiB9C,UAAU,gCAA+ByC,UAAU,CAAG;AAChG,CAAC,CAAC;AACN,CAAC;;;;;;;;;;;;;AAaD,GAAMM,QAAO,CAAG,QAAVA,QAAO,CAAIxE,CAAC,CAAEyE,GAAG,CAAExE,OAAO,CAAgB,IAAdC,KAAI,2DAAG,CAAC,CAAC;AACvC,GAAI,CAACF,CAAC,CAACW,OAAO,CAAE,MAAO2D,QAAO,CAACC,MAAM,CAAC,2DAA2D,CAAC;AAClG,GAAMG,EAAC,CAAG1E,CAAC,CAACyE,GAAG,CAACA,GAAG,CAAC;;AAEpB,GAAI,CAACE,WAAE,CAACC,UAAU,CAACF,CAAC,CAAC,CAAE;AACnB,GAAA9C,gBAAQ,EAAC,eAAe,CAAE6C,GAAG,CAAExE,OAAO,CAAC;AACvC,MAAOqE,QAAO,CAACC,MAAM,yBAAyBM,cAAK,CAACC,KAAK,CAACJ,CAAC,CAAC,iCAAgCG,cAAK,CAACC,KAAK;AACnG9E,CAAC,CAAC+E,KAAK,CAACC,gBAAgB,CAC3B,oCAAmC;;AACxC;;AAEA,MAAOjF,SAAQ,CAACC,CAAC,CAAK0E,CAAC,KAAIzE,OAAO,gCAASC,IAAI,MAAEa,KAAK,CAAE,IAAI,GAAG;AACnE,CAAC,CAAC;;;;;;;;;;;AAWF,GAAMkE,aAAY,CAAG,QAAfA,aAAY,CAAIjF,CAAC,CAAEkF,GAAG,CAAEhF,IAAI,CAAK;;AAEnC,GAAI,MAAOF,EAAC,GAAK,QAAQ,CAAE;AACvBE,IAAI,CAAGgF,GAAG;AACVA,GAAG,CAAGlF,CAAC;AACPA,CAAC,CAAGmF,eAAM,CAACC,SAAS,EAAE;AAC1B;AACA,GAAIF,GAAG,CAACG,QAAQ,CAAC,KAAK,CAAC,EAAI7B,OAAO,CAAC8B,QAAQ,GAAK,OAAO,CAAEJ,GAAG,CAACK,OAAO,CAAC,KAAK,CAAE,SAAS,CAAC;AACtF,MAAOxF,SAAQ,CAACC,CAAC,CAAEkF,GAAG,CAAEhF,IAAI,CAAC;AACjC,CAAC,CAAC;;;;;;;;;;;AAWF,GAAMsF,cAAa,CAAG,QAAhBA,cAAa,CAAIxF,CAAC,CAAEyF,IAAI,CAAExF,OAAO,QAAK,IAAIqE,QAAO,CAAC,SAAC/D,OAAO,CAAK;AACjE,GAAMmF,IAAG,CAAG,GAAIC,gBAAO,EAAE;AACzB,GAAA/D,gBAAQ,iBAAgB6D,IAAI,KAAIxF,OAAO,CAAG;;AAE1C,GAAI2F,OAAM,CAAG,EAAE;;AAEfF,GAAG,CAACG,IAAI,CAAC7F,CAAC,CAAC8F,OAAO,CAACC,SAAS,CAAC;AACxBN,IAAI,CAACO,QAAQ,CAACP,IAAI,CAAE,EAAE,CAAC,CAAC;AACxBQ,OAAO,EAAE;AACTC,IAAI,CAAIjG,OAAO,MAAK;AACzByF,GAAG,CAACjC,EAAE,CAAC,MAAM,CAAE,SAAC0C,IAAI,CAAK;AACrB,GAAMC,KAAI,CAAGxD,MAAM,CAACC,IAAI,CAACsD,IAAI,CAAC,CAACrD,QAAQ,EAAE;AACzC8C,MAAM,EAAIQ,IAAI;AACd,GAAIR,MAAM,CAACP,QAAQ,CAAC,IAAI,CAAC,CAAEK,GAAG,CAACW,KAAK,EAAE;AAC1C,CAAC,CAAC;AACFX,GAAG,CAACjC,EAAE,CAAC,OAAO,CAAE,iBAAMlD,QAAO,CAACqF,MAAM,CAAC,GAAC;AAC1C,CAAC,CAAC,GAAC;;;;;;;;;;;;;;;;;;;;;AAqBI,GAAMzB,kBAAiB,CAAG,QAApBA,kBAAiB,CAAInC,IAAI,CAA2B,IAAzBtB,eAAc,2DAAG,GAAG;AACxD,GAAI,CAACsB,IAAI,CAAE,MAAO,EAAE;AACpB,GAAMsE,SAAQ,CAAG,+BAA+B;AAChD,GAAIC,IAAG,CAAGvE,IAAI,CAACiB,KAAK,CAAC,IAAI,CAAC;;AAE1B,GAAIuD,SAAQ,CAAG,CAAC;AAChBD,GAAG,CAAGA,GAAG,CAACE,MAAM,CAAC,SAACC,CAAC,CAAK;AACpB,GAAIA,CAAC,GAAK,EAAE,CAAE,MAAO,MAAK;;AAE1B,GAAIA,CAAC,CAACrB,QAAQ,CAAC,SAAS,CAAC,CAAE;AACvB,MAAO,MAAK;AAChB;;AAEA,GAAIqB,CAAC,CAACrB,QAAQ,CAAC,SAAS,CAAC,EAAIqB,CAAC,CAACrB,QAAQ,CAAC,QAAQ,CAAC,EAAIqB,CAAC,CAACrB,QAAQ,CAAC,aAAa,CAAC,EAAIqB,CAAC,CAACrB,QAAQ,CAAC,QAAQ,CAAC,EAAIqB,CAAC,CAACrB,QAAQ,CAAC,8BAA8B,CAAC,EAAIqB,CAAC,CAACrB,QAAQ,CAAC,UAAU,CAAC,EAAIqB,CAAC,CAACrB,QAAQ,CAAC,aAAa,CAAC,EAAIqB,CAAC,CAACrB,QAAQ,CAAC,yBAAyB,CAAC,CAAE;AAClP,MAAO,MAAK;AAChB;AACA,GAAIqB,CAAC,CAACC,MAAM,CAACL,QAAQ,CAAC,GAAK,CAAC,CAAC,CAAE;AAC3BE,QAAQ,CAAG,CAAC;AACZ,MAAO,KAAI;AACf;AACA,GAAIA,QAAQ,CAAG,CAAC,CAAE;AACdA,QAAQ,EAAI,CAAC;AACb,MAAO,KAAI;AACf;AACA,MAAO,MAAK;AAChB,CAAC,CAAC;;AAEFD,GAAG,CAAGA,GAAG,CAACK,GAAG,CAAC,SAACC,GAAG,CAAK;AACnB,GAAMH,EAAC,CAAGG,GAAG,CAACtB,OAAO,CAAC,SAAS,CAAE,GAAG,CAAC;AACrC,GAAIuB,eAAc,CAAGJ,CAAC,CAACvD,SAAS,CAAC,CAAC,CAAEzC,cAAc,CAAC;AACnD,GAAIoG,cAAc,CAAC1D,MAAM,GAAK1C,cAAc,CAAEoG,cAAc,EAAI,KAAK;AACrE,MAAOA,eAAc;AACzB,CAAC,CAAC;;AAEF,MAAOP,IAAG,CAAC/E,IAAI,CAAC,IAAI,CAAC;AACzB,CAAC,CAAC;;;AAGF,GAAMuF,eAAc,CAAGvD,OAAO,CAAC8B,QAAQ,GAAK,OAAO;;AAEnD,GAAM0B,cAAa,CAAG,QAAhBA,cAAa,CAAIC,WAAW,CAAEC,QAAQ,CAAK;AAC7C,GAAAC,UAAM,EAACF,WAAW,CAAEG,aAAS,CAACC,IAAI;AAC9B,SAACrD,GAAG,CAAK;AACLkD,QAAQ,CAAC,CAAClD,GAAG,CAAC;AAClB,CAAC,CAAC;AACV,CAAC;;AAED,GAAMsD,kBAAiB,CAAG,QAApBA,kBAAiB,CAAIL,WAAW,CAAK;AACvC,GAAI;AACA,GAAAM,cAAU,EAACN,WAAW,CAAEG,aAAS,CAACC,IAAI,CAAC;AACvC,MAAO,MAAK;AAChB,CAAE,MAAOG,CAAC,CAAE;AACR,MAAO,KAAI;AACf;AACJ,CAAC;;AAED,GAAMC,gBAAe,CAAG,QAAlBA,gBAAe,CAAIR,WAAW,CAAEC,QAAQ,CAAK;AAC/C,GAAAC,UAAM,EAACF,WAAW,CAAEG,aAAS,CAACC,IAAI,CAAGD,aAAS,CAACM,IAAI;AAC/C,SAAC1D,GAAG,CAAK;AACLkD,QAAQ,CAAC,IAAI,CAAE,CAAClD,GAAG,CAAC;AACxB,CAAC,CAAC;AACV,CAAC;;AAED,GAAM2D,oBAAmB,CAAG,QAAtBA,oBAAmB,CAAIV,WAAW,CAAK;AACzC,GAAI;AACA,GAAAM,cAAU,EAACN,WAAW,CAAEG,aAAS,CAACC,IAAI,CAAGD,aAAS,CAACM,IAAI,CAAC;AACxD,MAAO,KAAI;AACf,CAAE,MAAOF,CAAC,CAAE;AACR,MAAO,MAAK;AAChB;AACJ,CAAC;;AAED,GAAMI,kBAAiB,CAAG,QAApBA,kBAAiB,CAAIX,WAAW,CAAEY,kBAAkB,CAAEX,QAAQ,CAAK;AACrEF,aAAa,CAACC,WAAW,CAAE,SAACa,MAAM,CAAK;AACnC,GAAI,CAACA,MAAM,CAAE;AACTjI,IAAI,CAAC,cAAcgI,kBAAkB;;AAEXA,kBAAkB,eAAa;AACzD,SAACE,KAAK,CAAEzE,MAAM,CAAK;AACf4D,QAAQ,CAAC,IAAI,CAAE,CAAC,CAAC5D,MAAM,CAAC;AAC5B,CAAC,CAAC;AACF;AACJ;;AAEAmE,eAAe,CAACR,WAAW,CAAEC,QAAQ,CAAC;AAC1C,CAAC,CAAC;AACN,CAAC;;AAED,GAAMc,qBAAoB,CAAG,QAAvBA,qBAAoB,CAAIf,WAAW,CAAEY,kBAAkB,CAAEX,QAAQ,CAAK;AACxE,GAAI,uBAAuB,CAACe,IAAI,CAAChB,WAAW,CAAC,CAAE;AAC3CC,QAAQ,CAAC,IAAI,CAAE,KAAK,CAAC;AACrB;AACJ;AACArH,IAAI,UAAUgI,kBAAkB;AAC5B,SAACE,KAAK,CAAK;AACP,GAAIA,KAAK,GAAK,IAAI,CAAE;AAChBb,QAAQ,CAAC,IAAI,CAAE,KAAK,CAAC;AACzB,CAAC,IAAM;AACHA,QAAQ,CAAC,IAAI,CAAE,IAAI,CAAC;AACxB;AACJ,CAAC,CAAC;AACV,CAAC;;AAED,GAAMgB,sBAAqB,CAAG,QAAxBA,sBAAqB,CAAIjB,WAAW,CAAEY,kBAAkB,CAAK;AAC/D,GAAIP,iBAAiB,CAACL,WAAW,CAAC,CAAE;AAChC,GAAI;AACA,GAAM3D,OAAM,CAAGxD,QAAQ,CAAC,cAAc+H,kBAAkB;;AAElCA,kBAAkB,eAAa,CAAC;AACtD,MAAO,CAAC,CAACvE,MAAM;AACnB,CAAE,MAAOyE,KAAK,CAAE;AACZ,MAAO,MAAK;AAChB;AACJ;AACA,MAAOJ,oBAAmB,CAACV,WAAW,CAAC;AAC3C,CAAC;;AAED,GAAMkB,yBAAwB,CAAG,QAA3BA,yBAAwB,CAAIlB,WAAW,CAAEY,kBAAkB,CAAK;AAClE,GAAI,uBAAuB,CAACI,IAAI,CAAChB,WAAW,CAAC,CAAE;AAC3C,MAAO,MAAK;AAChB;AACA,GAAI;AACA,GAAM3D,OAAM,CAAGxD,QAAQ,UAAU+H,kBAAkB,CAAI,CAAEzH,KAAK,CAAE,EAAG,CAAC,CAAC;AACrE,MAAO,CAAC,CAACkD,MAAM;AACnB,CAAE,MAAOyE,KAAK,CAAE;AACZ,MAAO,MAAK;AAChB;AACJ,CAAC;;AAED,GAAIK,WAAU,CAAG,oBAACC,CAAC,CAAK;AACpB,GAAI,oBAAoB,CAACJ,IAAI,CAACI,CAAC,CAAC,CAAE;AAC9BA,CAAC,KAAOA,CAAC,CAAC9C,OAAO,CAAC,IAAI,CAAE,OAAO,CAAC,IAAG;AACnC8C,CAAC,CAAGA,CAAC,CAAC9C,OAAO,CAAC,WAAW,CAAE,EAAE,CAAC;AACzBA,OAAO,CAAC,QAAQ,CAAE,KAAK,CAAC;AACjC;AACA,MAAO8C,EAAC;AACZ,CAAC;;AAED,GAAItB,cAAc,CAAE;AAChBqB,UAAU,CAAG,oBAACC,CAAC,CAAK;AAChB,GAAMC,WAAU,CAAG,MAAM,CAACL,IAAI,CAACI,CAAC,CAAC;AACjC,GAAIC,UAAU,CAAE;AACZ,GAAMC,QAAO,MAAOjI,aAAI,CAACiI,OAAO,CAACF,CAAC,CAAC,KAAG;AACtC,GAAMG,SAAQ,MAAOlI,aAAI,CAACkI,QAAQ,CAACH,CAAC,CAAC,KAAG;AACxC,MAAUE,QAAO,KAAIC,QAAQ;AACjC;AACA,WAAWH,CAAC;AAChB,CAAC;AACL;;AAEA,GAAMI,cAAa,CAAG,QAAhBA,cAAa,CAAIxB,WAAW,CAAEC,QAAQ,CAAK;AAC7C,GAAMW,mBAAkB,CAAGO,UAAU,CAACnB,WAAW,CAAC;AAClD,GAAI,CAACC,QAAQ,EAAI,MAAO5C,QAAO,GAAK,WAAW,CAAE;AAC7C,MAAO,IAAIA,QAAO,CAAE,SAAC/D,OAAO,CAAEgE,MAAM,CAAK;AACrCkE,aAAa,CAACxB,WAAW,CAAE,SAACc,KAAK,CAAEnC,MAAM,CAAK;AAC1C,GAAIA,MAAM,CAAE;AACRrF,OAAO,CAAC0G,WAAW,CAAC;AACxB,CAAC,IAAM;AACH1C,MAAM,CAACwD,KAAK,CAAC;AACjB;AACJ,CAAC,CAAC;AACN,CAAC,CAAE;AACP;AACA,GAAIhB,cAAc,CAAE;AAChBiB,oBAAoB,CAACf,WAAW,CAAEY,kBAAkB,CAAEX,QAAQ,CAAC;AACnE,CAAC,IAAM;AACHU,iBAAiB,CAACX,WAAW,CAAEY,kBAAkB,CAAEX,QAAQ,CAAC;AAChE;AACJ,CAAC,CAAC;;AAEF,GAAMwB,kBAAiB,CAAG,QAApBA,kBAAiB,CAAIzB,WAAW,CAAK;AACvC,GAAMY,mBAAkB,CAAGO,UAAU,CAACnB,WAAW,CAAC;AAClD,GAAIF,cAAc,CAAE;AAChB,MAAOoB,yBAAwB,CAAClB,WAAW,CAAEY,kBAAkB,CAAC;AACpE;AACA,MAAOK,sBAAqB,CAACjB,WAAW,CAAEY,kBAAkB,CAAC;AACjE,CAAC,CAAC;;AAEK,GAAMc,iBAAgB,CAAG,QAAnBA,iBAAgB,CAAG3I,CAAC,QAAI,IAAIsE,QAAO,CAAC,SAAC/D,OAAO,CAAEgE,MAAM,CAAK;AAClE,GAAAqE,eAAO,sBAAqB5I,CAAC,CAAC+E,KAAK,CAAC8D,OAAO,CAACC,cAAc,CAAG;AAC7D,GAAAC,qBAAU,EAAC;AACPzI,aAAI,CAACkB,IAAI,CAACxB,CAAC,CAAC+E,KAAK,CAAC8D,OAAO,CAACC,cAAc,CAAE,kCAAkC,CAAC;AAC7ExI,aAAI,CAACkB,IAAI,CAACxB,CAAC,CAAC+E,KAAK,CAAC8D,OAAO,CAACC,cAAc,CAAE,wEAAwE,CAAC;AACnHxI,aAAI,CAACkB,IAAI,CAACxB,CAAC,CAAC+E,KAAK,CAAC8D,OAAO,CAACC,cAAc,CAAE,gEAAgE,CAAC;AAC3GxI,aAAI,CAACkB,IAAI,CAACxB,CAAC,CAAC+E,KAAK,CAACiE,GAAG,CAACF,cAAc,CAAE,kCAAkC,CAAC;AACzExI,aAAI,CAACkB,IAAI,CAACxB,CAAC,CAAC+E,KAAK,CAACiE,GAAG,CAACF,cAAc,CAAE,wEAAwE,CAAC;AAC/GxI,aAAI,CAACkB,IAAI,CAACxB,CAAC,CAAC+E,KAAK,CAACiE,GAAG,CAACF,cAAc,CAAE,gEAAgE,CAAC,CAC1G,CAAC;AAACpF,IAAI,CAAC,iBAAMnD,QAAO,EAAE,GAAC,CAACwD,KAAK,CAAC,SAAAyD,CAAC,QAAIjD,OAAM,CAACiD,CAAC,CAAC,GAAC;AAClD,CAAC,CAAC,GAAC;;AAEI,GAAMyB,WAAU,CAAG,QAAbA,WAAU,yJAAUC,WAAW,+CAAG,KAAK;AAChD,GAAAN,eAAO,EAAC,YAAY,CAAC;AACf5I,CAAC,CAAGmF,eAAM,CAACC,SAAS,EAAE;;AAErBH,YAAY,CAAC,aAAa,CAAC;AAC7BvB,IAAI,CAAC,iBAAM,GAAAyF,iCAAsB,EAACnJ,CAAC,CAAC,GAAC;AACrC+D,KAAK,CAAC,SAACyD,CAAC,CAAK;AACV,GAAI0B,WAAW,CAAE;AACb,MAAO,GAAAE,gBAAQ,EAAC5B,CAAC,CAAC;AACtB;AACA,GAAA6B,kBAAU,EAAI7B,CAAC,mGAAkG;AACjH,MAAOmB,iBAAgB,CAACxD,eAAM,CAACC,SAAS,EAAE,CAAC;AACtC1B,IAAI,CAAC,iBAAMuF,WAAU,CAAC,IAAI,CAAC,GAAC;AAC5BlF,KAAK,CAAC,SAAAuF,CAAC,QAAI,GAAAF,gBAAQ,EAACE,CAAC,CAAC,GAAC;AAChC,CAAC,CAAC,sEACT,CAAC;;;;AAGF,GAAMC,YAAW,CAAG/F,OAAO,CAAC8B,QAAQ,GAAK,QAAQ,CAAG,MAAM,CAAG9B,OAAO,CAAC8B,QAAQ,GAAK,OAAO,CAAG,OAAO,CAAG,UAAU,CAAC;;;;AAIlG;AACXL,YAAY,CAAZA,YAAY;AACZT,OAAO,CAAPA,OAAO;AACP+E,WAAW,CAAXA,WAAW;AACX/D,aAAa,CAAbA;AACJ,CAAC"}