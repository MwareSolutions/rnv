{"version":3,"sources":["../../../src/platformTools/android/kotlinParser.js"],"names":["JS_BUNDLE_DEFAULTS","android","androidtv","androidwear","JS_BUNDLE_DEFAULTS_BUNDLED","parseMainApplicationSync","c","platform","appFolder","applicationPath","bundleAssets","bundleFile","bundlerIp","pluginConfigAndroid","pluginApplicationDebugServer","runtime","port","path","join","pattern","override","pluginApplicationImports","pluginPackages","pluginApplicationMethods","pluginApplicationCreateMethods","parseMainActivitySync","activityPath","pluginActivityImports","pluginActivityMethods","pluginActivityCreateMethods","pluginActivityResultMethods","parseSplashActivitySync","splashPath","enableAndroidX","pluginSplashActivityImports","injectPluginKotlinSync","plugin","key","pkg","pathFixed","modulePath","activityImports","Array","forEach","activityImport","indexOf","activityMethods","mainActivity","createMethods","resultMethods","imports","v","methods","_injectPackage","MainApplication","packages","mainApplication","mainApplicationMethods","paths","project","config","packageParams","className","_extractClassName","split","pop"],"mappings":"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","sourcesContent":["import path from 'path';\nimport {\n    getAppFolder,\n    writeCleanFile,\n    getAppId,\n    getBuildFilePath,\n    getEntryFile,\n    getGetJsBundleFile,\n    getConfigProp,\n    getIP\n} from '../../common';\nimport {\n    logWarning\n} from '../../systemTools/logger';\n\nconst JS_BUNDLE_DEFAULTS = {\n    android: '\"super.getJSBundleFile()\"',\n    androidtv: '\"super.getJSBundleFile()\"',\n    // CRAPPY BUT Android Wear does not support webview required for connecting to packager\n    androidwear: '\"assets://index.androidwear.bundle\"',\n};\n\nconst JS_BUNDLE_DEFAULTS_BUNDLED = {\n    android: '\"assets://index.android.bundle\"',\n    androidtv: '\"assets://index.android.bundle\"',\n    androidwear: '\"assets://index.android.bundle\"',\n};\n\nexport const parseMainApplicationSync = (c, platform) => {\n    const appFolder = getAppFolder(c, platform);\n    const applicationPath = 'app/src/main/java/rnv/MainApplication.kt';\n    const bundleAssets = getConfigProp(c, platform, 'bundleAssets');\n    const bundleFile = getGetJsBundleFile(c, platform) || bundleAssets ? JS_BUNDLE_DEFAULTS_BUNDLED[platform] : JS_BUNDLE_DEFAULTS[platform];\n    // const host = getConfigProp(c, platform, 'host', '10.0.2.2');\n    const bundlerIp = getIP() || '10.0.2.2';\n    if (!bundleAssets) {\n        c.pluginConfigAndroid.pluginApplicationDebugServer += '    var mPreferences: SharedPreferences = PreferenceManager.getDefaultSharedPreferences(this)\\n';\n        c.pluginConfigAndroid.pluginApplicationDebugServer += `    mPreferences?.edit().putString(\"debug_http_host\", \"${bundlerIp}:${c.runtime.port}\").apply()\\n`;\n    }\n\n\n    writeCleanFile(getBuildFilePath(c, platform, applicationPath), path.join(appFolder, applicationPath), [\n        { pattern: '{{APPLICATION_ID}}', override: getAppId(c, platform) },\n        { pattern: '{{ENTRY_FILE}}', override: getEntryFile(c, platform) },\n        { pattern: '{{GET_JS_BUNDLE_FILE}}', override: bundleFile },\n        { pattern: '{{PLUGIN_IMPORTS}}', override: c.pluginConfigAndroid.pluginApplicationImports },\n        { pattern: '{{PLUGIN_PACKAGES}}', override: c.pluginConfigAndroid.pluginPackages },\n        { pattern: '{{PLUGIN_METHODS}}', override: c.pluginConfigAndroid.pluginApplicationMethods },\n        { pattern: '{{PLUGIN_ON_CREATE}}', override: c.pluginConfigAndroid.pluginApplicationCreateMethods },\n        { pattern: '{{PLUGIN_DEBUG_SERVER}}', override: c.pluginConfigAndroid.pluginApplicationDebugServer },\n\n    ]);\n};\n\nexport const parseMainActivitySync = (c, platform) => {\n    const appFolder = getAppFolder(c, platform);\n    const activityPath = 'app/src/main/java/rnv/MainActivity.kt';\n    writeCleanFile(getBuildFilePath(c, platform, activityPath), path.join(appFolder, activityPath), [\n        { pattern: '{{APPLICATION_ID}}', override: getAppId(c, platform) },\n        { pattern: '{{PLUGIN_ACTIVITY_IMPORTS}}', override: c.pluginConfigAndroid.pluginActivityImports },\n        { pattern: '{{PLUGIN_ACTIVITY_METHODS}}', override: c.pluginConfigAndroid.pluginActivityMethods },\n        { pattern: '{{PLUGIN_ON_CREATE}}', override: c.pluginConfigAndroid.pluginActivityCreateMethods },\n        { pattern: '{{PLUGIN_ON_ACTIVITY_RESULT}}', override: c.pluginConfigAndroid.pluginActivityResultMethods },\n    ]);\n};\n\nexport const parseSplashActivitySync = (c, platform) => {\n    const appFolder = getAppFolder(c, platform);\n    const splashPath = 'app/src/main/java/rnv/SplashActivity.kt';\n\n\n    // TODO This is temporary ANDROIDX support. whole kotlin parser will be refactored in the near future\n    const enableAndroidX = getConfigProp(c, platform, 'enableAndroidX', true);\n    if (enableAndroidX === true) {\n        c.pluginConfigAndroid.pluginSplashActivityImports += 'import androidx.appcompat.app.AppCompatActivity\\n';\n    } else {\n        c.pluginConfigAndroid.pluginSplashActivityImports += 'import android.support.v7.app.AppCompatActivity\\n';\n    }\n\n    writeCleanFile(getBuildFilePath(c, platform, splashPath), path.join(appFolder, splashPath), [\n        { pattern: '{{APPLICATION_ID}}', override: getAppId(c, platform) },\n        { pattern: '{{PLUGIN_SPLASH_ACTIVITY_IMPORTS}}', override: c.pluginConfigAndroid.pluginSplashActivityImports }\n    ]);\n};\n\nexport const injectPluginKotlinSync = (c, plugin, key, pkg) => {\n    const pathFixed = plugin.path ? `${plugin.path}` : `node_modules/${key}/android`;\n    const modulePath = `../../${pathFixed}`;\n\n    if (plugin.activityImports instanceof Array) {\n        plugin.activityImports.forEach((activityImport) => {\n            // Avoid duplicate imports\n            if (c.pluginConfigAndroid.pluginActivityImports.indexOf(activityImport) === -1) {\n                c.pluginConfigAndroid.pluginActivityImports += `import ${activityImport}\\n`;\n            }\n        });\n    }\n\n    if (plugin.activityMethods instanceof Array) {\n        c.pluginConfigAndroid.pluginActivityMethods += '\\n';\n        c.pluginConfigAndroid.pluginActivityMethods += `${plugin.activityMethods.join('\\n    ')}`;\n    }\n\n    const { mainActivity } = plugin;\n    if (mainActivity) {\n        if (mainActivity.createMethods instanceof Array) {\n            c.pluginConfigAndroid.pluginActivityCreateMethods += '\\n';\n            c.pluginConfigAndroid.pluginActivityCreateMethods += `${mainActivity.createMethods.join('\\n    ')}`;\n        }\n\n        if (mainActivity.resultMethods instanceof Array) {\n            c.pluginConfigAndroid.pluginActivityResultMethods += '\\n';\n            c.pluginConfigAndroid.pluginActivityResultMethods += `${mainActivity.resultMethods.join('\\n    ')}`;\n        }\n\n        if (mainActivity.imports instanceof Array) {\n            mainActivity.imports.forEach((v) => {\n                c.pluginConfigAndroid.pluginActivityImports += `import ${v}\\n`;\n            });\n        }\n\n        if (mainActivity.methods instanceof Array) {\n            c.pluginConfigAndroid.pluginActivityMethods += '\\n';\n            c.pluginConfigAndroid.pluginActivityMethods += `${mainActivity.methods.join('\\n    ')}`;\n        }\n    }\n\n    if (plugin.imports) {\n        plugin.imports.forEach((v) => {\n            c.pluginConfigAndroid.pluginApplicationImports += `import ${v}\\n`;\n        });\n    }\n\n    _injectPackage(c, plugin, pkg);\n\n    if (plugin.MainApplication) {\n        if (plugin.MainApplication.packages) {\n            plugin.MainApplication.packages.forEach((v) => {\n                _injectPackage(c, plugin, v);\n            });\n        }\n    }\n\n    const { mainApplication } = plugin;\n    if (mainApplication) {\n        if (mainApplication.createMethods instanceof Array) {\n            c.pluginConfigAndroid.pluginApplicationCreateMethods += '\\n';\n            c.pluginConfigAndroid.pluginApplicationCreateMethods += `${mainApplication.createMethods.join('\\n    ')}`;\n        }\n\n        if (mainApplication.imports instanceof Array) {\n            mainApplication.imports.forEach((v) => {\n                c.pluginConfigAndroid.pluginApplicationImports += `import ${v}\\n`;\n            });\n        }\n\n        if (mainApplication.methods instanceof Array) {\n            c.pluginConfigAndroid.pluginApplicationMethods += '\\n';\n            c.pluginConfigAndroid.pluginApplicationMethods += `${mainApplication.methods.join('\\n    ')}`;\n        }\n    }\n\n    if (plugin.mainApplicationMethods) {\n        logWarning(`Plugin ${key} in ${c.paths.project.config} is using DEPRECATED \"${c.platform}\": { MainApplicationMethods }. Use \"${c.platform}\": { \"mainApplication\": { \"methods\": []}} instead`);\n        c.pluginConfigAndroid.pluginApplicationMethods += `\\n${plugin.mainApplicationMethods}\\n`;\n    }\n};\n\nconst _injectPackage = (c, plugin, pkg) => {\n    if (pkg) c.pluginConfigAndroid.pluginApplicationImports += `import ${pkg}\\n`;\n    let packageParams = '';\n    if (plugin.packageParams) {\n        packageParams = plugin.packageParams.join(',');\n    }\n\n    const className = _extractClassName(pkg);\n    if (className) c.pluginConfigAndroid.pluginPackages += `${className}(${packageParams}),\\n`;\n};\n\nconst _extractClassName = pkg => (pkg ? pkg.split('.').pop() : null);\n"],"file":"kotlinParser.js"}