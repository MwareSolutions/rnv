{"version":3,"file":"gradleParser.js","names":["parseBuildGradleSync","c","platform","appFolder","getAppFolder","dexOptions","pluginConfigAndroid","buildGradleBuildScriptDexOptions","writeCleanFile","getBuildFilePath","path","join","pattern","override","compileSdkVersion","supportLibVersion","buildToolsVersion","buildGradleAllProjectsRepositories","buildGradleBuildScriptRepositories","buildGradleBuildScriptDependencies","parseAppBuildGradleSync","logTask","minSdkVersion","getConfigProp","targetSdkVersion","debugSigning","appBuildGradleSigningConfigs","localProperties","files","workspace","appConfig","configPrivate","keystorePath","storeFile","keystorePathFull","startsWith","paths","dir","fs","existsSync","genPropsPath","writeFileSync","keyAlias","storePassword","keyPassword","logWarning","chalk","white","pluginConfig","buildConfig","debugBuildTypes","platforms","gradle","buildTypes","debug","releaseBuildTypes","release","versionCodeOffset","isMultiApk","multiAPKs","splits","packagingOptions","compileOptions","enableAndroidX","appBuildGradleImplementations","enableHermes","applyPlugin","getAppId","getAppVersionCode","getAppVersion","appBuildGradleAfterEvaluate","defaultConfig","parseSettingsGradleSync","pluginIncludes","pluginPaths","parseGradlePropertiesSync","pluginGradleProperties","gradleProps","Object","keys","forEach","key","gradleProperties","injectPluginGradleSync","plugin","pkg","className","split","pop","packageParams","keyFixed","replace","pathFixed","modulePath","projectName","skipLinking","skipImplementation","implementation","implementations","v","appBuildGradle","apply","afterEvaluate","_fixAndroidLegacy","buildGradle","BuildGradle","allProjRepos","allprojects","repositories","k","buildscriptRepos","buildscript","buildscriptDeps","dependencies","buildscriptDexOptions","project","logDebug"],"sources":["../../../src/platformTools/android/gradleParser.js"],"sourcesContent":["import path from 'path';\nimport fs from 'fs';\nimport chalk from 'chalk';\nimport {\n    getAppFolder,\n    getAppVersion,\n    getAppVersionCode,\n    writeCleanFile,\n    getAppId,\n    getBuildFilePath,\n    getConfigProp\n} from '../../common';\nimport {\n    logTask,\n    logWarning,\n    logDebug\n} from '../../systemTools/logger';\n\nexport const parseBuildGradleSync = (c, platform) => {\n    const appFolder = getAppFolder(c, platform);\n\n    let dexOptions = '';\n\n    if (c.pluginConfigAndroid.buildGradleBuildScriptDexOptions) {\n        dexOptions = `dexOptions() {\n            ${c.pluginConfigAndroid.buildGradleBuildScriptDexOptions}\n        }`;\n    }\n\n    writeCleanFile(getBuildFilePath(c, platform, 'build.gradle'), path.join(appFolder, 'build.gradle'), [\n        { pattern: '{{COMPILE_SDK_VERSION}}', override: c.pluginConfigAndroid.compileSdkVersion },\n        { pattern: '{{SUPPORT_LIB_VERSION}}', override: c.pluginConfigAndroid.supportLibVersion },\n        { pattern: '{{BUILD_TOOLS_VERSION}}', override: c.pluginConfigAndroid.buildToolsVersion },\n        { pattern: '{{PLUGIN_INJECT_ALLPROJECTS_REPOSITORIES}}', override: c.pluginConfigAndroid.buildGradleAllProjectsRepositories },\n        { pattern: '{{PLUGIN_INJECT_BUILDSCRIPT_REPOSITORIES}}', override: c.pluginConfigAndroid.buildGradleBuildScriptRepositories },\n        { pattern: '{{PLUGIN_INJECT_BUILDSCRIPT_DEPENDENCIES}}', override: c.pluginConfigAndroid.buildGradleBuildScriptDependencies },\n        { pattern: '{{PLUGIN_INJECT_DEXOPTIONS}}', override: dexOptions }\n    ]);\n};\n\nexport const parseAppBuildGradleSync = (c, platform) => {\n    logTask('parseAppBuildGradleSync');\n    const appFolder = getAppFolder(c, platform);\n\n    // ANDROID PROPS\n    c.pluginConfigAndroid.minSdkVersion = getConfigProp(c, platform, 'minSdkVersion', 21);\n    c.pluginConfigAndroid.targetSdkVersion = getConfigProp(c, platform, 'targetSdkVersion', 28);\n    c.pluginConfigAndroid.compileSdkVersion = getConfigProp(c, platform, 'compileSdkVersion', 28);\n    c.pluginConfigAndroid.supportLibVersion = getConfigProp(c, platform, 'supportLibVersion', '28.0.0');\n    c.pluginConfigAndroid.buildToolsVersion = getConfigProp(c, platform, 'buildToolsVersion', '28.0.0');\n\n    // SIGNING CONFIGS\n    const debugSigning = `\n    debug {\n        storeFile file('debug.keystore')\n        storePassword \"android\"\n        keyAlias \"androiddebugkey\"\n        keyPassword \"android\"\n    }`;\n\n    c.pluginConfigAndroid.appBuildGradleSigningConfigs = `${debugSigning}\n    release`;\n    c.pluginConfigAndroid.localProperties = '';\n    // c.files.workspace.appConfig.configPrivate = _getPrivateConfig(c, platform);\n\n    if (c.files.workspace.appConfig.configPrivate && c.files.workspace.appConfig.configPrivate[platform]) {\n        const keystorePath = c.files.workspace.appConfig.configPrivate[platform].storeFile;\n        let keystorePathFull;\n        if (keystorePath) {\n            if (keystorePath.startsWith('./')) {\n                keystorePathFull = path.join(c.paths.workspace.appConfig.dir, keystorePath);\n            } else {\n                keystorePathFull = keystorePath;\n            }\n        }\n\n        if (fs.existsSync(keystorePathFull)) {\n            const genPropsPath = path.join(appFolder, 'keystore.properties');\n            fs.writeFileSync(genPropsPath, `# auto generated by ReNative\nstoreFile=${keystorePathFull}\nkeyAlias=${c.files.workspace.appConfig.configPrivate[platform].keyAlias}\nstorePassword=${c.files.workspace.appConfig.configPrivate[platform].storePassword}\nkeyPassword=${c.files.workspace.appConfig.configPrivate[platform].keyPassword}`);\n\n            c.pluginConfigAndroid.appBuildGradleSigningConfigs = `${debugSigning}\n            release {\n                storeFile file(keystoreProps['storeFile'])\n                storePassword keystoreProps['storePassword']\n                keyAlias keystoreProps['keyAlias']\n                keyPassword keystoreProps['keyPassword']\n            }`;\n\n            c.pluginConfigAndroid.localProperties = `\n          def keystorePropsFile = rootProject.file(\"keystore.properties\")\n          def keystoreProps = new Properties()\n          keystoreProps.load(new FileInputStream(keystorePropsFile))`;\n        } else {\n            logWarning(\n                `Your ${chalk.white(keystorePathFull)} does not exist. You won't be able to make production releases without it!`,\n            );\n        }\n    }\n\n    // BUILD_TYPES\n    const pluginConfig = c.buildConfig ?? {};\n    const debugBuildTypes = pluginConfig?.platforms[platform]?.gradle?.buildTypes?.debug ?? [];\n    const releaseBuildTypes = pluginConfig?.platforms[platform]?.gradle?.buildTypes?.release ?? [];\n    c.pluginConfigAndroid.buildTypes = `\n    debug {\n        minifyEnabled false\n        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n        ${debugBuildTypes.join('\\n        ')}\n    }\n    release {\n        minifyEnabled false\n        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        signingConfig signingConfigs.release\n        ${releaseBuildTypes.join('\\n        ')}\n    }`;\n\n\n    // MULTI APK\n    const versionCodeOffset = getConfigProp(c, platform, 'versionCodeOffset', 0);\n    const isMultiApk = getConfigProp(c, platform, 'multipleAPKs', false) === true;\n    c.pluginConfigAndroid.multiAPKs = '';\n    if (isMultiApk) {\n        c.pluginConfigAndroid.multiAPKs = `\n      ext.abiCodes = [\"armeabi-v7a\": 1, \"x86\": 2, \"arm64-v8a\": 3, \"x86_64\": 4]\n      import com.android.build.OutputFile\n\n      android.applicationVariants.all { variant ->\n        variant.outputs.each { output ->\n          def bavc = project.ext.abiCodes.get(output.getFilter(OutputFile.ABI))\n          if (bavc != null) {\n            output.versionCodeOverride = Integer.parseInt(Integer.toString(variant.versionCode) + Integer.toString(bavc)) + ${versionCodeOffset}\n          }\n        }\n      }`;\n    }\n\n    // SPLITS\n    c.pluginConfigAndroid.splits = '';\n    if (isMultiApk) {\n        c.pluginConfigAndroid.splits = `\n    splits {\n      abi {\n          reset()\n          enable true\n          include \"armeabi-v7a\", \"x86\", \"arm64-v8a\", \"x86_64\"\n          universalApk false\n      }\n    }\n`;\n    }\n\n\n    // PACKAGING OPTIONS\n    c.pluginConfigAndroid.packagingOptions = `\n    exclude 'META-INF/DEPENDENCIES.txt'\n    exclude 'META-INF/DEPENDENCIES'\n    exclude 'META-INF/dependencies.txt'\n    exclude 'META-INF/LICENSE.txt'\n    exclude 'META-INF/LICENSE'\n    exclude 'META-INF/license.txt'\n    exclude 'META-INF/LGPL2.1'\n    exclude 'META-INF/NOTICE.txt'\n    exclude 'META-INF/NOTICE'\n    exclude 'META-INF/notice.txt'\n    pickFirst 'lib/armeabi-v7a/libc++_shared.so'\n    pickFirst 'lib/x86_64/libc++_shared.so'\n    pickFirst 'lib/x86/libc++_shared.so'\n    pickFirst 'lib/arm64-v8a/libc++_shared.so'\n    pickFirst 'lib/arm64-v8a/libjsc.so'\n    pickFirst 'lib/x86_64/libjsc.so'`;\n\n    // COMPILE OPTIONS\n    c.pluginConfigAndroid.compileOptions = `\n    sourceCompatibility 1.8\n    targetCompatibility 1.8`;\n\n    // TODO This is temporary ANDROIDX support. whole gradle parser will be refactored in the near future\n    const enableAndroidX = getConfigProp(c, platform, 'enableAndroidX', true);\n    if (enableAndroidX === true) {\n        c.pluginConfigAndroid.appBuildGradleImplementations += '    implementation \"androidx.appcompat:appcompat:1.1.0\"\\n';\n    } else {\n        c.pluginConfigAndroid.appBuildGradleImplementations += '    implementation \\'com.android.support:appcompat-v7:27.0.2\\'\\n';\n    }\n\n    c.pluginConfigAndroid.appBuildGradleImplementations += '    implementation \"androidx.swiperefreshlayout:swiperefreshlayout:1.1.0-alpha02\"\\n';\n    // ENABLE HERMES\n    const enableHermes = getConfigProp(c, platform, 'enableHermes', false);\n\n    if (enableHermes) {\n        c.pluginConfigAndroid.appBuildGradleImplementations += '    debugImplementation files(\"../../../node_modules/hermes-engine/android/hermes-debug.aar\")\\n';\n        c.pluginConfigAndroid.appBuildGradleImplementations += '    releaseImplementation files(\"../../../node_modules/hermes-engine/android/hermes-release.aar\")\\n';\n    } else {\n        c.pluginConfigAndroid.appBuildGradleImplementations += '    implementation \\'org.webkit:android-jsc:+\\'\\n';\n    }\n    c.pluginConfigAndroid.enableHermes = `    enableHermes: ${enableHermes},`;\n\n    writeCleanFile(getBuildFilePath(c, platform, 'app/build.gradle'), path.join(appFolder, 'app/build.gradle'), [\n        { pattern: '{{PLUGIN_APPLY}}', override: c.pluginConfigAndroid.applyPlugin },\n        { pattern: '{{APPLICATION_ID}}', override: getAppId(c, platform) },\n        { pattern: '{{VERSION_CODE}}', override: getAppVersionCode(c, platform) },\n        { pattern: '{{VERSION_NAME}}', override: getAppVersion(c, platform) },\n        { pattern: '{{PLUGIN_IMPLEMENTATIONS}}', override: c.pluginConfigAndroid.appBuildGradleImplementations },\n        { pattern: '{{PLUGIN_AFTER_EVALUATE}}', override: c.pluginConfigAndroid.appBuildGradleAfterEvaluate },\n        { pattern: '{{PLUGIN_SIGNING_CONFIGS}}', override: c.pluginConfigAndroid.appBuildGradleSigningConfigs },\n        { pattern: '{{PLUGIN_SPLITS}}', override: c.pluginConfigAndroid.splits },\n        { pattern: '{{PLUGIN_ANDROID_DEFAULT_CONFIG}}', override: c.pluginConfigAndroid.defaultConfig },\n        { pattern: '{{PLUGIN_PACKAGING_OPTIONS}}', override: c.pluginConfigAndroid.packagingOptions },\n        { pattern: '{{PLUGIN_BUILD_TYPES}}', override: c.pluginConfigAndroid.buildTypes },\n        { pattern: '{{PLUGIN_MULTI_APKS}}', override: c.pluginConfigAndroid.multiAPKs },\n        { pattern: '{{MIN_SDK_VERSION}}', override: c.pluginConfigAndroid.minSdkVersion },\n        { pattern: '{{TARGET_SDK_VERSION}}', override: c.pluginConfigAndroid.targetSdkVersion },\n        { pattern: '{{COMPILE_SDK_VERSION}}', override: c.pluginConfigAndroid.compileSdkVersion },\n        { pattern: '{{PLUGIN_COMPILE_OPTIONS}}', override: c.pluginConfigAndroid.compileOptions },\n        { pattern: '{{PLUGIN_LOCAL_PROPERTIES}}', override: c.pluginConfigAndroid.localProperties },\n        { pattern: '{{PLUGIN_ENABLE_HERMES}}', override: c.pluginConfigAndroid.enableHermes }\n    ]);\n};\n\nexport const parseSettingsGradleSync = (c, platform) => {\n    const appFolder = getAppFolder(c, platform);\n\n    writeCleanFile(getBuildFilePath(c, platform, 'settings.gradle'), path.join(appFolder, 'settings.gradle'), [\n        { pattern: '{{PLUGIN_INCLUDES}}', override: c.pluginConfigAndroid.pluginIncludes },\n        { pattern: '{{PLUGIN_PATHS}}', override: c.pluginConfigAndroid.pluginPaths },\n    ]);\n};\n\nexport const parseGradlePropertiesSync = (c, platform) => {\n    const appFolder = getAppFolder(c, platform);\n    // GRADLE.PROPERTIES\n    let pluginGradleProperties = '';\n    const pluginConfigAndroid = c.buildConfig?.platforms?.[platform] || {};\n\n    const gradleProps = pluginConfigAndroid['gradle.properties'];\n\n    if (gradleProps) {\n        const enableAndroidX = getConfigProp(c, platform, 'enableAndroidX', true);\n        if (enableAndroidX === true) {\n            gradleProps['android.useAndroidX'] = true;\n            gradleProps['android.enableJetifier'] = true;\n        }\n\n        Object.keys(gradleProps).forEach((key) => {\n            pluginGradleProperties += `${key}=${gradleProps[key]}\\n`;\n        });\n    }\n\n    const gradleProperties = 'gradle.properties';\n    writeCleanFile(getBuildFilePath(c, platform, gradleProperties), path.join(appFolder, gradleProperties), [\n        { pattern: '{{PLUGIN_GRADLE_PROPERTIES}}', override: pluginGradleProperties }\n    ]);\n};\n\nexport const injectPluginGradleSync = (c, plugin, key, pkg) => {\n    const className = pkg ? pkg.split('.').pop() : null;\n    let packageParams = '';\n    if (plugin.packageParams) {\n        packageParams = plugin.packageParams.join(',');\n    }\n    const keyFixed = key.replace(/\\//g, '-').replace(/@/g, '');\n    const pathFixed = plugin.path ? `${plugin.path}` : `node_modules/${key}/android`;\n    const modulePath = `../../${pathFixed}`;\n\n    // APP/BUILD.GRADLE\n    if (plugin.projectName) {\n        if (!plugin.skipLinking) {\n            c.pluginConfigAndroid.pluginIncludes += `, ':${plugin.projectName}'`;\n            c.pluginConfigAndroid.pluginPaths += `project(':${\n                plugin.projectName\n            }').projectDir = new File(rootProject.projectDir, '${modulePath}')\\n`;\n        }\n        if (!plugin.skipImplementation) {\n            if (plugin.implementation) {\n                c.pluginConfigAndroid.appBuildGradleImplementations += `${plugin.implementation}\\n`;\n            } else {\n                c.pluginConfigAndroid.appBuildGradleImplementations += `    implementation project(':${plugin.projectName}')\\n`;\n            }\n        }\n    } else {\n        if (!plugin.skipLinking) {\n            c.pluginConfigAndroid.pluginIncludes += `, ':${keyFixed}'`;\n            c.pluginConfigAndroid.pluginPaths += `project(':${keyFixed}').projectDir = new File(rootProject.projectDir, '${modulePath}')\\n`;\n        }\n        if (!plugin.skipImplementation) {\n            if (plugin.implementation) {\n                c.pluginConfigAndroid.appBuildGradleImplementations += `${plugin.implementation}\\n`;\n            } else {\n                c.pluginConfigAndroid.appBuildGradleImplementations += `    implementation project(':${keyFixed}')\\n`;\n            }\n        }\n    }\n\n    if (plugin.implementations) {\n        plugin.implementations.forEach((v) => {\n            c.pluginConfigAndroid.appBuildGradleImplementations += `    implementation ${v}\\n`;\n        });\n    }\n\n    const appBuildGradle = plugin['app/build.gradle'];\n    if (appBuildGradle) {\n        if (appBuildGradle.apply) {\n            appBuildGradle.apply.forEach((v) => {\n                c.pluginConfigAndroid.applyPlugin += `apply ${v}\\n`;\n            });\n        }\n\n        if (appBuildGradle.defaultConfig) {\n            appBuildGradle.defaultConfig.forEach((v) => {\n                c.pluginConfigAndroid.defaultConfig += `${v}\\n`;\n            });\n        }\n    }\n\n    if (plugin.afterEvaluate) {\n        plugin.afterEvaluate.forEach((v) => {\n            c.pluginConfigAndroid.appBuildGradleAfterEvaluate += ` ${v}\\n`;\n        });\n    }\n    _fixAndroidLegacy(c, pathFixed);\n\n    // BUILD.GRADLE\n    const buildGradle = plugin.BuildGradle;\n    const allProjRepos = buildGradle?.allprojects?.repositories;\n    if (allProjRepos) {\n        for (k in allProjRepos) {\n            if (allProjRepos[k] === true) {\n                c.pluginConfigAndroid.buildGradleAllProjectsRepositories += `${k}\\n`;\n            }\n        }\n    }\n\n    const buildscriptRepos = buildGradle?.buildscript?.repositories;\n    if (buildscriptRepos) {\n        for (k in buildscriptRepos) {\n            if (buildscriptRepos[k] === true) {\n                c.pluginConfigAndroid.buildGradleBuildScriptRepositories += `${k}\\n`;\n            }\n        }\n    }\n\n    const buildscriptDeps = buildGradle?.buildscript?.dependencies;\n    if (buildscriptDeps) {\n        for (k in buildscriptDeps) {\n            if (buildscriptDeps[k] === true) {\n                c.pluginConfigAndroid.buildGradleBuildScriptDependencies += `${k}\\n`;\n            }\n        }\n    }\n\n    const buildscriptDexOptions = buildGradle?.dexOptions;\n    if (buildscriptDexOptions) {\n        for (k in buildscriptDexOptions) {\n            if (buildscriptDexOptions[k] === true) {\n                c.pluginConfigAndroid.buildGradleBuildScriptDexOptions += `${k}\\n`;\n            }\n        }\n    }\n};\n\nconst _fixAndroidLegacy = (c, modulePath) => {\n    const buildGradle = path.join(c.paths.project.dir, modulePath, 'build.gradle');\n\n    if (fs.existsSync(buildGradle)) {\n        logDebug('FIX:', buildGradle);\n        writeCleanFile(buildGradle, buildGradle, [\n            { pattern: \" compile '\", override: \"  implementation '\" },\n            { pattern: ' compile \"', override: '  implementation \"' },\n            { pattern: ' testCompile \"', override: '  testImplementation \"' },\n            { pattern: \" provided '\", override: \"  compileOnly '\" },\n            { pattern: ' provided \"', override: '  compileOnly \"' },\n            { pattern: ' compile fileTree', override: '  implementation fileTree' },\n        ]);\n    }\n};\n\n// const _getPrivateConfig = (c, platform) => {\n//     let privateConfigFolder = path.join(c.paths.workspace.dir, c.files.project.package.name, c.buildConfig.id);\n//     if (!fs.existsSync(privateConfigFolder)) {\n//         privateConfigFolder = path.join(c.paths.workspace.dir, c.files.project.package.name, 'appConfigs', c.buildConfig.id);\n//     }\n//     const appConfigSPP = c.buildConfig.platforms[platform] ? c.buildConfig.platforms[platform].signingPropertiesPath : null;\n//     const appConfigSPPClean = appConfigSPP ? appConfigSPP.replace('{globalConfigDir}', c.paths.workspace.dir) : null;\n//     const privateConfigPath = appConfigSPPClean || path.join(privateConfigFolder, 'config.private.json');\n//     c.paths.workspaceConfigPath = privateConfigPath;\n//     c.paths.workspace.appConfig.dir = privateConfigPath.replace('/config.private.json', '');\n//     if (fs.existsSync(privateConfigPath)) {\n//         try {\n//             const output = JSON.parse(fs.readFileSync(privateConfigPath));\n//             output.parentFolder = c.paths.workspace.appConfig.dir;\n//             output.path = privateConfigPath;\n//             logInfo(\n//                 `Found ${chalk.white(privateConfigPath)}. Will use it for production releases!`,\n//             );\n//             return output;\n//         } catch (e) {\n//             logError(e);\n//             return null;\n//         }\n//     } else {\n//         logWarning(\n//             `You're missing ${chalk.white(privateConfigPath)} for this app: . You won't be able to make production releases without it!`,\n//         );\n//         return null;\n//     }\n// };\n"],"mappings":"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"}