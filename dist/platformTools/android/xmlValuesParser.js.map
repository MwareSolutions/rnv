{"version":3,"sources":["../../../src/platformTools/android/xmlValuesParser.js"],"names":["parseValuesStringsSync","c","appFolder","platform","stringsPath","strings","pluginConfigAndroid","resourceStrings","forEach","v","tag","name","child_value","path","join","parseValuesColorsSync","pattern","override","hex","injectPluginXmlValuesSync","plugin","key","pkg","rStrings","ResourceStrings","children","obj","push"],"mappings":"kPAAA;AACA;;;;;;;;AAQA;;AAEO,GAAMA,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,CAAD,CAAO;AACzC,GAAMC,CAAAA,SAAS,CAAG,yBAAaD,CAAb,CAAgBA,CAAC,CAACE,QAAlB,CAAlB;AACA,GAAMC,CAAAA,WAAW,CAAG,qCAApB;AACA,GAAIC,CAAAA,OAAO,CAAG,eAAd;AACAA,OAAO,iCAAiC,wBAAYJ,CAAZ,CAAeA,CAAC,CAACE,QAAjB,CAAjC,cAAP;AACAF,CAAC,CAACK,mBAAF,CAAsBC,eAAtB,CAAsCC,OAAtC,CAA8C,SAACC,CAAD,CAAO;AACjDJ,OAAO,QAAUI,CAAC,CAACC,GAAZ,YAAyBD,CAAC,CAACE,IAA3B,OAAoCF,CAAC,CAACG,WAAtC,MAAsDH,CAAC,CAACC,GAAxD,MAAP;AACH,CAFD;AAGAL,OAAO,EAAI,cAAX;AACA,6BAAcQ,cAAKC,IAAL,CAAUZ,SAAV,CAAqBE,WAArB,CAAd,CAAiDC,OAAjD;AACH,CAVM,C;;AAYA,GAAMU,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACd,CAAD,CAAO;AACxC,GAAMC,CAAAA,SAAS,CAAG,yBAAaD,CAAb,CAAgBA,CAAC,CAACE,QAAlB,CAAlB;AACA,GAAMC,CAAAA,WAAW,CAAG,oCAApB;AACA,2BAAe,6BAAiBH,CAAjB,CAAoBA,CAAC,CAACE,QAAtB,CAAgCC,WAAhC,CAAf,CAA6DS,cAAKC,IAAL,CAAUZ,SAAV,CAAqBE,WAArB,CAA7D,CAAgG;AAC5F,CAAEY,OAAO,CAAE,sBAAX,CAAmCC,QAAQ,CAAE,0BAAc,0BAAchB,CAAd,CAAiBA,CAAC,CAACE,QAAnB,CAA6B,iBAA7B,CAAd,EAA+De,GAA5G,CAD4F,CAAhG;;AAGH,CANM,C;;AAQA,GAAMC,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAAClB,CAAD,CAAImB,MAAJ,CAAYC,GAAZ,CAAiBC,GAAjB,CAAyB;AAC9D,GAAMC,CAAAA,QAAQ,wBAAGH,MAAM,CAACI,eAAV,eAAG,sBAAwBC,QAAzC;AACA,GAAIF,QAAJ,CAAc;AACVA,QAAQ,CAACf,OAAT,CAAiB,SAACkB,GAAD,CAAS;AACtBzB,CAAC,CAACK,mBAAF,CAAsBC,eAAtB,CAAsCoB,IAAtC,CAA2CD,GAA3C;AACH,CAFD;AAGH;AACJ,CAPM,C","sourcesContent":["import path from 'path';\nimport {\n    getAppFolder,\n    getAppTitle,\n    writeCleanFile,\n    getBuildFilePath,\n    getConfigProp,\n    sanitizeColor\n} from '../../common';\nimport { writeFileSync } from '../../systemTools/fileutils';\n\nexport const parseValuesStringsSync = (c) => {\n    const appFolder = getAppFolder(c, c.platform);\n    const stringsPath = 'app/src/main/res/values/strings.xml';\n    let strings = '<resources>\\n';\n    strings += `  <string name=\"app_name\">${getAppTitle(c, c.platform)}</string>\\n`;\n    c.pluginConfigAndroid.resourceStrings.forEach((v) => {\n        strings += `  <${v.tag} name=\"${v.name}\">${v.child_value}</${v.tag}>\\n`;\n    });\n    strings += '</resources>';\n    writeFileSync(path.join(appFolder, stringsPath), strings);\n};\n\nexport const parseValuesColorsSync = (c) => {\n    const appFolder = getAppFolder(c, c.platform);\n    const stringsPath = 'app/src/main/res/values/colors.xml';\n    writeCleanFile(getBuildFilePath(c, c.platform, stringsPath), path.join(appFolder, stringsPath), [\n        { pattern: '{{PLUGIN_COLORS_BG}}', override: sanitizeColor(getConfigProp(c, c.platform, 'backgroundColor')).hex },\n    ]);\n};\n\nexport const injectPluginXmlValuesSync = (c, plugin, key, pkg) => {\n    const rStrings = plugin.ResourceStrings?.children;\n    if (rStrings) {\n        rStrings.forEach((obj) => {\n            c.pluginConfigAndroid.resourceStrings.push(obj);\n        });\n    }\n};\n"],"file":"xmlValuesParser.js"}