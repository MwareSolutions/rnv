{"version":3,"file":"manifestParser.js","names":["PROHIBITED_DUPLICATE_TAGS","SYSTEM_TAGS","_findChildNode","tag","name","node","logWarning","includes","i","children","length","ch","_convertToXML","manifestObj","_parseNode","n","level","output","space","nodeKeysCount","Object","keys","forEach","v","isSingleLine","endLine","k","nextLevel","_mergeNodeParameters","nodeParamsExt","_mergeNodeChildren","nodeChildrenExt","nameExt","childNode","console","log","push","parseAndroidManifestSync","c","platform","logTask","pluginConfig","baseManifestFilePath","path","join","paths","rnv","dir","baseManifestFile","readObjectSync","appFolder","getAppFolder","application","package","getAppId","pluginConfigAndroid","getFlavouredProp","buildConfig","platforms","applicationExt","parsePlugins","plugin","pluginPlat","key","androidManifest","prms","configPermissions","permissions","includedPermissions","getConfigProp","excludedPermissions","platPerm","pc","includedFeatures","excludedFeatures","manifestXml","manifestFile","writeCleanFile","getBuildFilePath","pattern","override","e","logError","injectPluginManifestSync","pkg","className","split","pop","packageParams","pathFixed","modulePath"],"sources":["../../../src/platformTools/android/manifestParser.js"],"sourcesContent":["import path from 'path';\nimport {\n    getAppFolder,\n    writeCleanFile,\n    getAppId,\n    getBuildFilePath,\n    getConfigProp,\n    getFlavouredProp\n} from '../../common';\nimport {\n    logTask,\n    logError,\n    logWarning\n} from '../../systemTools/logger';\nimport { readObjectSync } from '../../systemTools/fileutils';\nimport { getMergedPlugin, parsePlugins } from '../../pluginTools';\n\nconst PROHIBITED_DUPLICATE_TAGS = ['intent-filter'];\nconst SYSTEM_TAGS = ['tag', 'children'];\n\nconst _findChildNode = (tag, name, node) => {\n    if (!node) {\n        logWarning('_findChildNode: Node is undefined');\n        return;\n    }\n    if (!name && !PROHIBITED_DUPLICATE_TAGS.includes(tag)) return null; // Can't determine reused child nodes without unique name identifier\n    for (let i = 0; i < node.children.length; i++) {\n        const ch = node.children[i];\n        if (ch.tag === tag) {\n            if ((ch['android:name'] === name) || PROHIBITED_DUPLICATE_TAGS.includes(tag)) return ch;\n        }\n    }\n    return null;\n};\n\nconst _convertToXML = manifestObj => _parseNode(manifestObj, 0);\n\nconst _parseNode = (n, level) => {\n    let output = '';\n    let space = '';\n    for (let i = 0; i < level; i++) {\n        space += '    ';\n    }\n\n    let nodeKeysCount = 0;\n    Object.keys(n).forEach((v) => {\n        if (!SYSTEM_TAGS.includes(v)) nodeKeysCount++;\n    });\n    const isSingleLine = nodeKeysCount < 2;\n\n    if (!n.tag) {\n        logWarning('Each node must have tag key!');\n        return;\n    }\n\n    if (n) {\n        const endLine = isSingleLine ? ' ' : '\\n';\n        output += `${space}<${n.tag}${endLine}`;\n        for (const k in n) {\n            if (!SYSTEM_TAGS.includes(k)) {\n                output += `${isSingleLine ? '' : `${space}  `}${k}=\"${n[k]}\"${endLine}`;\n            }\n        }\n    } else {\n        output += `${space}<${n.tag}`;\n    }\n    if (n.children && n.children.length) {\n        if (isSingleLine) {\n            output += '>\\n';\n        } else {\n            output += `${space}>\\n`;\n        }\n\n        const nextLevel = level += 1;\n        n.children.forEach((v) => {\n            output += _parseNode(v, nextLevel);\n        });\n        output += `${space}</${n.tag}>\\n`;\n    } else {\n        output += `${isSingleLine ? '' : space}/>\\n`;\n    }\n    return output;\n};\n\nconst _mergeNodeParameters = (node, nodeParamsExt) => {\n    if (!nodeParamsExt) {\n        logWarning('_mergeNodeParameters: nodeParamsExt value is null');\n        return;\n    }\n    if (!node) {\n        logWarning('_mergeNodeParameters: node value is null');\n        return;\n    }\n\n    for (const k in nodeParamsExt) {\n        if (!SYSTEM_TAGS.includes(k)) node[k] = nodeParamsExt[k];\n    }\n};\n\nconst _mergeNodeChildren = (node, nodeChildrenExt = []) => {\n    // console.log('_mergeNodeChildren', node, 'OVERRIDE', nodeChildrenExt);\n    if (!node) {\n        logWarning('_mergeNodeChildren: Node is undefined');\n        return;\n    }\n    if (!node.children) node.children = [];\n    nodeChildrenExt.forEach((v) => {\n        const nameExt = v['android:name'];\n        if (v.tag) {\n            const childNode = _findChildNode(v.tag, nameExt, node);\n            if (childNode) {\n                console.log('_mergeNodeChildren: FOUND EXISTING NODE TO MERGE', nameExt, v.tag);\n                _mergeNodeParameters(childNode, v);\n                _mergeNodeChildren(childNode, v.children);\n            } else {\n                console.log('_mergeNodeChildren: NO android:name found. adding to children', nameExt, v.tag);\n                node.children.push(v);\n            }\n        }\n    });\n};\n\nexport const parseAndroidManifestSync = (c, platform) => {\n    logTask(`parseAndroidManifestSync:${platform}`);\n    const pluginConfig = {};\n    try {\n        const baseManifestFilePath = path.join(c.paths.rnv.dir, `src/platformTools/android/supportFiles/AndroidManifest_${platform}.json`);\n        const baseManifestFile = readObjectSync(baseManifestFilePath);\n        const appFolder = getAppFolder(c, platform);\n        const application = _findChildNode('application', '.MainApplication', baseManifestFile);\n\n        baseManifestFile.package = getAppId(c, platform);\n\n        // appConfigs/base/plugins.json PLUGIN CONFIG ROOT OVERRIDES\n        const pluginConfigAndroid = getFlavouredProp(c, c.buildConfig?.platforms?.[platform], 'AndroidManifest');\n\n        if (pluginConfigAndroid) {\n            const applicationExt = _findChildNode('application', '.MainApplication', pluginConfigAndroid);\n            _mergeNodeParameters(application, applicationExt);\n            if (applicationExt.children) {\n                _mergeNodeChildren(application, applicationExt.children);\n            }\n        }\n\n        // appConfigs/base/plugins.json PLUGIN CONFIG OVERRIDES\n        parsePlugins(c, platform, (plugin, pluginPlat, key) => {\n            const androidManifest = getFlavouredProp(c, pluginPlat, 'AndroidManifest');\n            if (androidManifest) {\n                _mergeNodeChildren(baseManifestFile, androidManifest.children);\n                // const pluginApplication = _findChildNode('application', '.MainApplication', pluginPlat.AndroidManifest);\n                // if (pluginApplication) {\n                //     _mergeNodeParameters(application, pluginApplication);\n                //\n                //     _mergeNodeChildren(application, pluginApplication.children);\n                // }\n            }\n        });\n\n        // appConfig PERMISSIONS OVERRIDES\n        let prms = '';\n        const configPermissions = c.buildConfig?.permissions;\n\n        const includedPermissions = getConfigProp(c, platform, 'includedPermissions') || getConfigProp(c, platform, 'permissions');\n        const excludedPermissions = getConfigProp(c, platform, 'excludedPermissions');\n        if (includedPermissions && configPermissions) {\n            const platPerm = configPermissions[platform] ? platform : 'android';\n            const pc = configPermissions[platPerm];\n            if (includedPermissions[0] === '*') {\n                for (const k in pc) {\n                    if (!(excludedPermissions && excludedPermissions.includes(k))) {\n                        prms += `\\n   <uses-permission android:name=\"${pc[k].key}\" />`;\n                        const key = pc[k].key || k;\n                        baseManifestFile.children.push({\n                            tag: 'uses-permission',\n                            'android:name': key\n                        });\n                    }\n                }\n            } else {\n                includedPermissions.forEach((v) => {\n                    if (pc[v]) {\n                        prms += `\\n   <uses-permission android:name=\"${pc[v].key}\" />`;\n                        const key = pc[v].key || k;\n                        baseManifestFile.children.push({\n                            tag: 'uses-permission',\n                            'android:name': key\n                        });\n                    }\n                });\n            }\n        }\n\n        // appConfig FEATURES OVERRIDES\n        const includedFeatures = getConfigProp(c, platform, 'includedFeatures');\n        if (includedFeatures) {\n            includedFeatures.forEach((key) => {\n                baseManifestFile.children.push({\n                    tag: 'uses-feature',\n                    'android:name': key,\n                    'android:required': true\n                });\n            });\n        }\n\n        const excludedFeatures = getConfigProp(c, platform, 'excludedFeatures');\n        if (excludedFeatures) {\n            excludedFeatures.forEach((key) => {\n                baseManifestFile.children.push({\n                    tag: 'uses-feature',\n                    'android:name': key,\n                    'android:required': false\n                });\n            });\n        }\n\n        const manifestXml = _convertToXML(baseManifestFile);\n        // get correct source of manifest\n        const manifestFile = 'app/src/main/AndroidManifest.xml';\n\n        writeCleanFile(getBuildFilePath(c, platform, manifestFile), path.join(appFolder, manifestFile), [\n            { pattern: '{{PLUGIN_MANIFEST_FILE}}', override: manifestXml },\n            { pattern: '{{PERMISIONS}}', override: prms },\n            { pattern: '{{APPLICATION_ID}}', override: baseManifestFile.package }\n        ]);\n\n        return;\n    } catch (e) {\n        logError(e);\n    }\n};\n\nexport const injectPluginManifestSync = (c, plugin, key, pkg) => {\n    const className = pkg ? pkg.split('.').pop() : null;\n    let packageParams = '';\n    if (plugin.packageParams) {\n        packageParams = plugin.packageParams.join(',');\n    }\n\n    const pathFixed = plugin.path ? `${plugin.path}` : `node_modules/${key}/android`;\n    const modulePath = `../../${pathFixed}`;\n};\n"],"mappings":"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"}