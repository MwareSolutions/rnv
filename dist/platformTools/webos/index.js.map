{"version":3,"file":"index.js","names":["launchWebOSimulator","c","logTask","ePath","path","join","getRealPath","files","workspace","config","sdks","WEBOS_SDK","isSystemWin","fs","existsSync","Promise","reject","executeAsync","detached","stdio","openCommand","startHostedServerIfRequired","Config","isWebHostEnabled","rnvStart","parseDevices","devicesResponse","linesArray","split","slice","map","line","trim","filter","all","word","name","device","connection","profile","deviceInfo","execCLI","CLI_WEBOS_ARES_DEVICE_INFO","silent","timeout","isDevice","includes","runtime","localhost","active","installAndLaunchApp","target","appPath","tId","CLI_WEBOS_ARES_INSTALL","hosted","program","platform","isHosted","getConfigProp","toReturn","waitForWebpack","CLI_WEBOS_ARES_LAUNCH","buildDeviceChoices","devices","key","value","listWebOSTargets","deviceArray","i","chalk","bold","logToSummary","waitForEmulatorToBeReady","emulator","d","Error","waitForEmulator","res","runWebOS","tDir","getAppFolder","tOut","tSim","configFilePath","grey","cnfg","JSON","parse","readFileSync","id","version","checkPortInUse","port","isPortActive","confirmActiveBundler","skipActiveServerCheck","buildWeb","CLI_WEBOS_ARES_PACKAGE","activeDevices","actualDevices","length","inquirer","prompt","type","message","default","response","setupDevice","logInfo","CLI_WEBOS_ARES_SETUP_DEVICE","interactive","newDeviceResponse","dev","actualDev","newDevice","CLI_WEBOS_ARES_NOVACOM","tv","choices","chosenDevice","buildWebOSProject","resolve","then","logSuccess","white","catch","configureWebOSProject","isPlatformActive","copyAssetsFolder","configureCoreWebProject","configureProject","copyBuildsFolder","appFolder","configFile","writeCleanFile","getAppTemplateFolder","pattern","override","getAppId","toLowerCase","getAppTitle","semver","coerce","getAppVersion"],"sources":["../../../src/platformTools/webos/index.js"],"sourcesContent":["/* eslint-disable import/no-cycle */\nimport path from 'path';\nimport fs from 'fs';\nimport chalk from 'chalk';\nimport semver from 'semver';\nimport inquirer from 'inquirer';\nimport { executeAsync, execCLI, openCommand } from '../../systemTools/exec';\nimport {\n    getAppFolder,\n    getAppVersion,\n    getAppTitle,\n    writeCleanFile,\n    getAppId,\n    getAppTemplateFolder,\n    getConfigProp,\n    waitForEmulator,\n    waitForWebpack,\n    checkPortInUse,\n    confirmActiveBundler\n} from '../../common';\nimport { isPlatformActive } from '..';\nimport { logToSummary, logTask, logInfo, logSuccess } from '../../systemTools/logger';\nimport { copyBuildsFolder, copyAssetsFolder } from '../../projectTools/projectParser';\nimport {\n    CLI_WEBOS_ARES_PACKAGE,\n    CLI_WEBOS_ARES_INSTALL,\n    CLI_WEBOS_ARES_DEVICE_INFO,\n    CLI_WEBOS_ARES_LAUNCH,\n    CLI_WEBOS_ARES_NOVACOM,\n    CLI_WEBOS_ARES_SETUP_DEVICE\n} from '../../constants';\nimport { getRealPath } from '../../systemTools/fileutils';\nimport { buildWeb, configureCoreWebProject } from '../web';\nimport { rnvStart } from '../runner';\nimport Config from '../../config';\nimport { isSystemWin } from '../../utils';\n\nconst launchWebOSimulator = (c) => {\n    logTask('launchWebOSimulator');\n\n    const ePath = path.join(getRealPath(c, c.files.workspace.config.sdks.WEBOS_SDK), `Emulator/v4.0.0/LG_webOS_TV_Emulator${isSystemWin ? '.exe' : '_RCU.app'}`);\n\n    if (!fs.existsSync(ePath)) {\n        return Promise.reject(`Can't find emulator at path: ${ePath}`);\n    }\n    if (isSystemWin) return executeAsync(c, ePath, { detached: true, stdio: 'ignore' });\n    return executeAsync(c, `${openCommand} ${ePath}`, { detached: true });\n};\n\nconst startHostedServerIfRequired = (c) => {\n    if (Config.isWebHostEnabled) {\n        return rnvStart(c);\n    }\n};\n\nconst parseDevices = (c, devicesResponse) => {\n    const linesArray = devicesResponse.split('\\n').slice(2).map(line => line.trim()).filter(line => line !== '');\n    return Promise.all(linesArray.map(async (line) => {\n        const [name, device, connection, profile] = line.split(' ').map(word => word.trim()).filter(word => word !== '');\n        let deviceInfo = '';\n        try {\n            deviceInfo = await execCLI(c, CLI_WEBOS_ARES_DEVICE_INFO, `-d ${name}`, { silent: true, timeout: 10000 });\n        } catch (e) {\n            deviceInfo = e;\n        }\n\n        return {\n            name,\n            device,\n            connection,\n            profile,\n            isDevice: !device.includes(c.runtime.localhost),\n            active: !deviceInfo.includes('ERR!')\n        };\n    }));\n};\n\nconst installAndLaunchApp = async (c, target, appPath, tId) => {\n    try {\n        await execCLI(c, CLI_WEBOS_ARES_INSTALL, `--device ${target} ${appPath}`);\n    } catch (e) {\n        // installing it again if it fails. For some reason webosCLI says that it can't connect to\n        // the device from time to time. Running it again works.\n        await execCLI(c, CLI_WEBOS_ARES_INSTALL, `--device ${target} ${appPath}`);\n    }\n    const { hosted } = c.program;\n    const { platform } = c;\n    const isHosted = hosted || !getConfigProp(c, platform, 'bundleAssets');\n    let toReturn = true;\n    if (isHosted) {\n        toReturn = startHostedServerIfRequired(c);\n        await waitForWebpack(c);\n    }\n    await execCLI(c, CLI_WEBOS_ARES_LAUNCH, `--device ${target} ${tId}`);\n    return toReturn;\n};\n\nconst buildDeviceChoices = devices => devices.map(device => ({\n    key: device.name, name: `${device.name} - ${device.device}`, value: device.name\n}));\n\nconst listWebOSTargets = async (c) => {\n    const devicesResponse = await execCLI(c, CLI_WEBOS_ARES_DEVICE_INFO, '-D');\n    const devices = await parseDevices(c, devicesResponse);\n\n    const deviceArray = devices.map((device, i) => ` [${i + 1}]> ${chalk.bold(device.name)} | ${device.device}`);\n\n    logToSummary(`WebOS Targets:\\n${deviceArray.join('\\n')}`);\n\n    return true;\n};\n\nconst waitForEmulatorToBeReady = async (c) => {\n    const devicesResponse = await execCLI(c, CLI_WEBOS_ARES_DEVICE_INFO, '-D');\n    const devices = await parseDevices(c, devicesResponse);\n    const emulator = devices.filter(d => !d.isDevice)[0];\n    if (!emulator) throw new Error('No WebOS emulator configured');\n\n    return waitForEmulator(c, CLI_WEBOS_ARES_DEVICE_INFO, `-d ${emulator.name}`, res => res.includes('modelName'));\n};\n\nconst runWebOS = async (c, platform, target) => {\n    logTask(`runWebOS:${platform}:${target}`);\n\n    const { device, hosted } = c.program;\n\n    const isHosted = hosted || !getConfigProp(c, platform, 'bundleAssets');\n\n    const tDir = path.join(getAppFolder(c, platform), 'public');\n    const tOut = path.join(getAppFolder(c, platform), 'output');\n    const tSim = c.program.target || 'emulator';\n    const configFilePath = path.join(getAppFolder(c, platform), 'public/appinfo.json');\n\n    logTask(`runWebOS:${platform}:${target}:${isHosted}`, chalk.grey);\n\n    const cnfg = JSON.parse(fs.readFileSync(configFilePath, 'utf-8'));\n    const tId = cnfg.id;\n    const appPath = path.join(tOut, `${tId}_${cnfg.version}_all.ipk`);\n\n    if (isHosted) {\n        const isPortActive = await checkPortInUse(c, platform, c.runtime.port);\n        if (isPortActive) {\n            await confirmActiveBundler(c);\n            c.runtime.skipActiveServerCheck = true;\n        }\n    }\n\n    // Start the fun\n    !isHosted && await buildWeb(c, platform);\n    await execCLI(c, CLI_WEBOS_ARES_PACKAGE, `-o ${tOut} ${tDir} -n`);\n\n    // List all devices\n    const devicesResponse = await execCLI(c, CLI_WEBOS_ARES_DEVICE_INFO, '-D');\n    const devices = await parseDevices(c, devicesResponse);\n    const activeDevices = devices.filter(d => d.active);\n\n    if (device) {\n        // Running on a device\n        const actualDevices = devices.filter(d => d.isDevice);\n\n        if (!actualDevices.length) {\n            // No device configured. Asking to configure\n            const response = await inquirer.prompt([{\n                type: 'confirm',\n                name: 'setupDevice',\n                message: 'Looks like you want to deploy on a device but have none configured. Do you want to configure one?',\n                default: false\n            }]);\n\n            if (response.setupDevice) {\n                // Yes, I would like that\n                logInfo('Please follow the instructions from http://webostv.developer.lge.com/develop/app-test/#installDevModeApp on how to setup the TV and the connection with the PC. Then follow the onscreen prompts\\n');\n                await execCLI(c, CLI_WEBOS_ARES_SETUP_DEVICE, '', { interactive: true });\n\n                const newDeviceResponse = await execCLI(c, CLI_WEBOS_ARES_DEVICE_INFO, '-D');\n                const dev = await parseDevices(c, newDeviceResponse);\n                const actualDev = dev.filter(d => d.isDevice);\n\n                if (actualDev.length > 0) {\n                    const newDevice = actualDev[0];\n                    // Oh boy, oh boy, I did it! I have a TV connected!\n                    logInfo('Please enter the `Passphrase` from the TV\\'s Developer Mode app');\n                    await execCLI(c, CLI_WEBOS_ARES_NOVACOM, `--device ${newDevice.name} --getkey`, { stdio: 'inherit' });\n                    return installAndLaunchApp(c, newDevice.name, appPath, tId);\n                }\n                // Yes, I said I would but I didn't\n                // @todo handle user not setting up the device\n            }\n        } else if (actualDevices.length === 1) {\n            const tv = actualDevices[0];\n            return installAndLaunchApp(c, tv.name, appPath, tId);\n        }\n    } else if (!c.program.target) {\n        // No target specified\n        if (activeDevices.length === 1) {\n            // One device present\n            return installAndLaunchApp(c, devices[0].name, appPath, tId);\n        }\n        if (activeDevices.length > 1) {\n            // More than one, choosing\n            const choices = buildDeviceChoices(devices);\n            const response = await inquirer.prompt([{\n                name: 'chosenDevice',\n                type: 'list',\n                message: 'What device would you like to start the app?',\n                choices\n            }]);\n            if (response.chosenDevice) {\n                return installAndLaunchApp(c, response.chosenDevice, appPath, tId);\n            }\n        } else {\n            await launchWebOSimulator(c);\n            await waitForEmulatorToBeReady(c);\n            return installAndLaunchApp(c, tSim, appPath, tId);\n        }\n    } else {\n        // Target specified, using that\n        return installAndLaunchApp(c, c.program.target, appPath, tId);\n    }\n};\n\n\nconst buildWebOSProject = (c, platform) => new Promise((resolve, reject) => {\n    logTask(`buildWebOSProject:${platform}`);\n\n    const tDir = path.join(getAppFolder(c, platform), 'public');\n    const tOut = path.join(getAppFolder(c, platform), 'output');\n\n    buildWeb(c, platform)\n        .then(() => execCLI(c, CLI_WEBOS_ARES_PACKAGE, `-o ${tOut} ${tDir} -n`))\n        .then(() => {\n            logSuccess(`Your IPK package is located in ${chalk.white(tOut)} .`);\n            return resolve();\n        })\n        .catch(reject);\n});\n\nconst configureWebOSProject = async (c, platform) => {\n    logTask('configureWebOSProject');\n\n    if (!isPlatformActive(c, platform)) return;\n\n    await copyAssetsFolder(c, platform);\n    await configureCoreWebProject(c, platform);\n    await configureProject(c, platform);\n    return copyBuildsFolder(c, platform);\n};\n\nconst configureProject = (c, platform) => new Promise((resolve, reject) => {\n    logTask(`configureProject:${platform}`);\n\n    const appFolder = getAppFolder(c, platform);\n\n    const configFile = 'public/appinfo.json';\n    writeCleanFile(path.join(getAppTemplateFolder(c, platform), configFile), path.join(appFolder, configFile), [\n        { pattern: '{{APPLICATION_ID}}', override: getAppId(c, platform).toLowerCase() },\n        { pattern: '{{APP_TITLE}}', override: getAppTitle(c, platform) },\n        { pattern: '{{APP_VERSION}}', override: semver.coerce(getAppVersion(c, platform)) },\n    ]);\n\n    resolve();\n});\n\nexport { launchWebOSimulator, configureWebOSProject, runWebOS, buildWebOSProject, listWebOSTargets };\n"],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAaA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;;AAEA,GAAMA,oBAAmB,CAAG,QAAtBA,oBAAmB,CAAIC,CAAC,CAAK;AAC/B,GAAAC,eAAO,EAAC,qBAAqB,CAAC;;AAE9B,GAAMC,MAAK,CAAGC,aAAI,CAACC,IAAI,CAAC,GAAAC,sBAAW,EAACL,CAAC,CAAEA,CAAC,CAACM,KAAK,CAACC,SAAS,CAACC,MAAM,CAACC,IAAI,CAACC,SAAS,CAAC,yCAAyCC,kBAAW,CAAG,MAAM,CAAG,UAAU,EAAG;;AAE5J,GAAI,CAACC,WAAE,CAACC,UAAU,CAACX,KAAK,CAAC,CAAE;AACvB,MAAOY,QAAO,CAACC,MAAM,iCAAiCb,KAAK,CAAG;AAClE;AACA,GAAIS,kBAAW,CAAE,MAAO,GAAAK,kBAAY,EAAChB,CAAC,CAAEE,KAAK,CAAE,CAAEe,QAAQ,CAAE,IAAI,CAAEC,KAAK,CAAE,QAAS,CAAC,CAAC;AACnF,MAAO,GAAAF,kBAAY,EAAChB,CAAC,CAAKmB,iBAAW,KAAIjB,KAAK,CAAI,CAAEe,QAAQ,CAAE,IAAK,CAAC,CAAC;AACzE,CAAC,CAAC;;AAEF,GAAMG,4BAA2B,CAAG,QAA9BA,4BAA2B,CAAIpB,CAAC,CAAK;AACvC,GAAIqB,eAAM,CAACC,gBAAgB,CAAE;AACzB,MAAO,GAAAC,gBAAQ,EAACvB,CAAC,CAAC;AACtB;AACJ,CAAC;;AAED,GAAMwB,aAAY,CAAG,QAAfA,aAAY,CAAIxB,CAAC,CAAEyB,eAAe,CAAK;AACzC,GAAMC,WAAU,CAAGD,eAAe,CAACE,KAAK,CAAC,IAAI,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAACC,IAAI,EAAE,GAAC,CAACC,MAAM,CAAC,SAAAF,IAAI,QAAIA,KAAI,GAAK,EAAE,GAAC;AAC5G,MAAOhB,QAAO,CAACmB,GAAG,CAACP,UAAU,CAACG,GAAG,CAAC,iBAAOC,IAAI;AACGA,IAAI,CAACH,KAAK,CAAC,GAAG,CAAC,CAACE,GAAG,CAAC,SAAAK,IAAI,QAAIA,KAAI,CAACH,IAAI,EAAE,GAAC,CAACC,MAAM,CAAC,SAAAE,IAAI,QAAIA,KAAI,GAAK,EAAE,GAAC,6EAAzGC,IAAI,2BAAEC,MAAM,2BAAEC,UAAU,2BAAEC,OAAO;AACpCC,UAAU,CAAG,EAAE;;AAEI,GAAAC,aAAO,EAACxC,CAAC,CAAEyC,qCAA0B,OAAQN,IAAI,CAAI,CAAEO,MAAM,CAAE,IAAI,CAAEC,OAAO,CAAE,KAAM,CAAC,CAAC,SAAzGJ,UAAU;;AAEVA,UAAU,YAAI,CAAC;;;AAGZ;AACHJ,IAAI,CAAJA,IAAI;AACJC,MAAM,CAANA,MAAM;AACNC,UAAU,CAAVA,UAAU;AACVC,OAAO,CAAPA,OAAO;AACPM,QAAQ,CAAE,CAACR,MAAM,CAACS,QAAQ,CAAC7C,CAAC,CAAC8C,OAAO,CAACC,SAAS,CAAC;AAC/CC,MAAM,CAAE,CAACT,UAAU,CAACM,QAAQ,CAAC,MAAM;AACvC,CAAC,0EACJ,CAAC,CAAC;;AACP,CAAC;;AAED,GAAMI,oBAAmB,CAAG,QAAtBA,oBAAmB,CAAUjD,CAAC,CAAEkD,MAAM,CAAEC,OAAO,CAAEC,GAAG;;AAE5C,GAAAZ,aAAO,EAACxC,CAAC,CAAEqD,iCAAsB,aAAcH,MAAM,KAAIC,OAAO,CAAG;;;;AAInE,GAAAX,aAAO,EAACxC,CAAC,CAAEqD,iCAAsB,aAAcH,MAAM,KAAIC,OAAO,CAAG;;AAErEG,MAAM,CAAKtD,CAAC,CAACuD,OAAO,CAApBD,MAAM;AACNE,QAAQ,CAAKxD,CAAC,CAAdwD,QAAQ;AACVC,QAAQ,CAAGH,MAAM,EAAI,CAAC,GAAAI,qBAAa,EAAC1D,CAAC,CAAEwD,QAAQ,CAAE,cAAc,CAAC;AAClEG,QAAQ,CAAG,IAAI;AACfF,QAAQ;AACRE,QAAQ,CAAGvC,2BAA2B,CAACpB,CAAC,CAAC,CAAC;AACpC,GAAA4D,sBAAc,EAAC5D,CAAC,CAAC;;AAErB,GAAAwC,aAAO,EAACxC,CAAC,CAAE6D,gCAAqB,aAAcX,MAAM,KAAIE,GAAG,CAAG;AAC7DO,QAAQ,2EAClB;;;AAED,GAAMG,mBAAkB,CAAG,QAArBA,mBAAkB,CAAGC,OAAO,QAAIA,QAAO,CAAClC,GAAG,CAAC,SAAAO,MAAM,QAAK;AACzD4B,GAAG,CAAE5B,MAAM,CAACD,IAAI,CAAEA,IAAI,CAAKC,MAAM,CAACD,IAAI,OAAMC,MAAM,CAACA,MAAQ,CAAE6B,KAAK,CAAE7B,MAAM,CAACD;AAC/E,CAAC,EAAC,CAAC;;AAEH,GAAM+B,iBAAgB,CAAG,QAAnBA,iBAAgB,CAAUlE,CAAC;AACC,GAAAwC,aAAO,EAACxC,CAAC,CAAEyC,qCAA0B,CAAE,IAAI,CAAC,SAApEhB,eAAe;AACCD,YAAY,CAACxB,CAAC,CAAEyB,eAAe,CAAC,SAAhDsC,OAAO;;AAEPI,WAAW,CAAGJ,OAAO,CAAClC,GAAG,CAAC,SAACO,MAAM,CAAEgC,CAAC,cAAUA,CAAC,CAAG,CAAC,QAAMC,cAAK,CAACC,IAAI,CAAClC,MAAM,CAACD,IAAI,CAAC,OAAMC,MAAM,CAACA,MAAM,EAAE,CAAC;;AAE5G,GAAAmC,oBAAY,qBAAoBJ,WAAW,CAAC/D,IAAI,CAAC,IAAI,CAAC,CAAG,CAAC;;AAEnD,IAAI,uEACd,CAAC;;;AAEF,GAAMoE,yBAAwB,CAAG,QAA3BA,yBAAwB,CAAUxE,CAAC;AACP,GAAAwC,aAAO,EAACxC,CAAC,CAAEyC,qCAA0B,CAAE,IAAI,CAAC,SAApEhB,eAAe;AACCD,YAAY,CAACxB,CAAC,CAAEyB,eAAe,CAAC,SAAhDsC,OAAO;AACPU,QAAQ,CAAGV,OAAO,CAAC/B,MAAM,CAAC,SAAA0C,CAAC,QAAI,CAACA,CAAC,CAAC9B,QAAQ,GAAC,CAAC,CAAC,CAAC;AAC/C6B,QAAQ,+BAAQ,IAAIE,MAAK,CAAC,8BAA8B,CAAC;;AAEvD,GAAAC,uBAAe,EAAC5E,CAAC,CAAEyC,qCAA0B,OAAQgC,QAAQ,CAACtC,IAAI,CAAI,SAAA0C,GAAG,QAAIA,IAAG,CAAChC,QAAQ,CAAC,WAAW,CAAC,GAAC,wEACjH;;;AAED,GAAMiC,SAAQ,CAAG,QAAXA,SAAQ,CAAU9E,CAAC,CAAEwD,QAAQ,CAAEN,MAAM;AACvC,GAAAjD,eAAO,cAAauD,QAAQ,KAAIN,MAAM,CAAG,CAAC;;AAEflD,CAAC,CAACuD,OAAO,CAA5BnB,MAAM,YAANA,MAAM,CAAEkB,MAAM,YAANA,MAAM;;AAEhBG,QAAQ,CAAGH,MAAM,EAAI,CAAC,GAAAI,qBAAa,EAAC1D,CAAC,CAAEwD,QAAQ,CAAE,cAAc,CAAC;;AAEhEuB,IAAI,CAAG5E,aAAI,CAACC,IAAI,CAAC,GAAA4E,oBAAY,EAAChF,CAAC,CAAEwD,QAAQ,CAAC,CAAE,QAAQ,CAAC;AACrDyB,IAAI,CAAG9E,aAAI,CAACC,IAAI,CAAC,GAAA4E,oBAAY,EAAChF,CAAC,CAAEwD,QAAQ,CAAC,CAAE,QAAQ,CAAC;AACrD0B,IAAI,CAAGlF,CAAC,CAACuD,OAAO,CAACL,MAAM,EAAI,UAAU;AACrCiC,cAAc,CAAGhF,aAAI,CAACC,IAAI,CAAC,GAAA4E,oBAAY,EAAChF,CAAC,CAAEwD,QAAQ,CAAC,CAAE,qBAAqB,CAAC;;AAElF,GAAAvD,eAAO,cAAauD,QAAQ,KAAIN,MAAM,KAAIO,QAAQ,CAAIY,cAAK,CAACe,IAAI,CAAC;;AAE3DC,IAAI,CAAGC,IAAI,CAACC,KAAK,CAAC3E,WAAE,CAAC4E,YAAY,CAACL,cAAc,CAAE,OAAO,CAAC,CAAC;AAC3D/B,GAAG,CAAGiC,IAAI,CAACI,EAAE;AACbtC,OAAO,CAAGhD,aAAI,CAACC,IAAI,CAAC6E,IAAI,CAAK7B,GAAG,KAAIiC,IAAI,CAACK,OAAO,YAAW;;AAE7DjC,QAAQ;AACmB,GAAAkC,sBAAc,EAAC3F,CAAC,CAAEwD,QAAQ,CAAExD,CAAC,CAAC8C,OAAO,CAAC8C,IAAI,CAAC,UAAhEC,YAAY;AACdA,YAAY;AACN,GAAAC,4BAAoB,EAAC9F,CAAC,CAAC;AAC7BA,CAAC,CAAC8C,OAAO,CAACiD,qBAAqB,CAAG,IAAI,CAAC;;;;;AAK/C,CAACtC,QAAQ,gGAAU,GAAAuC,aAAQ,EAAChG,CAAC,CAAEwD,QAAQ,CAAC;AAClC,GAAAhB,aAAO,EAACxC,CAAC,CAAEiG,iCAAsB,OAAQhB,IAAI,KAAIF,IAAI,OAAM;;;AAGnC,GAAAvC,aAAO,EAACxC,CAAC,CAAEyC,qCAA0B,CAAE,IAAI,CAAC,UAApEhB,eAAe;AACCD,YAAY,CAACxB,CAAC,CAAEyB,eAAe,CAAC,UAAhDsC,OAAO;AACPmC,aAAa,CAAGnC,OAAO,CAAC/B,MAAM,CAAC,SAAA0C,CAAC,QAAIA,EAAC,CAAC1B,MAAM,GAAC;;AAE/CZ,MAAM;;AAEA+D,aAAa,CAAGpC,OAAO,CAAC/B,MAAM,CAAC,SAAA0C,CAAC,QAAIA,EAAC,CAAC9B,QAAQ,GAAC;;AAEhDuD,aAAa,CAACC,MAAM;;AAEEC,iBAAQ,CAACC,MAAM,CAAC,CAAC;AACpCC,IAAI,CAAE,SAAS;AACfpE,IAAI,CAAE,aAAa;AACnBqE,OAAO,CAAE,mGAAmG;AAC5GC,OAAO,CAAE;AACb,CAAC,CAAC,CAAC,UALGC,QAAQ;;AAOVA,QAAQ,CAACC,WAAW;;AAEpB,GAAAC,eAAO,EAAC,oMAAoM,CAAC,CAAC;AACxM,GAAApE,aAAO,EAACxC,CAAC,CAAE6G,sCAA2B,CAAE,EAAE,CAAE,CAAEC,WAAW,CAAE,IAAK,CAAC,CAAC;;AAExC,GAAAtE,aAAO,EAACxC,CAAC,CAAEyC,qCAA0B,CAAE,IAAI,CAAC,UAAtEsE,iBAAiB;AACLvF,YAAY,CAACxB,CAAC,CAAE+G,iBAAiB,CAAC,UAA9CC,GAAG;AACHC,SAAS,CAAGD,GAAG,CAAChF,MAAM,CAAC,SAAA0C,CAAC,QAAIA,EAAC,CAAC9B,QAAQ,GAAC;;AAEzCqE,SAAS,CAACb,MAAM,CAAG,CAAC;AACdc,SAAS,CAAGD,SAAS,CAAC,CAAC,CAAC;;AAE9B,GAAAL,eAAO,EAAC,iEAAiE,CAAC,CAAC;AACrE,GAAApE,aAAO,EAACxC,CAAC,CAAEmH,iCAAsB,aAAcD,SAAS,CAAC/E,IAAI,aAAa,CAAEjB,KAAK,CAAE,SAAU,CAAC,CAAC;AAC9F+B,mBAAmB,CAACjD,CAAC,CAAEkH,SAAS,CAAC/E,IAAI,CAAEgB,OAAO,CAAEC,GAAG,CAAC;;;;;AAK5D+C,aAAa,CAACC,MAAM,GAAK,CAAC;AAC3BgB,EAAE,CAAGjB,aAAa,CAAC,CAAC,CAAC;AACpBlD,mBAAmB,CAACjD,CAAC,CAAEoH,EAAE,CAACjF,IAAI,CAAEgB,OAAO,CAAEC,GAAG,CAAC;;AAEhDpD,CAAC,CAACuD,OAAO,CAACL,MAAM;;AAEpBgD,aAAa,CAACE,MAAM,GAAK,CAAC;;AAEnBnD,mBAAmB,CAACjD,CAAC,CAAE+D,OAAO,CAAC,CAAC,CAAC,CAAC5B,IAAI,CAAEgB,OAAO,CAAEC,GAAG,CAAC;;AAE5D8C,aAAa,CAACE,MAAM,CAAG,CAAC;;AAElBiB,OAAO,CAAGvD,kBAAkB,CAACC,OAAO,CAAC;AACpBsC,iBAAQ,CAACC,MAAM,CAAC,CAAC;AACpCnE,IAAI,CAAE,cAAc;AACpBoE,IAAI,CAAE,MAAM;AACZC,OAAO,CAAE,8CAA8C;AACvDa,OAAO,CAAPA;AACJ,CAAC,CAAC,CAAC,UALGX,SAAQ;AAMVA,SAAQ,CAACY,YAAY;AACdrE,mBAAmB,CAACjD,CAAC,CAAE0G,SAAQ,CAACY,YAAY,CAAEnE,OAAO,CAAEC,GAAG,CAAC;;;AAGhErD,mBAAmB,CAACC,CAAC,CAAC;AACtBwE,wBAAwB,CAACxE,CAAC,CAAC;AAC1BiD,mBAAmB,CAACjD,CAAC,CAAEkF,IAAI,CAAE/B,OAAO,CAAEC,GAAG,CAAC;;;;AAI9CH,mBAAmB,CAACjD,CAAC,CAAEA,CAAC,CAACuD,OAAO,CAACL,MAAM,CAAEC,OAAO,CAAEC,GAAG,CAAC,wEAEpE,CAAC;;;;;AAGF,GAAMmE,kBAAiB,CAAG,QAApBA,kBAAiB,CAAIvH,CAAC,CAAEwD,QAAQ,QAAK,IAAI1C,QAAO,CAAC,SAAC0G,OAAO,CAAEzG,MAAM,CAAK;AACxE,GAAAd,eAAO,uBAAsBuD,QAAQ,CAAG;;AAExC,GAAMuB,KAAI,CAAG5E,aAAI,CAACC,IAAI,CAAC,GAAA4E,oBAAY,EAAChF,CAAC,CAAEwD,QAAQ,CAAC,CAAE,QAAQ,CAAC;AAC3D,GAAMyB,KAAI,CAAG9E,aAAI,CAACC,IAAI,CAAC,GAAA4E,oBAAY,EAAChF,CAAC,CAAEwD,QAAQ,CAAC,CAAE,QAAQ,CAAC;;AAE3D,GAAAwC,aAAQ,EAAChG,CAAC,CAAEwD,QAAQ,CAAC;AAChBiE,IAAI,CAAC,iBAAM,GAAAjF,aAAO,EAACxC,CAAC,CAAEiG,iCAAsB,OAAQhB,IAAI,KAAIF,IAAI,OAAM,GAAC;AACvE0C,IAAI,CAAC,UAAM;AACR,GAAAC,kBAAU,oCAAmCrD,cAAK,CAACsD,KAAK,CAAC1C,IAAI,CAAC,MAAK;AACnE,MAAOuC,QAAO,EAAE;AACpB,CAAC,CAAC;AACDI,KAAK,CAAC7G,MAAM,CAAC;AACtB,CAAC,CAAC,GAAC;;AAEH,GAAM8G,sBAAqB,CAAG,QAAxBA,sBAAqB,CAAU7H,CAAC,CAAEwD,QAAQ;AAC5C,GAAAvD,eAAO,EAAC,uBAAuB,CAAC,CAAC;;AAE5B,GAAA6H,kBAAgB,EAAC9H,CAAC,CAAEwD,QAAQ,CAAC;;AAE5B,GAAAuE,+BAAgB,EAAC/H,CAAC,CAAEwD,QAAQ,CAAC;AAC7B,GAAAwE,4BAAuB,EAAChI,CAAC,CAAEwD,QAAQ,CAAC;AACpCyE,gBAAgB,CAACjI,CAAC,CAAEwD,QAAQ,CAAC;AAC5B,GAAA0E,+BAAgB,EAAClI,CAAC,CAAEwD,QAAQ,CAAC,wEACvC,CAAC;;;AAEF,GAAMyE,iBAAgB,CAAG,QAAnBA,iBAAgB,CAAIjI,CAAC,CAAEwD,QAAQ,QAAK,IAAI1C,QAAO,CAAC,SAAC0G,OAAO,CAAEzG,MAAM,CAAK;AACvE,GAAAd,eAAO,sBAAqBuD,QAAQ,CAAG;;AAEvC,GAAM2E,UAAS,CAAG,GAAAnD,oBAAY,EAAChF,CAAC,CAAEwD,QAAQ,CAAC;;AAE3C,GAAM4E,WAAU,CAAG,qBAAqB;AACxC,GAAAC,sBAAc,EAAClI,aAAI,CAACC,IAAI,CAAC,GAAAkI,4BAAoB,EAACtI,CAAC,CAAEwD,QAAQ,CAAC,CAAE4E,UAAU,CAAC,CAAEjI,aAAI,CAACC,IAAI,CAAC+H,SAAS,CAAEC,UAAU,CAAC,CAAE;AACvG,CAAEG,OAAO,CAAE,oBAAoB,CAAEC,QAAQ,CAAE,GAAAC,gBAAQ,EAACzI,CAAC,CAAEwD,QAAQ,CAAC,CAACkF,WAAW,EAAG,CAAC;AAChF,CAAEH,OAAO,CAAE,eAAe,CAAEC,QAAQ,CAAE,GAAAG,mBAAW,EAAC3I,CAAC,CAAEwD,QAAQ,CAAE,CAAC;AAChE,CAAE+E,OAAO,CAAE,iBAAiB,CAAEC,QAAQ,CAAEI,eAAM,CAACC,MAAM,CAAC,GAAAC,qBAAa,EAAC9I,CAAC,CAAEwD,QAAQ,CAAC,CAAE,CAAC,CACtF,CAAC;;;AAEFgE,OAAO,EAAE;AACb,CAAC,CAAC"}