{"version":3,"sources":["../../src/platformTools/sdkManager.js"],"names":["homedir","require","SDK_LOACTIONS","android","path","join","tizen","webos","_logSdkWarning","c","paths","workspace","config","checkAndConfigureAndroidSdks","platform","sdk","files","sdks","ANDROID_SDK","cli","CLI_ANDROID_EMULATOR","isSystemWin","CLI_ANDROID_ADB","CLI_ANDROID_AVDMANAGER","CLI_ANDROID_SDKMANAGER","checkAndConfigureTizenSdks","TIZEN_SDK","CLI_TIZEN_EMULATOR","CLI_TIZEN","CLI_SDB_TIZEN","checkAndConfigureWebosSdks","WEBOS_SDK","CLI_WEBOS_ARES","CLI_WEBOS_ARES_PACKAGE","CLI_WEBOS_ARES_INSTALL","CLI_WEBOS_ARES_LAUNCH","CLI_WEBOS_ARES_SETUP_DEVICE","CLI_WEBOS_ARES_DEVICE_INFO","CLI_WEBOS_ARES_NOVACOM","checkAndConfigureSdks","ANDROID","ANDROID_TV","ANDROID_WEAR","TIZEN","TIZEN_MOBILE","TIZEN_WATCH","WEBOS","_getCurrentSdkPath","SDK_PLATFORMS","_isSdkInstalled","sdkPath","fs","existsSync","_attemptAutoFix","engine","result","find","v","chalk","white","inquirer","prompt","type","name","message","confirm","setupInstance","askToInstallSDK","checkSdk"],"mappings":"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","sourcesContent":["import path from 'path';\nimport fs from 'fs';\nimport chalk from 'chalk';\nimport inquirer from 'inquirer';\nimport {\n    CLI_ANDROID_EMULATOR,\n    CLI_ANDROID_AVDMANAGER,\n    CLI_ANDROID_SDKMANAGER,\n    CLI_ANDROID_ADB,\n    CLI_TIZEN_EMULATOR,\n    CLI_TIZEN,\n    CLI_SDB_TIZEN,\n    CLI_WEBOS_ARES,\n    CLI_WEBOS_ARES_PACKAGE,\n    CLI_WEBOS_ARES_INSTALL,\n    CLI_WEBOS_ARES_LAUNCH,\n    CLI_WEBOS_ARES_NOVACOM,\n    CLI_WEBOS_ARES_SETUP_DEVICE,\n    CLI_WEBOS_ARES_DEVICE_INFO,\n    ANDROID,\n    TIZEN,\n    WEBOS,\n    ANDROID_TV,\n    ANDROID_WEAR,\n    TIZEN_MOBILE,\n    TIZEN_WATCH,\n    SDK_PLATFORMS\n} from '../constants';\nimport { isSystemWin } from '../utils';\nimport {\n    getRealPath, writeFileSync\n} from '../systemTools/fileutils';\nimport {\n    logTask, logWarning, logSuccess, logError\n} from '../systemTools/logger';\nimport PlatformSetup from '../setupTools';\n\nconst homedir = require('os').homedir();\n\nconst SDK_LOACTIONS = {\n    android: [\n        path.join('usr/local/android-sdk'),\n        path.join(homedir, 'Library/Android/sdk'),\n        path.join(homedir, 'AppData/Local/Android/android-sdk'),\n        path.join(homedir, 'AppData/Local/Android/sdk'),\n        path.join('Program Files (x86)/Android/android-sdk')\n    ],\n    tizen: [\n        path.join('usr/local/tizen-studio'),\n        path.join(homedir, 'tizen-studio')\n    ],\n    webos: [\n        path.join('/opt/webOS_TV_SDK')\n    ]\n};\n\nconst _logSdkWarning = (c) => {\n    logWarning(`Your ${c.paths.workspace.config} is missing SDK configuration object`);\n};\n\nexport const checkAndConfigureAndroidSdks = async (c) => {\n    logTask(`checkAndConfigureAndroidSdks:${c.platform}`);\n    const sdk = c.files.workspace.config?.sdks?.ANDROID_SDK;\n    if (sdk) {\n        c.cli[CLI_ANDROID_EMULATOR] = getRealPath(c, path.join(sdk, `emulator/emulator${isSystemWin ? '.exe' : ''}`));\n        c.cli[CLI_ANDROID_ADB] = getRealPath(c, path.join(sdk, `platform-tools/adb${isSystemWin ? '.exe' : ''}`));\n        c.cli[CLI_ANDROID_AVDMANAGER] = getRealPath(c, path.join(sdk, `tools/bin/avdmanager${isSystemWin ? '.bat' : ''}`));\n        c.cli[CLI_ANDROID_SDKMANAGER] = getRealPath(c, path.join(sdk, `tools/bin/sdkmanager${isSystemWin ? '.bat' : ''}`));\n    } else {\n        _logSdkWarning(c);\n    }\n};\n\nexport const checkAndConfigureTizenSdks = async (c) => {\n    logTask(`checkAndConfigureTizenSdks:${c.platform}`);\n    const sdk = c.files.workspace.config?.sdks?.TIZEN_SDK;\n    if (sdk) {\n        c.cli[CLI_TIZEN_EMULATOR] = getRealPath(c, path.join(sdk, `tools/emulator/bin/em-cli${isSystemWin ? '.bat' : ''}`));\n        c.cli[CLI_TIZEN] = getRealPath(c, path.join(sdk, `tools/ide/bin/tizen${isSystemWin ? '.bat' : ''}`));\n        c.cli[CLI_SDB_TIZEN] = getRealPath(c, path.join(sdk, `tools/sdb${isSystemWin ? '.exe' : ''}`));\n    } else {\n        _logSdkWarning(c);\n    }\n};\n\nexport const checkAndConfigureWebosSdks = async (c) => {\n    logTask(`checkAndConfigureWebosSdks:${c.platform}`);\n    const sdk = c.files.workspace.config?.sdks?.WEBOS_SDK;\n    if (sdk) {\n        c.cli[CLI_WEBOS_ARES] = getRealPath(c, path.join(sdk, `CLI/bin/ares${isSystemWin ? '.cmd' : ''}`));\n        c.cli[CLI_WEBOS_ARES_PACKAGE] = getRealPath(c, path.join(sdk, `CLI/bin/ares-package${isSystemWin ? '.cmd' : ''}`));\n        c.cli[CLI_WEBOS_ARES_INSTALL] = getRealPath(c, path.join(sdk, `CLI/bin/ares-install${isSystemWin ? '.cmd' : ''}`));\n        c.cli[CLI_WEBOS_ARES_LAUNCH] = getRealPath(c, path.join(sdk, `CLI/bin/ares-launch${isSystemWin ? '.cmd' : ''}`));\n        c.cli[CLI_WEBOS_ARES_SETUP_DEVICE] = getRealPath(c, path.join(sdk, `CLI/bin/ares-setup-device${isSystemWin ? '.cmd' : ''}`));\n        c.cli[CLI_WEBOS_ARES_DEVICE_INFO] = getRealPath(c, path.join(sdk, `CLI/bin/ares-device-info${isSystemWin ? '.cmd' : ''}`));\n        c.cli[CLI_WEBOS_ARES_NOVACOM] = getRealPath(c, path.join(sdk, `CLI/bin/ares-novacom${isSystemWin ? '.cmd' : ''}`));\n    } else {\n        _logSdkWarning(c);\n    }\n};\n\nexport const checkAndConfigureSdks = async (c) => {\n    logTask(`checkAndConfigureSdks:${c.platform}`);\n\n    switch (c.platform) {\n        case ANDROID:\n        case ANDROID_TV:\n        case ANDROID_WEAR:\n            return checkAndConfigureAndroidSdks(c);\n        case TIZEN:\n        case TIZEN_MOBILE:\n        case TIZEN_WATCH:\n            return checkAndConfigureTizenSdks(c);\n        case WEBOS:\n            return checkAndConfigureWebosSdks(c);\n        default:\n            return true;\n    }\n};\n\nconst _getCurrentSdkPath = c => c.files.workspace?.config?.sdks?.[SDK_PLATFORMS[c.platform]];\n\nconst _isSdkInstalled = (c) => {\n    logTask(`_isSdkInstalled: ${c.platform}`);\n\n    if (!SDK_PLATFORMS[c.platform]) return true;\n\n    const sdkPath = _getCurrentSdkPath(c, c.platform);\n\n    return fs.existsSync(getRealPath(c, sdkPath));\n};\n\nconst _attemptAutoFix = async (c, engine) => {\n    const result = SDK_LOACTIONS[engine].find(v => fs.existsSync(v));\n    if (result) {\n        logSuccess(`Found existing ${c.platform} SDK location at ${chalk.white(result)}`);\n        const { confirm } = await inquirer.prompt({\n            type: 'confirm',\n            name: 'confirm',\n            message: 'Do you want to use it?'\n        });\n\n        if (confirm) {\n            try {\n                c.files.workspace.config.sdks[SDK_PLATFORMS[c.platform]] = result;\n                writeFileSync(c.paths.workspace.config, c.files.workspace.config);\n                await checkAndConfigureSdks(c);\n            } catch (e) {\n                logError(e);\n            }\n\n            return true;\n        }\n    }\n\n    const setupInstance = PlatformSetup(c);\n    return setupInstance.askToInstallSDK(engine);\n};\n\n\nexport const checkSdk = async (c) => {\n    logTask('checkSdk');\n    if (!_isSdkInstalled(c)) {\n        logWarning(`${c.platform} requires SDK to be installed. Your SDK path in ${chalk.white(c.paths.workspace.config)} does not exist: ${chalk.white(_getCurrentSdkPath(c))}`);\n\n        switch (c.platform) {\n            case ANDROID:\n            case ANDROID_TV:\n            case ANDROID_WEAR:\n                return _attemptAutoFix(c, 'android');\n            case TIZEN:\n            case TIZEN_MOBILE:\n            case TIZEN_WATCH:\n                return _attemptAutoFix(c, 'tizen');\n            case WEBOS:\n                return _attemptAutoFix(c, 'webos');\n            default:\n                return true;\n        }\n    }\n    return true;\n};\n"],"file":"sdkManager.js"}