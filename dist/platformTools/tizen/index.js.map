{"version":3,"file":"index.js","names":["formatXMLObject","obj","platform","key","reduce","acc","cur","i","name","$t","configureTizenGlobal","c","Promise","resolve","reject","logTask","tizenAuthorCert","path","join","paths","workspace","dir","fs","existsSync","console","log","createDevelopTizenCertificate","then","catch","e","launchTizenSimulator","execCLI","CLI_TIZEN_EMULATOR","detached","listTizenTargets","targets","targetArr","split","targetStr","Object","keys","forEach","logToSummary","CLI_TIZEN","addDevelopTizenCertificate","logError","_getDeviceID","target","device","program","CLI_SDB_TIZEN","connectResponse","includes","Error","devicesList","lines","trim","devices","filter","line","length","deviceID","_getRunningDevices","all","map","words","replace","ignoreErrors","deviceInfoXML","deviceInfo","parser","toJson","object","reversible","deviceType","push","type","id","_waitForEmulatorToBeReady","waitForEmulator","res","_composeDevicesString","value","startHostedServerIfRequired","Config","isWebHostEnabled","rnvStart","runTizen","platformConfig","buildConfig","platforms","hosted","debug","isHosted","getConfigProp","chalk","grey","white","appConfig","config","appName","tDir","getAppFolder","tBuild","tOut","tId","gwt","certProfile","certificateProfile","checkPortInUse","runtime","port","isPortActive","confirmActiveBundler","skipActiveServerCheck","askForEmulator","inquirer","prompt","message","startEmulator","defaultTarget","files","defaultTargets","continueLaunching","logDebug","RENATIVE_CONFIG_NAME","hasDevice","buildWeb","packageID","logWarning","bold","toReturn","waitForWebpack","isTargetSpecified","net","isIP","targetDevice","find","choices","chosenEmulator","buildTizenProject","logSuccess","_isGlobalConfigured","configureTizenProject","isPlatformActive","copyAssetsFolder","configureCoreWebProject","configureProject","copyBuildsFolder","appFolder","configFile","p","writeCleanFile","getAppTemplateFolder","pattern","override","package"],"sources":["../../../src/platformTools/tizen/index.js"],"sourcesContent":["/* eslint-disable import/no-cycle */\nimport path from 'path';\nimport fs from 'fs';\nimport chalk from 'chalk';\nimport inquirer from 'inquirer';\nimport net from 'net';\nimport parser from 'xml2json';\n\nimport { execCLI } from '../../systemTools/exec';\nimport { RENATIVE_CONFIG_NAME, CLI_TIZEN_EMULATOR, CLI_TIZEN, CLI_SDB_TIZEN } from '../../constants';\nimport {\n    getAppFolder,\n    writeCleanFile,\n    getAppTemplateFolder,\n    getConfigProp,\n    waitForEmulator,\n    waitForWebpack,\n    checkPortInUse,\n    confirmActiveBundler\n} from '../../common';\nimport {\n    logTask,\n    logError,\n    logWarning,\n    logDebug,\n    logSuccess,\n    logToSummary\n} from '../../systemTools/logger';\nimport { isPlatformActive } from '..';\nimport { copyAssetsFolder, copyBuildsFolder } from '../../projectTools/projectParser';\nimport { buildWeb, configureCoreWebProject } from '../web';\nimport { rnvStart } from '../runner';\nimport Config from '../../config';\n\nconst formatXMLObject = obj => ({\n    ...obj['model-config'].platform.key.reduce((acc, cur, i) => {\n        acc[cur.name] = cur.$t;\n        return acc;\n    }, {})\n});\n\nexport const configureTizenGlobal = c => new Promise((resolve, reject) => {\n    logTask('configureTizenGlobal');\n    // Check Tizen Cert\n    // if (isPlatformActive(c, TIZEN) || isPlatformActive(c, TIZEN_WATCH)) {\n    const tizenAuthorCert = path.join(c.paths.workspace.dir, 'tizen_author.p12');\n    if (fs.existsSync(tizenAuthorCert)) {\n        console.log('tizen_author.p12 file exists!');\n        resolve();\n    } else {\n        console.log('tizen_author.p12 file missing! Creating one for you...');\n        createDevelopTizenCertificate(c)\n            .then(() => resolve())\n            .catch(e => reject(e));\n    }\n    // }\n});\n\nexport const launchTizenSimulator = (c, name) => {\n    logTask(`launchTizenSimulator:${name}`);\n\n    if (name) {\n        return execCLI(c, CLI_TIZEN_EMULATOR, `launch --name ${name}`, { detached: true });\n    }\n    return Promise.reject('No simulator -t target name specified!');\n};\n\nexport const listTizenTargets = async (c, name) => {\n    const targets = await execCLI(c, CLI_TIZEN_EMULATOR, 'list-vm', { detached: true });\n    const targetArr = targets.split('\\n');\n    let targetStr = '';\n    Object.keys(targetArr).forEach((i) => {\n        targetStr += `[${i}]> ${targetArr[i]}\\n`;\n    });\n    logToSummary(`Tizen Targets:\\n${targetStr}`);\n};\n\nexport const createDevelopTizenCertificate = c => new Promise((resolve, reject) => {\n    logTask('createDevelopTizenCertificate');\n\n    execCLI(c, CLI_TIZEN, `certificate -- ${c.paths.workspace.dir} -a rnv -f tizen_author -p 1234`)\n        .then(() => addDevelopTizenCertificate(c))\n        .then(() => resolve())\n        .catch((e) => {\n            logError(e);\n            resolve();\n        });\n});\n\nexport const addDevelopTizenCertificate = c => new Promise((resolve) => {\n    logTask('addDevelopTizenCertificate');\n\n    execCLI(c, CLI_TIZEN, `security-profiles add -n RNVanillaCert -a ${path.join(c.paths.workspace.dir, 'tizen_author.p12')} -p 1234`)\n        .then(() => resolve())\n        .catch((e) => {\n            logError(e);\n            resolve();\n        });\n});\n\nconst _getDeviceID = async (c, target) => {\n    const { device } = c.program;\n\n    if (device) {\n        let connectResponse;\n        try {\n            connectResponse = await execCLI(c, CLI_SDB_TIZEN, `connect ${target}`);\n        } catch (e) {\n            connectResponse = e;\n        }\n        if (connectResponse.includes('EPERM')) throw new Error('We can\\'t connect to this device even though it is reachable. Please make sure you have enabled Developer Mode and you have added your IP in the Host PC IP section. For more information consult https://developer.samsung.com/tv/develop/getting-started/using-sdk/tv-device');\n        if (connectResponse.includes('failed to connect to remote target')) throw new Error(`Failed to connect to ${target}. Make sure the IP is correct and you are connected on the same network.`);\n        if (connectResponse.includes('error')) throw new Error(connectResponse);\n    }\n\n    const devicesList = await execCLI(c, CLI_SDB_TIZEN, 'devices');\n    if (devicesList.includes(target)) {\n        const lines = devicesList.trim().split(/\\r?\\n/);\n        const devices = lines.filter(line => line.includes(target));\n\n        if (devices.length > 1) {\n            // @todo handle more than one\n        }\n\n        const deviceID = devices[0].split('device')[1].trim();\n        return deviceID;\n    }\n    return Promise.reject(`No device matching ${target} could be found.`);\n};\n\nconst _getRunningDevices = async (c) => {\n    const { platform } = c.program;\n    const devicesList = await execCLI(c, CLI_SDB_TIZEN, 'devices');\n    const lines = devicesList.trim().split(/\\r?\\n/).filter(line => !line.includes('List of devices'));\n    const devices = [];\n\n    await Promise.all(lines.map(async (line) => {\n        const words = line.replace(/\\t/g, '').split('    ');\n        if (words.length >= 3) {\n            const name = words[0].trim();\n            const deviceInfoXML = await execCLI(c, CLI_SDB_TIZEN, `-s ${name} shell cat /etc/config/model-config.xml`, { ignoreErrors: true });\n\n            let deviceInfo;\n            let deviceType;\n\n            if (deviceInfoXML !== true && deviceInfoXML !== '') {\n                // for some reason the tv does not connect through sdb\n                deviceInfo = formatXMLObject(parser.toJson(deviceInfoXML, { object: true, reversible: false }));\n                deviceType = deviceInfo['tizen.org/feature/profile'];\n            }\n\n            if ((platform === 'tizenmobile' && deviceType === 'mobile') || (platform === 'tizenwatch' && deviceType === 'wearable') || (platform === 'tizen' && !deviceType)) {\n                devices.push({\n                    name,\n                    type: words[1].trim(),\n                    id: words[2].trim(),\n                    deviceType,\n                });\n            }\n        }\n    }));\n\n    return devices;\n};\n\nconst _waitForEmulatorToBeReady = (c, target) => waitForEmulator(c, CLI_SDB_TIZEN, 'devices', (res) => {\n    const lines = res.trim().split(/\\r?\\n/);\n    const devices = lines.filter(line => line.includes(target) && line.includes('device'));\n    return devices.length > 0;\n});\n\nconst _composeDevicesString = devices => devices.map(device => ({ key: device.id, name: device.name, value: device.id }));\n\nconst startHostedServerIfRequired = (c) => {\n    if (Config.isWebHostEnabled) {\n        return rnvStart(c);\n    }\n};\n\nexport const runTizen = async (c, platform, target) => {\n    logTask(`runTizen:${platform}:${target}`);\n\n    const platformConfig = c.buildConfig.platforms[platform];\n    const { hosted, debug } = c.program;\n\n    const isHosted = hosted || !getConfigProp(c, platform, 'bundleAssets');\n    // if (debug) isHosted = false;\n\n    if (!platformConfig) {\n        throw new Error(`runTizen: ${chalk.grey(platform)} not defined in your ${chalk.white(c.paths.appConfig.config)}`);\n    }\n    if (!platformConfig.appName) {\n        throw new Error(`runTizen: ${chalk.grey(platform)}.appName not defined in your ${chalk.white(c.paths.appConfig.config)}`);\n    }\n\n    const tDir = getAppFolder(c, platform);\n    const tBuild = path.join(tDir, 'build');\n    const tOut = path.join(tDir, 'output');\n    const tId = platformConfig.id;\n    const gwt = `${platformConfig.appName}.wgt`;\n    const certProfile = platformConfig.certificateProfile;\n\n\n    let deviceID;\n\n    if (isHosted) {\n        const isPortActive = await checkPortInUse(c, platform, c.runtime.port);\n        if (isPortActive) {\n            await confirmActiveBundler(c);\n            c.runtime.skipActiveServerCheck = true;\n        }\n    }\n\n\n    const askForEmulator = async () => {\n        const { startEmulator } = await inquirer.prompt([{\n            name: 'startEmulator',\n            type: 'confirm',\n            message: `Could not find or connect to the specified target (${target}). Would you like to start an emulator?`,\n        }]);\n\n        if (startEmulator) {\n            const defaultTarget = c.files.workspace.config.defaultTargets[platform];\n            try {\n                await launchTizenSimulator(c, defaultTarget);\n                deviceID = defaultTarget;\n                await _waitForEmulatorToBeReady(c, defaultTarget);\n                return continueLaunching();\n            } catch (e) {\n                logDebug(`askForEmulator:ERRROR: ${e}`);\n                try {\n                    await execCLI(c, CLI_TIZEN_EMULATOR, `create -n ${defaultTarget} -p tv-samsung-5.0-x86`);\n                    await launchTizenSimulator(c, defaultTarget);\n                    deviceID = defaultTarget;\n                    await _waitForEmulatorToBeReady(c, defaultTarget);\n                    return continueLaunching();\n                } catch (err) {\n                    logDebug(err);\n                    logError(`Could not find the specified target and could not create the emulator automatically. Please create one and then edit the default target from ${c.paths.workspace.dir}/${RENATIVE_CONFIG_NAME}`);\n                }\n            }\n        }\n    };\n\n    const continueLaunching = async () => {\n        let hasDevice = false;\n\n        !isHosted && await buildWeb(c, platform);\n        await execCLI(c, CLI_TIZEN, `build-web -- ${tDir} -out ${tBuild}`);\n        await execCLI(c, CLI_TIZEN, `package -- ${tBuild} -s ${certProfile} -t wgt -o ${tOut}`);\n\n        try {\n            const packageID = platform === 'tizenwatch' || platform === 'tizenmobile' ? tId.split('.')[0] : tId;\n            await execCLI(c, CLI_TIZEN, `uninstall -p ${packageID} -t ${deviceID}`, { ignoreErrors: true });\n            hasDevice = true;\n        } catch (e) {\n            if (e && e.includes && e.includes('No device matching')) {\n                await launchTizenSimulator(c, target);\n                hasDevice = await _waitForEmulatorToBeReady(c, target);\n            }\n        }\n        try {\n            await execCLI(c, CLI_TIZEN, `install -- ${tOut} -n ${gwt} -t ${deviceID}`);\n            hasDevice = true;\n        } catch (err) {\n            logError(err);\n            logWarning(\n                `Looks like there is no emulator or device connected! Let's try to launch it. \"${chalk.white.bold(\n                    `rnv target launch -p ${platform} -t ${target}`\n                )}\"`\n            );\n\n            await launchTizenSimulator(c, target);\n            hasDevice = await _waitForEmulatorToBeReady(c, target);\n        }\n\n        let toReturn = true;\n\n        if (isHosted) {\n            toReturn = startHostedServerIfRequired(c);\n            await waitForWebpack(c);\n        }\n\n        if (platform !== 'tizenwatch' && platform !== 'tizenmobile' && hasDevice) {\n            await execCLI(c, CLI_TIZEN, `run -p ${tId} -t ${deviceID}`);\n        } else if ((platform === 'tizenwatch' || platform === 'tizenmobile') && hasDevice) {\n            const packageID = tId.split('.');\n            await execCLI(c, CLI_TIZEN, `run -p ${packageID[0]} -t ${deviceID}`);\n        }\n        return toReturn;\n    };\n\n    // Check if target is present or it's the default one\n    const isTargetSpecified = c.program.target;\n\n    // Check for running devices\n    const devices = await _getRunningDevices(c);\n\n    if (isTargetSpecified) {\n        // The user requested a specific target, searching for it in active ones\n        if (net.isIP(target)) {\n            deviceID = await _getDeviceID(c, target);\n            return continueLaunching();\n        }\n\n        if (devices.length > 0) {\n            const targetDevice = devices.find(device => device.id === target || device.name === target);\n            if (targetDevice) {\n                deviceID = targetDevice.id;\n                return continueLaunching();\n            }\n        }\n        try {\n            // try to launch it, see if it's a simulator that's not started yet\n            await launchTizenSimulator(c, target);\n            await _waitForEmulatorToBeReady(c, target);\n            deviceID = target;\n            return continueLaunching();\n        } catch (e) {\n            return askForEmulator();\n        }\n    } else {\n        if (devices.length === 1) {\n            deviceID = devices[0].id;\n            return continueLaunching();\n        } if (devices.length > 1) {\n            const choices = _composeDevicesString(devices);\n            const { chosenEmulator } = await inquirer.prompt([{\n                name: 'chosenEmulator',\n                type: 'list',\n                message: 'On what emulator would you like to run the app?',\n                choices\n            }]);\n            deviceID = chosenEmulator;\n            return continueLaunching();\n        }\n        return askForEmulator();\n    }\n};\n\nexport const buildTizenProject = (c, platform) => new Promise((resolve, reject) => {\n    logTask(`buildTizenProject:${platform}`);\n\n    const platformConfig = c.buildConfig.platforms[platform];\n    const tDir = getAppFolder(c, platform);\n    const tOut = path.join(tDir, 'output');\n    const tBuild = path.join(tDir, 'build');\n    const certProfile = platformConfig.certificateProfile;\n\n    buildWeb(c, platform)\n        .then(() => execCLI(c, CLI_TIZEN, `build-web -- ${tDir} -out ${tBuild}`))\n        .then(() => execCLI(c, CLI_TIZEN, `package -- ${tBuild} -s ${certProfile} -t wgt -o ${tOut}`))\n        .then(() => {\n            logSuccess(`Your GWT package is located in ${chalk.white(tOut)} .`);\n            return resolve();\n        })\n        .catch(e => reject(e));\n});\n\nlet _isGlobalConfigured = false;\n\nexport const configureTizenProject = async (c, platform) => {\n    logTask('configureTizenProject');\n\n    if (!isPlatformActive(c, platform)) return;\n\n    if (!_isGlobalConfigured) {\n        _isGlobalConfigured = true;\n        await configureTizenGlobal(c);\n    }\n\n    await copyAssetsFolder(c, platform);\n    await configureCoreWebProject(c, platform);\n    await configureProject(c, platform);\n    return copyBuildsFolder(c, platform);\n};\n\nexport const configureProject = (c, platform) => new Promise((resolve) => {\n    logTask(`configureProject:${platform}`);\n\n    const appFolder = getAppFolder(c, platform);\n\n    const configFile = 'config.xml';\n    const p = c.buildConfig.platforms[platform];\n    writeCleanFile(path.join(getAppTemplateFolder(c, platform), configFile), path.join(appFolder, configFile), [\n        { pattern: '{{PACKAGE}}', override: p.package },\n        { pattern: '{{ID}}', override: p.id },\n        { pattern: '{{APP_NAME}}', override: p.appName },\n    ]);\n\n    resolve();\n});\n"],"mappings":"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"}