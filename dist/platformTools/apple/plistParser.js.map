{"version":3,"sources":["../../../src/platformTools/apple/plistParser.js"],"names":["parseExportOptionsPlist","c","platform","Promise","resolve","tId","appFolder","exportOptions","id","pluginConfigiOS","objToPlist","provisioningProfiles","expProvProfile","paths","appConfig","config","bPath","path","join","pattern","override","parseEntitlementsPlist","reject","appFolderName","entitlementsPath","pluginsEntitlementsObj","rnv","dir","saveObjToPlistSync","parseInfoPlist","plat","buildConfig","platforms","orientationSupport","urlScheme","plistPath","plistObj","CFBundleDisplayName","CFBundleShortVersionString","CFBundleVersion","embeddedFonts","length","UIAppFonts","pluginPermissions","includedPermissions","permissions","pc","v","key","desc","forEach","phone","UISupportedInterfaceOrientations","tab","CFBundleURLTypes","push","CFBundleTypeRole","CFBundleURLName","CFBundleURLSchemes","plist","plugin","pluginPlat","PLIST_START","PLIST_END","obj","output","_parseObject","level","space","i","filePath","fs","writeFileSync"],"mappings":"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","sourcesContent":["import path from 'path';\nimport fs from 'fs';\nimport { isObject, isArray, isBool, isString } from '../../systemTools/objectUtils';\nimport {\n    getAppFolder,\n    getAppVersion,\n    getAppTitle,\n    getAppVersionCode,\n    writeCleanFile,\n    getConfigProp,\n    getBuildFilePath,\n    getFlavouredProp\n} from '../../common';\nimport {\n    logTask,\n    logError,\n    logWarning\n} from '../../systemTools/logger';\nimport { parsePlugins } from '../../pluginTools';\nimport { getAppFolderName } from './index';\nimport { readObjectSync, mergeObjects } from '../../systemTools/fileutils';\n\n\nexport const parseExportOptionsPlist = (c, platform) => new Promise((resolve) => {\n// EXPORT OPTIONS\n    const tId = getConfigProp(c, platform, 'teamID');\n    const appFolder = getAppFolder(c, platform);\n    const exportOptions = getConfigProp(c, platform, 'exportOptions') || {};\n    const id = getConfigProp(c, platform, 'id');\n\n    c.pluginConfigiOS.exportOptions = objToPlist(exportOptions);\n\n    if (exportOptions.provisioningProfiles) {\n        const expProvProfile = exportOptions.provisioningProfiles[id];\n        if (!expProvProfile) {\n            logError(`Your exportOptions.provisionProfiles object in ${c.paths.appConfig.config} does not include id ${id}!`);\n        }\n    }\n\n    const bPath = getBuildFilePath(c, platform, 'exportOptions.plist');\n    writeCleanFile(bPath, path.join(appFolder, 'exportOptions.plist'), [\n        { pattern: '{{TEAM_ID}}', override: tId },\n        { pattern: '{{PLUGIN_EXPORT_OPTIONS}}', override: c.pluginConfigiOS.exportOptions },\n    ]);\n    resolve();\n});\n\nexport const parseEntitlementsPlist = (c, platform) => new Promise((resolve, reject) => {\n    logTask(`parseEntitlementsPlistSync:${platform}`);\n\n    const appFolder = getAppFolder(c, platform);\n    const appFolderName = getAppFolderName(c, platform);\n    const entitlementsPath = path.join(appFolder, `${appFolderName}/${appFolderName}.entitlements`);\n    // PLUGIN ENTITLEMENTS\n    let pluginsEntitlementsObj = getConfigProp(c, platform, 'entitlements');\n    if (!pluginsEntitlementsObj) {\n        pluginsEntitlementsObj = readObjectSync(path.join(c.paths.rnv.dir, 'src/platformTools/apple/supportFiles/entitlements.json'));\n    }\n\n    saveObjToPlistSync(c, entitlementsPath, pluginsEntitlementsObj);\n    resolve();\n});\n\nexport const parseInfoPlist = (c, platform) => new Promise((resolve, reject) => {\n    logTask(`parseInfoPlist:${platform}`);\n\n    const appFolder = getAppFolder(c, platform);\n    const appFolderName = getAppFolderName(c, platform);\n    const plat = c.buildConfig.platforms[platform];\n    const { orientationSupport, urlScheme } = plat;\n    const plistPath = path.join(appFolder, `${appFolderName}/Info.plist`);\n\n    // PLIST\n    let plistObj = readObjectSync(path.join(c.paths.rnv.dir, `src/platformTools/apple/supportFiles/info.plist.${platform}.json`));\n    plistObj.CFBundleDisplayName = getAppTitle(c, platform);\n    plistObj.CFBundleShortVersionString = getAppVersion(c, platform);\n    plistObj.CFBundleVersion = getAppVersionCode(c, platform);\n    // FONTS\n    if (c.pluginConfigiOS.embeddedFonts.length) {\n        plistObj.UIAppFonts = c.pluginConfigiOS.embeddedFonts;\n    }\n    // PERMISSIONS\n    const pluginPermissions = '';\n    const includedPermissions = getConfigProp(c, platform, 'includedPermissions') || getConfigProp(c, platform, 'permissions');\n    if (includedPermissions && c.buildConfig.permissions) {\n        const plat = c.buildConfig.permissions[platform] ? platform : 'ios';\n        const pc = c.buildConfig.permissions[plat];\n        if (includedPermissions.length && includedPermissions[0] === '*') {\n            for (const v in pc) {\n                const key = pc[v].key || v;\n                plistObj[key] = pc[v].desc;\n            }\n        } else {\n            includedPermissions.forEach((v) => {\n                if (pc[v]) {\n                    const key = pc[v].key || v;\n                    plistObj[key] = pc[v].desc;\n                }\n            });\n        }\n    }\n    // ORIENATATIONS\n    if (orientationSupport) {\n        if (orientationSupport.phone) {\n            plistObj.UISupportedInterfaceOrientations = orientationSupport.phone;\n        } else {\n            plistObj.UISupportedInterfaceOrientations = ['UIInterfaceOrientationPortrait'];\n        }\n        if (orientationSupport.tab) {\n            plistObj['UISupportedInterfaceOrientations~ipad'] = orientationSupport.tab;\n        } else {\n            plistObj['UISupportedInterfaceOrientations~ipad'] = ['UIInterfaceOrientationPortrait'];\n        }\n    }\n    // URL_SCHEMES (LEGACY)\n    if (urlScheme) {\n        logWarning('urlScheme is DEPRECATED. use \"plist:{ CFBundleURLTypes: []}\" object instead');\n        plistObj.CFBundleURLTypes.push({\n            CFBundleTypeRole: 'Editor',\n            CFBundleURLName: urlScheme,\n            CFBundleURLSchemes: [urlScheme]\n        });\n    }\n\n    // PLIST\n    const plist = getConfigProp(c, platform, 'plist');\n    if (plist) {\n        plistObj = mergeObjects(c, plistObj, plist, true, true);\n    }\n\n    // PLUGINS\n    parsePlugins(c, platform, (plugin, pluginPlat, key) => {\n        const plist = getFlavouredProp(c, pluginPlat, 'plist');\n        if (plist) {\n            plistObj = mergeObjects(c, plistObj, plist, true, false);\n        }\n    });\n    saveObjToPlistSync(c, plistPath, plistObj);\n    resolve();\n});\n\nconst PLIST_START = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\\n`;\n\nconst PLIST_END = '</plist>\\n';\n\nconst objToPlist = (obj) => {\n    let output = PLIST_START;\n    output += _parseObject(obj, 0);\n    output += PLIST_END;\n    return output;\n};\n\nconst _parseObject = (obj, level) => {\n    let output = '';\n    let space = '';\n    for (let i = 0; i < level; i++) {\n        space += '  ';\n    }\n    if (isArray(obj)) {\n        output += `${space}<array>\\n`;\n        obj.forEach((v) => {\n            output += _parseObject(v, level + 1);\n        });\n        output += `${space}</array>\\n`;\n    } else if (isBool(obj)) {\n        output += `${space}<${obj} />\\n`;\n    } else if (isObject(obj)) {\n        output += `${space}<dict>\\n`;\n        for (const key in obj) {\n            output += `  ${space}<key>${key}</key>\\n`;\n            output += _parseObject(obj[key], level + 1);\n        }\n        output += `${space}</dict>\\n`;\n    } else if (isString(obj)) {\n        output += `${space}<string>${obj}</string>\\n`;\n    }\n\n    return output;\n};\n\nconst saveObjToPlistSync = (c, filePath, obj) => {\n    // fs.writeFileSync(filePath, objToPlist(sanitizeDynamicProps(obj, c.buildConfig?._refs)));\n    fs.writeFileSync(filePath, objToPlist(obj));\n};\n\n\nexport {\n    objToPlist,\n    saveObjToPlistSync\n};\n"],"file":"plistParser.js"}