{"version":3,"file":"plistParser.js","names":["parseExportOptionsPlist","c","platform","Promise","resolve","tId","getConfigProp","appFolder","getAppFolder","exportOptions","id","pluginConfigiOS","objToPlist","provisioningProfiles","expProvProfile","logError","paths","appConfig","config","bPath","getBuildFilePath","writeCleanFile","path","join","pattern","override","parseEntitlementsPlist","reject","logTask","appFolderName","getAppFolderName","entitlementsPath","pluginsEntitlementsObj","readObjectSync","rnv","dir","saveObjToPlistSync","parseInfoPlist","plat","buildConfig","platforms","orientationSupport","urlScheme","plistPath","plistObj","CFBundleDisplayName","getAppTitle","CFBundleShortVersionString","getAppVersion","CFBundleVersion","getAppVersionCode","embeddedFonts","length","UIAppFonts","pluginPermissions","includedPermissions","permissions","pc","v","key","desc","forEach","phone","UISupportedInterfaceOrientations","tab","logWarning","CFBundleURLTypes","push","CFBundleTypeRole","CFBundleURLName","CFBundleURLSchemes","plist","mergeObjects","parsePlugins","plugin","pluginPlat","getFlavouredProp","PLIST_START","PLIST_END","obj","output","_parseObject","level","space","i","isArray","isBool","isObject","isString","filePath","fs","writeFileSync"],"sources":["../../../src/platformTools/apple/plistParser.js"],"sourcesContent":["import path from 'path';\nimport fs from 'fs';\nimport { isObject, isArray, isBool, isString } from '../../systemTools/objectUtils';\nimport {\n    getAppFolder,\n    getAppVersion,\n    getAppTitle,\n    getAppVersionCode,\n    writeCleanFile,\n    getConfigProp,\n    getBuildFilePath,\n    getFlavouredProp\n} from '../../common';\nimport {\n    logTask,\n    logError,\n    logWarning\n} from '../../systemTools/logger';\nimport { parsePlugins } from '../../pluginTools';\nimport { getAppFolderName } from './index';\nimport { readObjectSync, mergeObjects } from '../../systemTools/fileutils';\n\n\nexport const parseExportOptionsPlist = (c, platform) => new Promise((resolve) => {\n// EXPORT OPTIONS\n    const tId = getConfigProp(c, platform, 'teamID');\n    const appFolder = getAppFolder(c, platform);\n    const exportOptions = getConfigProp(c, platform, 'exportOptions') || {};\n    const id = getConfigProp(c, platform, 'id');\n\n    c.pluginConfigiOS.exportOptions = objToPlist(exportOptions);\n\n    if (exportOptions.provisioningProfiles) {\n        const expProvProfile = exportOptions.provisioningProfiles[id];\n        if (!expProvProfile) {\n            logError(`Your exportOptions.provisionProfiles object in ${c.paths.appConfig.config} does not include id ${id}!`);\n        }\n    }\n\n    const bPath = getBuildFilePath(c, platform, 'exportOptions.plist');\n    writeCleanFile(bPath, path.join(appFolder, 'exportOptions.plist'), [\n        { pattern: '{{TEAM_ID}}', override: tId },\n        { pattern: '{{PLUGIN_EXPORT_OPTIONS}}', override: c.pluginConfigiOS.exportOptions },\n    ]);\n    resolve();\n});\n\nexport const parseEntitlementsPlist = (c, platform) => new Promise((resolve, reject) => {\n    logTask(`parseEntitlementsPlistSync:${platform}`);\n\n    const appFolder = getAppFolder(c, platform);\n    const appFolderName = getAppFolderName(c, platform);\n    const entitlementsPath = path.join(appFolder, `${appFolderName}/${appFolderName}.entitlements`);\n    // PLUGIN ENTITLEMENTS\n    let pluginsEntitlementsObj = getConfigProp(c, platform, 'entitlements');\n    if (!pluginsEntitlementsObj) {\n        pluginsEntitlementsObj = readObjectSync(path.join(c.paths.rnv.dir, 'src/platformTools/apple/supportFiles/entitlements.json'));\n    }\n\n    saveObjToPlistSync(c, entitlementsPath, pluginsEntitlementsObj);\n    resolve();\n});\n\nexport const parseInfoPlist = (c, platform) => new Promise((resolve, reject) => {\n    logTask(`parseInfoPlist:${platform}`);\n\n    const appFolder = getAppFolder(c, platform);\n    const appFolderName = getAppFolderName(c, platform);\n    const plat = c.buildConfig.platforms[platform];\n    const { orientationSupport, urlScheme } = plat;\n    const plistPath = path.join(appFolder, `${appFolderName}/Info.plist`);\n\n    // PLIST\n    let plistObj = readObjectSync(path.join(c.paths.rnv.dir, `src/platformTools/apple/supportFiles/info.plist.${platform}.json`));\n    plistObj.CFBundleDisplayName = getAppTitle(c, platform);\n    plistObj.CFBundleShortVersionString = getAppVersion(c, platform);\n    plistObj.CFBundleVersion = getAppVersionCode(c, platform);\n    // FONTS\n    if (c.pluginConfigiOS.embeddedFonts.length) {\n        plistObj.UIAppFonts = c.pluginConfigiOS.embeddedFonts;\n    }\n    // PERMISSIONS\n    const pluginPermissions = '';\n    const includedPermissions = getConfigProp(c, platform, 'includedPermissions') || getConfigProp(c, platform, 'permissions');\n    if (includedPermissions && c.buildConfig.permissions) {\n        const plat = c.buildConfig.permissions[platform] ? platform : 'ios';\n        const pc = c.buildConfig.permissions[plat];\n        if (includedPermissions.length && includedPermissions[0] === '*') {\n            for (const v in pc) {\n                const key = pc[v].key || v;\n                plistObj[key] = pc[v].desc;\n            }\n        } else {\n            includedPermissions.forEach((v) => {\n                if (pc[v]) {\n                    const key = pc[v].key || v;\n                    plistObj[key] = pc[v].desc;\n                }\n            });\n        }\n    }\n    // ORIENATATIONS\n    if (orientationSupport) {\n        if (orientationSupport.phone) {\n            plistObj.UISupportedInterfaceOrientations = orientationSupport.phone;\n        } else {\n            plistObj.UISupportedInterfaceOrientations = ['UIInterfaceOrientationPortrait'];\n        }\n        if (orientationSupport.tab) {\n            plistObj['UISupportedInterfaceOrientations~ipad'] = orientationSupport.tab;\n        } else {\n            plistObj['UISupportedInterfaceOrientations~ipad'] = ['UIInterfaceOrientationPortrait'];\n        }\n    }\n    // URL_SCHEMES (LEGACY)\n    if (urlScheme) {\n        logWarning('urlScheme is DEPRECATED. use \"plist:{ CFBundleURLTypes: []}\" object instead');\n        plistObj.CFBundleURLTypes.push({\n            CFBundleTypeRole: 'Editor',\n            CFBundleURLName: urlScheme,\n            CFBundleURLSchemes: [urlScheme]\n        });\n    }\n\n    // PLIST\n    const plist = getConfigProp(c, platform, 'plist');\n    if (plist) {\n        plistObj = mergeObjects(c, plistObj, plist, true, true);\n    }\n\n    // PLUGINS\n    parsePlugins(c, platform, (plugin, pluginPlat, key) => {\n        const plist = getFlavouredProp(c, pluginPlat, 'plist');\n        if (plist) {\n            plistObj = mergeObjects(c, plistObj, plist, true, false);\n        }\n    });\n    saveObjToPlistSync(c, plistPath, plistObj);\n    resolve();\n});\n\nconst PLIST_START = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\\n`;\n\nconst PLIST_END = '</plist>\\n';\n\nconst objToPlist = (obj) => {\n    let output = PLIST_START;\n    output += _parseObject(obj, 0);\n    output += PLIST_END;\n    return output;\n};\n\nconst _parseObject = (obj, level) => {\n    let output = '';\n    let space = '';\n    for (let i = 0; i < level; i++) {\n        space += '  ';\n    }\n    if (isArray(obj)) {\n        output += `${space}<array>\\n`;\n        obj.forEach((v) => {\n            output += _parseObject(v, level + 1);\n        });\n        output += `${space}</array>\\n`;\n    } else if (isBool(obj)) {\n        output += `${space}<${obj} />\\n`;\n    } else if (isObject(obj)) {\n        output += `${space}<dict>\\n`;\n        for (const key in obj) {\n            output += `  ${space}<key>${key}</key>\\n`;\n            output += _parseObject(obj[key], level + 1);\n        }\n        output += `${space}</dict>\\n`;\n    } else if (isString(obj)) {\n        output += `${space}<string>${obj}</string>\\n`;\n    }\n\n    return output;\n};\n\nconst saveObjToPlistSync = (c, filePath, obj) => {\n    // fs.writeFileSync(filePath, objToPlist(sanitizeDynamicProps(obj, c.buildConfig?._refs)));\n    fs.writeFileSync(filePath, objToPlist(obj));\n};\n\n\nexport {\n    objToPlist,\n    saveObjToPlistSync\n};\n"],"mappings":"uRAAA;AACA;AACA;AACA;;;;;;;;;;AAUA;;;;;AAKA;AACA;AACA;;;AAGO,GAAMA,wBAAuB,CAAG,QAA1BA,wBAAuB,CAAIC,CAAC,CAAEC,QAAQ,QAAK,IAAIC,QAAO,CAAC,SAACC,OAAO,CAAK;;AAE7E,GAAMC,IAAG,CAAG,GAAAC,qBAAa,EAACL,CAAC,CAAEC,QAAQ,CAAE,QAAQ,CAAC;AAChD,GAAMK,UAAS,CAAG,GAAAC,oBAAY,EAACP,CAAC,CAAEC,QAAQ,CAAC;AAC3C,GAAMO,cAAa,CAAG,GAAAH,qBAAa,EAACL,CAAC,CAAEC,QAAQ,CAAE,eAAe,CAAC,EAAI,CAAC,CAAC;AACvE,GAAMQ,GAAE,CAAG,GAAAJ,qBAAa,EAACL,CAAC,CAAEC,QAAQ,CAAE,IAAI,CAAC;;AAE3CD,CAAC,CAACU,eAAe,CAACF,aAAa,CAAGG,UAAU,CAACH,aAAa,CAAC;;AAE3D,GAAIA,aAAa,CAACI,oBAAoB,CAAE;AACpC,GAAMC,eAAc,CAAGL,aAAa,CAACI,oBAAoB,CAACH,EAAE,CAAC;AAC7D,GAAI,CAACI,cAAc,CAAE;AACjB,GAAAC,gBAAQ,oDAAmDd,CAAC,CAACe,KAAK,CAACC,SAAS,CAACC,MAAM,yBAAwBR,EAAE,KAAI;AACrH;AACJ;;AAEA,GAAMS,MAAK,CAAG,GAAAC,wBAAgB,EAACnB,CAAC,CAAEC,QAAQ,CAAE,qBAAqB,CAAC;AAClE,GAAAmB,sBAAc,EAACF,KAAK,CAAEG,aAAI,CAACC,IAAI,CAAChB,SAAS,CAAE,qBAAqB,CAAC,CAAE;AAC/D,CAAEiB,OAAO,CAAE,aAAa,CAAEC,QAAQ,CAAEpB,GAAI,CAAC;AACzC,CAAEmB,OAAO,CAAE,2BAA2B,CAAEC,QAAQ,CAAExB,CAAC,CAACU,eAAe,CAACF,aAAc,CAAC,CACtF,CAAC;;AACFL,OAAO,EAAE;AACb,CAAC,CAAC,GAAC;;AAEI,GAAMsB,uBAAsB,CAAG,QAAzBA,uBAAsB,CAAIzB,CAAC,CAAEC,QAAQ,QAAK,IAAIC,QAAO,CAAC,SAACC,OAAO,CAAEuB,MAAM,CAAK;AACpF,GAAAC,eAAO,gCAA+B1B,QAAQ,CAAG;;AAEjD,GAAMK,UAAS,CAAG,GAAAC,oBAAY,EAACP,CAAC,CAAEC,QAAQ,CAAC;AAC3C,GAAM2B,cAAa,CAAG,GAAAC,uBAAgB,EAAC7B,CAAC,CAAEC,QAAQ,CAAC;AACnD,GAAM6B,iBAAgB,CAAGT,aAAI,CAACC,IAAI,CAAChB,SAAS,CAAKsB,aAAa,KAAIA,aAAa,iBAAgB;;AAE/F,GAAIG,uBAAsB,CAAG,GAAA1B,qBAAa,EAACL,CAAC,CAAEC,QAAQ,CAAE,cAAc,CAAC;AACvE,GAAI,CAAC8B,sBAAsB,CAAE;AACzBA,sBAAsB,CAAG,GAAAC,yBAAc,EAACX,aAAI,CAACC,IAAI,CAACtB,CAAC,CAACe,KAAK,CAACkB,GAAG,CAACC,GAAG,CAAE,wDAAwD,CAAC,CAAC;AACjI;;AAEAC,kBAAkB,CAACnC,CAAC,CAAE8B,gBAAgB,CAAEC,sBAAsB,CAAC;AAC/D5B,OAAO,EAAE;AACb,CAAC,CAAC,GAAC;;AAEI,GAAMiC,eAAc,CAAG,QAAjBA,eAAc,CAAIpC,CAAC,CAAEC,QAAQ,QAAK,IAAIC,QAAO,CAAC,SAACC,OAAO,CAAEuB,MAAM,CAAK;AAC5E,GAAAC,eAAO,oBAAmB1B,QAAQ,CAAG;;AAErC,GAAMK,UAAS,CAAG,GAAAC,oBAAY,EAACP,CAAC,CAAEC,QAAQ,CAAC;AAC3C,GAAM2B,cAAa,CAAG,GAAAC,uBAAgB,EAAC7B,CAAC,CAAEC,QAAQ,CAAC;AACnD,GAAMoC,KAAI,CAAGrC,CAAC,CAACsC,WAAW,CAACC,SAAS,CAACtC,QAAQ,CAAC;AAC9C,GAAQuC,mBAAkB,CAAgBH,IAAI,CAAtCG,kBAAkB,CAAEC,SAAS,CAAKJ,IAAI,CAAlBI,SAAS;AACrC,GAAMC,UAAS,CAAGrB,aAAI,CAACC,IAAI,CAAChB,SAAS,CAAKsB,aAAa,eAAc;;;AAGrE,GAAIe,SAAQ,CAAG,GAAAX,yBAAc,EAACX,aAAI,CAACC,IAAI,CAACtB,CAAC,CAACe,KAAK,CAACkB,GAAG,CAACC,GAAG,oDAAqDjC,QAAQ,SAAQ,CAAC;AAC7H0C,QAAQ,CAACC,mBAAmB,CAAG,GAAAC,mBAAW,EAAC7C,CAAC,CAAEC,QAAQ,CAAC;AACvD0C,QAAQ,CAACG,0BAA0B,CAAG,GAAAC,qBAAa,EAAC/C,CAAC,CAAEC,QAAQ,CAAC;AAChE0C,QAAQ,CAACK,eAAe,CAAG,GAAAC,yBAAiB,EAACjD,CAAC,CAAEC,QAAQ,CAAC;;AAEzD,GAAID,CAAC,CAACU,eAAe,CAACwC,aAAa,CAACC,MAAM,CAAE;AACxCR,QAAQ,CAACS,UAAU,CAAGpD,CAAC,CAACU,eAAe,CAACwC,aAAa;AACzD;;AAEA,GAAMG,kBAAiB,CAAG,EAAE;AAC5B,GAAMC,oBAAmB,CAAG,GAAAjD,qBAAa,EAACL,CAAC,CAAEC,QAAQ,CAAE,qBAAqB,CAAC,EAAI,GAAAI,qBAAa,EAACL,CAAC,CAAEC,QAAQ,CAAE,aAAa,CAAC;AAC1H,GAAIqD,mBAAmB,EAAItD,CAAC,CAACsC,WAAW,CAACiB,WAAW,CAAE;AAClD,GAAMlB,MAAI,CAAGrC,CAAC,CAACsC,WAAW,CAACiB,WAAW,CAACtD,QAAQ,CAAC,CAAGA,QAAQ,CAAG,KAAK;AACnE,GAAMuD,GAAE,CAAGxD,CAAC,CAACsC,WAAW,CAACiB,WAAW,CAAClB,KAAI,CAAC;AAC1C,GAAIiB,mBAAmB,CAACH,MAAM,EAAIG,mBAAmB,CAAC,CAAC,CAAC,GAAK,GAAG,CAAE;AAC9D,IAAK,GAAMG,EAAC,GAAID,GAAE,CAAE;AAChB,GAAME,IAAG,CAAGF,EAAE,CAACC,CAAC,CAAC,CAACC,GAAG,EAAID,CAAC;AAC1Bd,QAAQ,CAACe,GAAG,CAAC,CAAGF,EAAE,CAACC,CAAC,CAAC,CAACE,IAAI;AAC9B;AACJ,CAAC,IAAM;AACHL,mBAAmB,CAACM,OAAO,CAAC,SAACH,CAAC,CAAK;AAC/B,GAAID,EAAE,CAACC,CAAC,CAAC,CAAE;AACP,GAAMC,KAAG,CAAGF,EAAE,CAACC,CAAC,CAAC,CAACC,GAAG,EAAID,CAAC;AAC1Bd,QAAQ,CAACe,IAAG,CAAC,CAAGF,EAAE,CAACC,CAAC,CAAC,CAACE,IAAI;AAC9B;AACJ,CAAC,CAAC;AACN;AACJ;;AAEA,GAAInB,kBAAkB,CAAE;AACpB,GAAIA,kBAAkB,CAACqB,KAAK,CAAE;AAC1BlB,QAAQ,CAACmB,gCAAgC,CAAGtB,kBAAkB,CAACqB,KAAK;AACxE,CAAC,IAAM;AACHlB,QAAQ,CAACmB,gCAAgC,CAAG,CAAC,gCAAgC,CAAC;AAClF;AACA,GAAItB,kBAAkB,CAACuB,GAAG,CAAE;AACxBpB,QAAQ,CAAC,uCAAuC,CAAC,CAAGH,kBAAkB,CAACuB,GAAG;AAC9E,CAAC,IAAM;AACHpB,QAAQ,CAAC,uCAAuC,CAAC,CAAG,CAAC,gCAAgC,CAAC;AAC1F;AACJ;;AAEA,GAAIF,SAAS,CAAE;AACX,GAAAuB,kBAAU,EAAC,6EAA6E,CAAC;AACzFrB,QAAQ,CAACsB,gBAAgB,CAACC,IAAI,CAAC;AAC3BC,gBAAgB,CAAE,QAAQ;AAC1BC,eAAe,CAAE3B,SAAS;AAC1B4B,kBAAkB,CAAE,CAAC5B,SAAS;AAClC,CAAC,CAAC;AACN;;;AAGA,GAAM6B,MAAK,CAAG,GAAAjE,qBAAa,EAACL,CAAC,CAAEC,QAAQ,CAAE,OAAO,CAAC;AACjD,GAAIqE,KAAK,CAAE;AACP3B,QAAQ,CAAG,GAAA4B,uBAAY,EAACvE,CAAC,CAAE2C,QAAQ,CAAE2B,KAAK,CAAE,IAAI,CAAE,IAAI,CAAC;AAC3D;;;AAGA,GAAAE,yBAAY,EAACxE,CAAC,CAAEC,QAAQ,CAAE,SAACwE,MAAM,CAAEC,UAAU,CAAEhB,GAAG,CAAK;AACnD,GAAMY,MAAK,CAAG,GAAAK,wBAAgB,EAAC3E,CAAC,CAAE0E,UAAU,CAAE,OAAO,CAAC;AACtD,GAAIJ,KAAK,CAAE;AACP3B,QAAQ,CAAG,GAAA4B,uBAAY,EAACvE,CAAC,CAAE2C,QAAQ,CAAE2B,KAAK,CAAE,IAAI,CAAE,KAAK,CAAC;AAC5D;AACJ,CAAC,CAAC;AACFnC,kBAAkB,CAACnC,CAAC,CAAE0C,SAAS,CAAEC,QAAQ,CAAC;AAC1CxC,OAAO,EAAE;AACb,CAAC,CAAC,GAAC;;AAEH,GAAMyE,YAAW,oLAEO;;;;AAExB,GAAMC,UAAS,CAAG,YAAY;;AAE9B,GAAMlE,WAAU,CAAG,QAAbA,WAAU,CAAImE,GAAG,CAAK;AACxB,GAAIC,OAAM,CAAGH,WAAW;AACxBG,MAAM,EAAIC,YAAY,CAACF,GAAG,CAAE,CAAC,CAAC;AAC9BC,MAAM,EAAIF,SAAS;AACnB,MAAOE,OAAM;AACjB,CAAC,CAAC;;AAEF,GAAMC,aAAY,CAAG,QAAfA,aAAY,CAAIF,GAAG,CAAEG,KAAK,CAAK;AACjC,GAAIF,OAAM,CAAG,EAAE;AACf,GAAIG,MAAK,CAAG,EAAE;AACd,IAAK,GAAIC,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAGF,KAAK,CAAEE,CAAC,EAAE,CAAE;AAC5BD,KAAK,EAAI,IAAI;AACjB;AACA,GAAI,GAAAE,oBAAO,EAACN,GAAG,CAAC,CAAE;AACdC,MAAM,EAAOG,KAAK,YAAW;AAC7BJ,GAAG,CAAClB,OAAO,CAAC,SAACH,CAAC,CAAK;AACfsB,MAAM,EAAIC,YAAY,CAACvB,CAAC,CAAEwB,KAAK,CAAG,CAAC,CAAC;AACxC,CAAC,CAAC;AACFF,MAAM,EAAOG,KAAK,aAAY;AAClC,CAAC,IAAM,IAAI,GAAAG,mBAAM,EAACP,GAAG,CAAC,CAAE;AACpBC,MAAM,EAAOG,KAAK,KAAIJ,GAAG,QAAO;AACpC,CAAC,IAAM,IAAI,GAAAQ,qBAAQ,EAACR,GAAG,CAAC,CAAE;AACtBC,MAAM,EAAOG,KAAK,WAAU;AAC5B,IAAK,GAAMxB,IAAG,GAAIoB,IAAG,CAAE;AACnBC,MAAM,OAASG,KAAK,SAAQxB,GAAG,WAAU;AACzCqB,MAAM,EAAIC,YAAY,CAACF,GAAG,CAACpB,GAAG,CAAC,CAAEuB,KAAK,CAAG,CAAC,CAAC;AAC/C;AACAF,MAAM,EAAOG,KAAK,YAAW;AACjC,CAAC,IAAM,IAAI,GAAAK,qBAAQ,EAACT,GAAG,CAAC,CAAE;AACtBC,MAAM,EAAOG,KAAK,YAAWJ,GAAG,cAAa;AACjD;;AAEA,MAAOC,OAAM;AACjB,CAAC;;AAED,GAAM5C,mBAAkB,CAAG,QAArBA,mBAAkB,CAAInC,CAAC,CAAEwF,QAAQ,CAAEV,GAAG,CAAK;;AAE7CW,WAAE,CAACC,aAAa,CAACF,QAAQ,CAAE7E,UAAU,CAACmE,GAAG,CAAC,CAAC;AAC/C,CAAC,CAAC"}