{"version":3,"file":"fastlane.js","names":["registerDevice","c","logTask","platform","teamID","getConfigProp","udid","runtime","targetUDID","deviceName","target","args","executeAsync","join","shell","stdio","silent","logSuccess","logWarning","updateProfile","appConfigId","chalk","grey","setAppConfig","IOS","TVOS","Promise","reject","scheme","program","appId","id","getAppId","pMethod","method","runScheme","provisioning","certsPath","path","paths","workspace","appConfig","dir","process","env","APPLE_DEVELOPER_USERNAME","concat","push"],"sources":["../../../src/platformTools/apple/fastlane.js"],"sourcesContent":["import path from 'path';\nimport chalk from 'chalk';\nimport {\n    getConfigProp,\n    getAppId\n} from '../../common';\nimport {\n    logTask,\n    logWarning,\n    logSuccess\n} from '../../systemTools/logger';\nimport { executeAsync } from '../../systemTools/exec';\nimport { IOS, TVOS } from '../../constants';\nimport { setAppConfig } from '../../configTools/configParser';\n\nexport const registerDevice = async (c) => {\n    logTask(`registerDevice:${c.platform}`);\n\n\n    const teamID = getConfigProp(c, c.platform, 'teamID');\n    const udid = c.runtime.targetUDID;\n    const deviceName = c.runtime.target;\n\n    const args = [\n        'run',\n        'register_device',\n        `team_id:\"${teamID}\"`,\n        `udid:\"${udid}\"`,\n        `name:\"${deviceName}\"`\n    ];\n\n    try {\n        await executeAsync(c, `fastlane ${args.join(' ')}`, { shell: true, stdio: 'inherit', silent: true });\n        logSuccess(`Succesfully registered device ${deviceName}:${udid}:${teamID}`);\n        return true;\n    } catch (e) {\n        logWarning(e);\n        return true;\n    }\n};\n\nexport const updateProfile = async (c, appConfigId) => {\n    logTask(`updateProfile:${appConfigId}`, chalk.grey);\n\n    // TODO: run trough all schemes\n    // const schemes = c.buildConfig.platforms?.[c.platform]?.buildSchemes\n    // const currScheme = c.program.scheme\n    // for(k in schemes) {\n    //   c.program.scheme = k\n    // }\n\n    if (appConfigId) await setAppConfig(c, appConfigId);\n\n    if (c.platform !== IOS && c.platform !== TVOS) {\n        return Promise.reject(`updateProfile:platform ${c.platform} not supported`);\n    }\n    const { scheme } = c.program;\n\n\n    const { platform } = c;\n\n    const { appId } = c.runtime;\n\n    const id = getAppId(c, platform);\n    const teamID = getConfigProp(c, platform, 'teamID');\n    const pMethod = getConfigProp(c, platform, 'exportOptions')?.method;\n    const runScheme = getConfigProp(c, platform, 'runScheme');\n    let provisioning;\n    if (pMethod === 'ad-hoc') provisioning = 'adhoc';\n    if (pMethod === 'development' || runScheme === 'Debug') provisioning = 'development';\n\n    const certsPath = path.join(c.paths.workspace.appConfig.dir, 'certs');\n\n    let args = [\n        'sigh',\n        '--app_identifier',\n        id,\n        '--team_id',\n        teamID,\n        '--output_path',\n        certsPath,\n        '--force',\n        '--platform',\n        platform\n    ];\n    if (process.env.APPLE_DEVELOPER_USERNAME) {\n        args = args.concat([\n            '--username',\n            process.env.APPLE_DEVELOPER_USERNAME\n        ]);\n    }\n    if (provisioning) {\n        args.push(`--${provisioning}`);\n    }\n\n    try {\n        await executeAsync(c, `fastlane ${args.join(' ')}`, { shell: true, stdio: 'inherit', silent: true });\n        logSuccess(`Succesfully updated provisioning profile for ${appId}:${scheme}:${id}`);\n        return true;\n    } catch (e) {\n        logWarning(e);\n        return true;\n    }\n};\n"],"mappings":"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"}