{"version":3,"file":"runner.js","names":["keepRNVRunning","rnvStart","c","platform","port","runtime","hosted","program","logTask","Config","isWebHostEnabled","waitForWebpack","then","open","localhost","catch","logError","MACOS","WINDOWS","WEB","TIZEN","WEBOS","TIZEN_MOBILE","TIZEN_WATCH","configureIfRequired","runElectronDevServer","runWeb","startCmd","getSourceExts","join","reset","executeAsync","stdio","silent","runWeinre","rnvDebug","isPlatformSupported","isBuildSchemeSupported","rnvRun","_rnvRunWithPlatform","rnvPackage","_rnvPackageWithPlatform","rnvBuild","_rnvBuildWithPlatform","rnvExport","_rnvExportWithPlatform","rnvDeploy","_rnvDeployWithPlatform","rnvLog","ANDROID","ANDROID_TV","ANDROID_WEAR","IOS","TVOS","runAndroidLog","runAppleLog","logErrorPlatform","_configureHostedIfRequired","logDebug","paths","project","rnv","copyFolderContentsRecursiveSync","path","dir","appId","writeCleanFile","pattern","override","ip","address","_startBundlerIfRequired","bundleAssets","getConfigProp","isBundlerActive","isRunning","waitForBundler","confirmActiveBundler","waitForBundlerIfRequired","Promise","target","chalk","grey","shouldOpenBrowser","Analytics","captureEvent","type","checkSdk","KAIOS","FIREFOX_OS","FIREFOX_TV","only","cleanPlatformIfRequired","runXcodeProject","packageAndroid","runAndroid","runElectron","runTizen","runWebOS","runFirefoxProject","files","workspace","config","defaultTargets","packageBundleForXcode","configureGradleProject","exportWeb","exportXcodeProject","configureElectronProject","buildElectron","exportElectron","deployWeb","buildAndroid","archiveXcodeProject","buildWeb","buildFirefoxProject","buildTizenProject","buildWebOSProject"],"sources":["../../src/platformTools/runner.js"],"sourcesContent":["/* eslint-disable import/no-cycle */\n// @todo fix circular\nimport chalk from 'chalk';\nimport open from 'better-opn';\nimport ip from 'ip';\nimport path from 'path';\n\nimport {\n    isBuildSchemeSupported,\n    logErrorPlatform,\n    configureIfRequired,\n    cleanPlatformIfRequired,\n    writeCleanFile,\n    getConfigProp,\n    waitForWebpack,\n    getSourceExts,\n    confirmActiveBundler\n} from '../common';\nimport { isPlatformSupported } from './index';\nimport {\n    logTask,\n    logError,\n    logDebug\n} from '../systemTools/logger';\nimport {\n    IOS,\n    TVOS,\n    ANDROID,\n    WEB,\n    TIZEN,\n    WEBOS,\n    ANDROID_TV,\n    ANDROID_WEAR,\n    MACOS,\n    WINDOWS,\n    TIZEN_MOBILE,\n    TIZEN_WATCH,\n    KAIOS,\n    FIREFOX_OS,\n    FIREFOX_TV,\n} from '../constants';\nimport {\n    runXcodeProject,\n    exportXcodeProject,\n    archiveXcodeProject,\n    packageBundleForXcode,\n    runAppleLog\n} from './apple';\nimport { buildWeb, runWeb, deployWeb, exportWeb } from './web';\nimport { runTizen, buildTizenProject } from './tizen';\nimport { runWebOS, buildWebOSProject } from './webos';\nimport { runFirefoxProject, buildFirefoxProject } from './firefox';\nimport {\n    runElectron,\n    buildElectron, runElectronDevServer, configureElectronProject, exportElectron\n} from './electron';\nimport {\n    packageAndroid,\n    runAndroid,\n    configureGradleProject,\n    buildAndroid,\n    runAndroidLog\n} from './android';\nimport { copyFolderContentsRecursiveSync } from '../systemTools/fileutils';\nimport { executeAsync } from '../systemTools/exec';\nimport { isBundlerActive, waitForBundler } from './bundler';\nimport { checkSdk } from './sdkManager';\nimport Config from '../config';\nimport Analytics from '../systemTools/analytics';\nimport { isSystemWin } from '../utils';\n\nlet keepRNVRunning = false;\n\n// ##########################################\n// PUBLIC API\n// ##########################################\n\n\nexport const rnvStart = async (c) => {\n    const { platform } = c;\n    const { port } = c.runtime;\n    const { hosted } = c.program;\n\n    logTask(`rnvStart:${platform}:${port}:${hosted}:${Config.isWebHostEnabled}`);\n\n    if (Config.isWebHostEnabled && hosted) {\n        waitForWebpack(c, port)\n            .then(() => open(`http://${c.runtime.localhost}:${port}/`))\n            .catch(logError);\n    }\n\n    switch (platform) {\n        case MACOS:\n        case WINDOWS:\n            await configureIfRequired(c, platform);\n            return runElectronDevServer(c, platform, port);\n\n        case WEB:\n        case TIZEN:\n        case WEBOS:\n        case TIZEN_MOBILE:\n        case TIZEN_WATCH:\n            await configureIfRequired(c, platform);\n            return runWeb(c, platform, port);\n        default:\n            if (hosted) {\n                return logError('This platform does not support hosted mode', true);\n            }\n    }\n\n    let startCmd = `node ./node_modules/react-native/local-cli/cli.js start --sourceExts ${getSourceExts(c).join(',')} --port ${c.runtime.port} --config=metro.config.js`;\n    if (c.program.reset) {\n        startCmd += ' --reset-cache';\n    }\n\n    await executeAsync(c, startCmd, { stdio: 'inherit', silent: true });\n};\n\nconst runWeinre = c => executeAsync(c, 'npx weinre --boundHost -all-');\n\nexport const rnvDebug = async (c) => {\n    logTask(`rnvDebug:${c.platform}`);\n\n    await isPlatformSupported(c);\n    await isBuildSchemeSupported(c);\n    await runWeinre(c);\n};\n\n\nexport const rnvRun = async (c) => {\n    logTask(`rnvRun:${c.platform}`);\n\n    await isPlatformSupported(c);\n    await isBuildSchemeSupported(c);\n    await _rnvRunWithPlatform(c);\n};\n\nexport const rnvPackage = async (c) => {\n    logTask(`rnvPackage:${c.platform}`);\n\n    await isPlatformSupported(c);\n    await isBuildSchemeSupported(c);\n    await _rnvPackageWithPlatform(c);\n};\n\nexport const rnvBuild = async (c) => {\n    logTask(`rnvBuild:${c.platform}`);\n\n    await isPlatformSupported(c);\n    await isBuildSchemeSupported(c);\n    await _rnvBuildWithPlatform(c);\n};\n\nexport const rnvExport = async (c) => {\n    logTask(`rnvExport:${c.platform}`);\n\n    await isPlatformSupported(c);\n    await isBuildSchemeSupported(c);\n    await _rnvExportWithPlatform(c);\n};\n\nexport const rnvDeploy = async (c) => {\n    logTask(`rnvDeploy:${c.platform}`);\n\n    await isPlatformSupported(c);\n    await isBuildSchemeSupported(c);\n    await _rnvDeployWithPlatform(c);\n};\n\nexport const rnvLog = async (c) => {\n    switch (c.platform) {\n        case ANDROID:\n        case ANDROID_TV:\n        case ANDROID_WEAR:\n            await runAndroidLog(c);\n            return;\n        case IOS:\n        case TVOS:\n            await runAppleLog(c);\n            return;\n    }\n\n    logErrorPlatform(c, c.platform);\n};\n\n// ##########################################\n// PRIVATE\n// ##########################################\n\n\nconst _configureHostedIfRequired = async (c) => {\n    logTask(`_configureHostedIfRequired:${c.platform}`);\n    if (Config.isWebHostEnabled) {\n        logDebug('Running hosted build');\n        const { project, rnv } = c.paths;\n        copyFolderContentsRecursiveSync(path.join(rnv.dir, 'supportFiles', 'appShell'), path.join(project.dir, 'platformBuilds', `${c.runtime.appId}_${c.platform}`, 'public'));\n        writeCleanFile(path.join(rnv.dir, 'supportFiles', 'appShell', 'index.html'), path.join(project.dir, 'platformBuilds', `${c.runtime.appId}_${c.platform}`, 'public', 'index.html'), [\n            { pattern: '{{DEV_SERVER}}', override: `http://${ip.address()}:${c.runtime.port}` },\n        ]);\n    }\n};\n\nconst _startBundlerIfRequired = async (c) => {\n    logTask(`_startBundlerIfRequired:${c.platform}`);\n    const bundleAssets = getConfigProp(c, c.platform, 'bundleAssets');\n    if (bundleAssets === true) return;\n\n    const isRunning = await isBundlerActive(c);\n    if (!isRunning) {\n        rnvStart(c);\n        keepRNVRunning = true;\n        await waitForBundler(c);\n    } else {\n        await confirmActiveBundler(c);\n    }\n};\n\nconst waitForBundlerIfRequired = async (c) => {\n    const bundleAssets = getConfigProp(c, c.platform, 'bundleAssets');\n    if (bundleAssets === true) return;\n    // return a new promise that does...nothing, just to keep RNV running while the bundler is running\n    if (keepRNVRunning) return new Promise(() => {});\n    return true;\n};\n\nconst _rnvRunWithPlatform = async (c) => {\n    logTask(`_rnvRunWithPlatform:${c.platform}`);\n    const { platform } = c;\n    const { port } = c.runtime;\n    const { target } = c.runtime;\n    const { hosted } = c.program;\n\n    logTask(`_rnvRunWithPlatform:${platform}:${port}:${target}:${hosted}`, chalk.grey);\n\n    if (Config.isWebHostEnabled && hosted) {\n        c.runtime.shouldOpenBrowser = true;\n        return rnvStart(c);\n    }\n\n    Analytics.captureEvent({\n        type: 'runProject',\n        platform,\n    });\n\n    await checkSdk(c);\n\n    switch (platform) {\n        case IOS:\n        case TVOS:\n            if (!c.program.only) {\n                await cleanPlatformIfRequired(c, platform);\n                await configureIfRequired(c, platform);\n                await _startBundlerIfRequired(c);\n                await runXcodeProject(c);\n                return waitForBundlerIfRequired(c);\n            }\n            return runXcodeProject(c);\n        case ANDROID:\n        case ANDROID_TV:\n        case ANDROID_WEAR:\n            if (!c.program.only) {\n                await cleanPlatformIfRequired(c, platform);\n                await configureIfRequired(c, platform);\n                await _startBundlerIfRequired(c);\n                if (getConfigProp(c, platform, 'bundleAssets') === true || platform === ANDROID_WEAR) {\n                    await packageAndroid(c, platform);\n                }\n                await runAndroid(c, platform, target);\n                return waitForBundlerIfRequired(c);\n            }\n            return runAndroid(c, platform, target);\n        case MACOS:\n        case WINDOWS:\n            if (!c.program.only) {\n                await cleanPlatformIfRequired(c, platform);\n                await configureIfRequired(c, platform);\n            }\n            return runElectron(c, platform, port);\n        case WEB:\n            if (!c.program.only) {\n                await cleanPlatformIfRequired(c, platform);\n                await configureIfRequired(c, platform);\n            }\n            c.runtime.shouldOpenBrowser = true;\n            return runWeb(c, platform, port, true);\n        case TIZEN:\n        case TIZEN_MOBILE:\n        case TIZEN_WATCH:\n            if (!c.program.only) {\n                await cleanPlatformIfRequired(c, platform);\n                await configureIfRequired(c, platform);\n                await _configureHostedIfRequired(c);\n            }\n            return runTizen(c, platform, target);\n        case WEBOS:\n            if (!c.program.only) {\n                await cleanPlatformIfRequired(c, platform);\n                await configureIfRequired(c, platform);\n                await _configureHostedIfRequired(c);\n            }\n            return runWebOS(c, platform, target);\n        case KAIOS:\n        case FIREFOX_OS:\n        case FIREFOX_TV:\n            if (!c.program.only) {\n                await cleanPlatformIfRequired(c, platform);\n                await configureIfRequired(c, platform);\n            }\n            return runFirefoxProject(c, platform);\n        default:\n            return logErrorPlatform(c, platform);\n    }\n};\n\nconst _rnvPackageWithPlatform = async (c) => {\n    logTask(`_rnvPackageWithPlatform:${c.platform}`);\n    const { platform } = c;\n\n    const target = c.program.target || c.files.workspace.config.defaultTargets[platform];\n\n    await checkSdk(c);\n\n    switch (platform) {\n        case IOS:\n        case TVOS:\n            if (!c.program.only) {\n                await cleanPlatformIfRequired(c, platform);\n                await configureIfRequired(c, platform);\n            }\n            return packageBundleForXcode(c, platform);\n        case ANDROID:\n        case ANDROID_TV:\n        case ANDROID_WEAR:\n\n            if (!c.program.only) {\n                await cleanPlatformIfRequired(c, platform);\n                await configureIfRequired(c, platform);\n                await configureGradleProject(c, platform);\n            }\n            return packageAndroid(c, platform, target, platform === ANDROID_WEAR);\n        default:\n            logErrorPlatform(c, platform);\n            return false;\n    }\n};\n\nconst _rnvExportWithPlatform = async (c) => {\n    logTask(`_rnvExportWithPlatform:${c.platform}`);\n    const { platform } = c;\n    switch (platform) {\n        case WEB:\n            if (!c.program.only) {\n                await rnvBuild(c);\n            }\n            return exportWeb(c, platform);\n        case IOS:\n        case TVOS:\n            if (!c.program.only) {\n                await _rnvBuildWithPlatform(c, platform);\n            }\n            return exportXcodeProject(c, platform);\n        case ANDROID:\n        case ANDROID_TV:\n        case ANDROID_WEAR:\n            return _rnvBuildWithPlatform(c);\n        case MACOS:\n        case WINDOWS:\n            if (!c.program.only) {\n                await cleanPlatformIfRequired(c, platform);\n                await configureIfRequired(c, platform);\n                await configureElectronProject(c, platform);\n                await buildElectron(c, platform);\n            }\n            return exportElectron(c, platform);\n        default:\n            logErrorPlatform(c, platform);\n    }\n};\n\nconst _rnvDeployWithPlatform = async (c) => {\n    logTask(`_rnvDeployWithPlatform:${c.platform}`);\n    const { platform } = c;\n\n    switch (platform) {\n        case WEB:\n            if (!c.program.only) {\n                await rnvBuild(c);\n            }\n            return deployWeb(c, platform);\n        case TVOS:\n        case IOS:\n            if (!c.program.only) {\n                return _rnvExportWithPlatform(c);\n            }\n            return;\n        // case WEBOS:\n        case TIZEN:\n            if (!c.program.only) {\n                await rnvBuild(c);\n            }\n            return;\n        case ANDROID_TV:\n        case ANDROID:\n            if (!c.program.only) {\n                return _rnvBuildWithPlatform(c);\n            }\n            return;\n        default:\n            logErrorPlatform(c, platform);\n    }\n};\n\nconst _rnvBuildWithPlatform = async (c) => {\n    logTask(`_rnvBuildWithPlatform:${c.platform}`);\n    const { platform } = c;\n\n    switch (platform) {\n        case ANDROID:\n        case ANDROID_TV:\n        case ANDROID_WEAR:\n            await cleanPlatformIfRequired(c, platform);\n            await configureIfRequired(c, platform);\n            await configureGradleProject(c, platform);\n            await packageAndroid(c, platform);\n            await buildAndroid(c, platform);\n            return;\n        case MACOS:\n        case WINDOWS:\n            await cleanPlatformIfRequired(c, platform);\n            await configureIfRequired(c, platform);\n            await configureElectronProject(c, platform);\n            await buildElectron(c, platform);\n            return;\n        case IOS:\n        case TVOS:\n            if (!c.program.only) {\n                await _rnvPackageWithPlatform(c, platform);\n            }\n            await archiveXcodeProject(c, platform);\n            return;\n        case WEB:\n            await cleanPlatformIfRequired(c, platform);\n            await configureIfRequired(c, platform);\n            await buildWeb(c, platform);\n            return;\n        case KAIOS:\n        case FIREFOX_OS:\n        case FIREFOX_TV:\n            await cleanPlatformIfRequired(c, platform);\n            await configureIfRequired(c, platform);\n            await buildFirefoxProject(c, platform);\n            return;\n        case TIZEN:\n        case TIZEN_MOBILE:\n        case TIZEN_WATCH:\n            await cleanPlatformIfRequired(c, platform);\n            await configureIfRequired(c, platform);\n            await buildTizenProject(c, platform);\n            return;\n        case WEBOS:\n            await cleanPlatformIfRequired(c, platform);\n            await configureIfRequired(c, platform);\n            await buildWebOSProject(c, platform);\n            return;\n        default:\n            logErrorPlatform(c, platform);\n    }\n};\n"],"mappings":"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"}