{"version":3,"sources":["../../../src/platformTools/web/index.js"],"names":["_generateWebpackConfigs","c","platform","appFolder","templateFolder","plugins","buildConfig","modulePaths","moduleAliasesString","moduleAliases","key","plugin","webpack","push","concat","projectPath","aKey","env","extendConfig","entryFile","title","analyzer","program","path","join","obj","extensions","extendJs","JSON","stringify","fs","writeFileSync","buildWeb","Promise","resolve","reject","debug","debugIp","debugVariables","ip","address","wbp","runtime","appId","then","chalk","white","catch","e","configureWebProject","configureCoreWebProject","_parseCssSync","stringsPath","pattern","override","hex","runWeb","port","devServerHost","localhost","WEB","isPortActive","_runWebBrowser","runWebDevServer","alreadyStarted","shouldOpenBrowser","wait","wpPublic","wpConfig","command","stdio","silent","deployWeb","exportWeb"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-cycle */\nimport path from 'path';\nimport fs from 'fs';\nimport chalk from 'chalk';\nimport open from 'better-opn';\nimport ip from 'ip';\nimport { executeAsync } from '../../systemTools/exec';\nimport {\n    getAppFolder,\n    getAppTemplateFolder,\n    checkPortInUse,\n    resolveNodeModulePath,\n    getConfigProp,\n    waitForWebpack,\n    writeCleanFile,\n    getBuildFilePath,\n    getAppTitle,\n    getSourceExts,\n    sanitizeColor,\n    confirmActiveBundler\n} from '../../common';\nimport { isPlatformActive } from '..';\nimport { logTask, logInfo, logDebug, logSuccess, logWarning } from '../../systemTools/logger';\nimport { WEB } from '../../constants';\nimport { copyBuildsFolder, copyAssetsFolder } from '../../projectTools/projectParser';\nimport { copyFileSync } from '../../systemTools/fileutils';\nimport { getMergedPlugin } from '../../pluginTools';\nimport { selectWebToolAndDeploy, selectWebToolAndExport } from '../../deployTools/webTools';\nimport { getValidLocalhost } from '../../utils';\n\nconst _generateWebpackConfigs = (c, platform) => {\n    const appFolder = getAppFolder(c, platform);\n    const templateFolder = getAppTemplateFolder(c, platform);\n\n    const { plugins } = c.buildConfig;\n    let modulePaths = [];\n    let moduleAliasesString = '';\n    const moduleAliases = {};\n\n    for (const key in plugins) {\n        const plugin = getMergedPlugin(c, key, plugins);\n        if (!plugin) {\n\n        } else if (plugin.webpack) {\n            if (plugin.webpack.modulePaths) {\n                if (plugin.webpack.modulePaths === true) {\n                    modulePaths.push(`node_modules/${key}`);\n                } else {\n                    modulePaths = modulePaths.concat(plugin.webpack.modulePaths);\n                }\n            }\n            if (plugin.webpack.moduleAliases) {\n                if (plugin.webpack.moduleAliases === true) {\n                    moduleAliasesString += `'${key}': {\n                  projectPath: 'node_modules/${key}'\n                },`;\n                    moduleAliases[key] = { projectPath: `node_modules/${key}` };\n                } else {\n                    for (const aKey in plugin.webpack.moduleAliases) {\n                        if (typeof plugin.webpack.moduleAliases[aKey] === 'string') {\n                            moduleAliasesString += `'${aKey}': '${plugin.webpack.moduleAliases[aKey]}',`;\n                            moduleAliases[key] = plugin.webpack.moduleAliases[aKey];\n                        } else {\n                            moduleAliasesString += `'${aKey}': {projectPath: '${plugin.webpack.moduleAliases[aKey].projectPath}'},`;\n                            if (plugin.webpack.moduleAliases[aKey].projectPath) {\n                                moduleAliases[key] = { projectPath: plugin.webpack.moduleAliases[aKey].projectPath };\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    const env = getConfigProp(c, platform, 'environment');\n    const extendConfig = getConfigProp(c, platform, 'webpackConfig', {});\n    const entryFile = getConfigProp(c, platform, 'entryFile', 'index.web');\n    const title = getAppTitle(c, platform);\n    const analyzer = getConfigProp(c, platform, 'analyzer') || c.program.analyzer;\n\n    copyFileSync(\n        path.join(templateFolder, '_privateConfig', env === 'production' ? 'webpack.config.js' : 'webpack.config.dev.js'),\n        path.join(appFolder, 'webpack.config.js')\n    );\n\n    const obj = {\n        modulePaths,\n        moduleAliases,\n        analyzer,\n        entryFile,\n        title,\n        extensions: getSourceExts(c),\n        ...extendConfig\n    };\n\n    const extendJs = `\n    module.exports = ${JSON.stringify(obj, null, 2)}`;\n\n    fs.writeFileSync(path.join(appFolder, 'webpack.extend.js'), extendJs);\n};\n\nconst buildWeb = (c, platform) => new Promise((resolve, reject) => {\n    const { debug, debugIp } = c.program;\n    logTask(`buildWeb:${platform}`);\n\n    const appFolder = getAppFolder(c, platform);\n\n    let debugVariables = '';\n\n    if (debug) {\n        logInfo(`Starting a remote debugger build with ip ${debugIp || ip.address()}. If this IP is not correct, you can always override it with --debugIp`);\n        debugVariables += `DEBUG=true DEBUG_IP=${debugIp || ip.address()}`;\n    }\n\n    const wbp = resolveNodeModulePath(c, 'webpack/bin/webpack.js');\n\n    executeAsync(c, `npx cross-env PLATFORM=${platform} NODE_ENV=production ${debugVariables} node ${wbp} -p --config ./platformBuilds/${c.runtime.appId}_${platform}/webpack.config.js`)\n        .then(() => {\n            logSuccess(`Your Build is located in ${chalk.white(path.join(appFolder, 'public'))} .`);\n            resolve();\n        })\n        .catch(e => reject(e));\n});\n\nconst configureWebProject = async (c, platform) => {\n    logTask(`configureWebProject:${platform}`);\n\n    if (!isPlatformActive(c, platform)) return;\n\n    await copyAssetsFolder(c, platform);\n\n    await configureCoreWebProject(c, platform);\n\n    return copyBuildsFolder(c, platform);\n};\n\nexport const configureCoreWebProject = async (c, platform) => {\n    _generateWebpackConfigs(c, platform);\n    _parseCssSync(c, platform);\n};\n\nconst _parseCssSync = (c, platform) => {\n    const appFolder = getAppFolder(c, platform);\n    const stringsPath = 'public/app.css';\n    writeCleanFile(getBuildFilePath(c, platform, stringsPath), path.join(appFolder, stringsPath), [\n        { pattern: '{{PLUGIN_COLORS_BG}}', override: sanitizeColor(getConfigProp(c, platform, 'backgroundColor')).hex },\n    ]);\n};\n\nconst runWeb = async (c, platform, port) => {\n    logTask(`runWeb:${platform}:${port}`);\n\n    let devServerHost = c.runtime.localhost;\n\n    if (platform === WEB) {\n        const extendConfig = getConfigProp(c, c.platform, 'webpackConfig', {});\n        devServerHost = getValidLocalhost(extendConfig.devServerHost, c.runtime.localhost);\n    }\n\n    const isPortActive = await checkPortInUse(c, platform, port);\n\n    if (!isPortActive) {\n        logInfo(\n            `Looks like your ${chalk.white(platform)} devServerHost ${chalk.white(devServerHost)} at port ${chalk.white(\n                port\n            )} is not running. Starting it up for you...`\n        );\n        await _runWebBrowser(c, platform, devServerHost, port, false);\n        await runWebDevServer(c, platform, port);\n    } else {\n        await confirmActiveBundler(c);\n        await _runWebBrowser(c, platform, devServerHost, port, true);\n    }\n};\n\nconst _runWebBrowser = (c, platform, devServerHost, port, alreadyStarted) => new Promise((resolve) => {\n    logTask(`_runWebBrowser:${platform}:${devServerHost}:${port}:${c.runtime.shouldOpenBrowser}`);\n    if (!c.runtime.shouldOpenBrowser) return resolve();\n    const wait = waitForWebpack(c, port)\n        .then(() => {\n            open(`http://${devServerHost}:${port}/`);\n        })\n        .catch((e) => {\n            logWarning(e);\n        });\n    if (alreadyStarted) return wait; // if it's already started, return the promise so it rnv will wait, otherwise it will exit before opening the browser\n    return resolve();\n});\n\nconst runWebDevServer = (c, platform, port) => new Promise((resolve, reject) => {\n    logTask(`runWebDevServer:${platform}`);\n    const { debug, debugIp } = c.program;\n\n    const appFolder = getAppFolder(c, platform);\n    const wpPublic = path.join(appFolder, 'public');\n    const wpConfig = path.join(appFolder, 'webpack.config.js');\n\n    let debugVariables = '';\n\n    if (debug) {\n        logInfo(`Starting a remote debugger build with ip ${debugIp || ip.address()}. If this IP is not correct, you can always override it with --debugIp`);\n        debugVariables += `DEBUG=true DEBUG_IP=${debugIp || ip.address()}`;\n    }\n\n    const command = `npx cross-env PLATFORM=${platform} ${debugVariables} webpack-dev-server -d --devtool source-map --config ${wpConfig}  --inline --hot --colors --content-base ${wpPublic} --history-api-fallback --port ${port} --mode=development`;\n    executeAsync(c, command, { stdio: 'inherit', silent: true })\n        .then(() => {\n            logDebug('runWebDevServer: running');\n            resolve();\n        })\n        .catch((e) => {\n            logDebug(e);\n            resolve();\n        });\n});\n\nconst deployWeb = (c, platform) => {\n    logTask(`deployWeb:${platform}`);\n    return selectWebToolAndDeploy(c, platform);\n};\n\nconst exportWeb = (c, platform) => {\n    logTask(`exportWeb:${platform}`);\n    return selectWebToolAndExport(c, platform);\n};\n\nexport { buildWeb, runWeb, configureWebProject, deployWeb, exportWeb };\n"],"file":"index.js"}