{"version":3,"file":"bundler.js","names":["_isBundlerRunning","c","logTask","platform","axios","get","runtime","localhost","port","getConfigProp","data","includes","isBundlerActive","poll","fn","timeout","interval","endTime","Number","Date","spinner","ora","start","checkCondition","resolve","reject","result","succeed","setTimeout","fail","Promise","waitForBundler"],"sources":["../../src/platformTools/bundler.js"],"sourcesContent":["import axios from 'axios';\nimport ora from 'ora';\nimport { getConfigProp } from '../common';\nimport { logTask } from '../systemTools/logger';\n\nconst _isBundlerRunning = async (c) => {\n    logTask(`_isBundlerRunning:${c.platform}`);\n    try {\n        const { data } = await axios.get(`http://${c.runtime.localhost}:${c.runtime.port}/${getConfigProp(c, c.platform, 'entryFile')}.js`);\n        if (data.includes('import')) return true;\n        return false;\n    } catch (e) {\n        return false;\n    }\n};\n\nexport const isBundlerActive = async (c) => {\n    logTask(`isBundlerActive:${c.platform}`);\n    try {\n        await axios.get(`http://${c.runtime.localhost}:${c.runtime.port}`);\n        return true;\n    } catch (e) {\n        return false;\n    }\n};\n\nconst poll = (fn, timeout = 10000, interval = 1000) => {\n    const endTime = Number(new Date()) + timeout;\n\n    const spinner = ora('Waiting for bundler to finish...').start();\n    const checkCondition = async (resolve, reject) => {\n        try {\n            const result = await fn();\n            if (result) {\n                spinner.succeed();\n                resolve();\n            } else if (Number(new Date()) < endTime) {\n                setTimeout(checkCondition, interval, resolve, reject);\n            } else {\n                spinner.fail('Can\\'t connect to bundler. Try restarting it.');\n                reject('Can\\'t connect to bundler. Try restarting it.');\n            }\n        } catch (e) {\n            spinner.fail('Can\\'t connect to bundler. Try restarting it.');\n            reject(e);\n        }\n    };\n\n    return new Promise(checkCondition);\n};\n\nexport const waitForBundler = async c => poll(() => _isBundlerRunning(c));\n"],"mappings":"iRAAA;AACA;AACA;AACA;;AAEA,GAAMA,kBAAiB,CAAG,QAApBA,kBAAiB,CAAUC,CAAC;AAC9B,GAAAC,eAAO,uBAAsBD,CAAC,CAACE,QAAQ,CAAG,CAAC;;AAEhBC,cAAK,CAACC,GAAG,WAAWJ,CAAC,CAACK,OAAO,CAACC,SAAS,KAAIN,CAAC,CAACK,OAAO,CAACE,IAAI,KAAI,GAAAC,qBAAa,EAACR,CAAC,CAAEA,CAAC,CAACE,QAAQ,CAAE,WAAW,CAAC,OAAM,wCAA3HO,IAAI,kBAAJA,IAAI;AACRA,IAAI,CAACC,QAAQ,CAAC,QAAQ,CAAC,yDAAS,IAAI;AACjC,KAAK;;AAEL,KAAK,2EAEnB;;;;AAEM,GAAMC,gBAAe,CAAG,QAAlBA,gBAAe,CAAUX,CAAC;AACnC,GAAAC,eAAO,qBAAoBD,CAAC,CAACE,QAAQ,CAAG,CAAC;;AAE/BC,cAAK,CAACC,GAAG,WAAWJ,CAAC,CAACK,OAAO,CAACC,SAAS,KAAIN,CAAC,CAACK,OAAO,CAACE,IAAI,CAAG;AAC3D,IAAI;;AAEJ,KAAK,2EAEnB,CAAC;;;;AAEF,GAAMK,KAAI,CAAG,QAAPA,KAAI,CAAIC,EAAE,CAAuC,IAArCC,QAAO,2DAAG,KAAK,IAAEC,SAAQ,2DAAG,IAAI;AAC9C,GAAMC,QAAO,CAAGC,MAAM,CAAC,GAAIC,KAAI,EAAE,CAAC,CAAGJ,OAAO;;AAE5C,GAAMK,QAAO,CAAG,GAAAC,YAAG,EAAC,kCAAkC,CAAC,CAACC,KAAK,EAAE;AAC/D,GAAMC,eAAc,CAAG,QAAjBA,eAAc,CAAUC,OAAO,CAAEC,MAAM;;AAEhBX,EAAE,EAAE,SAAnBY,MAAM;AACZ,GAAIA,MAAM,CAAE;AACRN,OAAO,CAACO,OAAO,EAAE;AACjBH,OAAO,EAAE;AACb,CAAC,IAAM,IAAIN,MAAM,CAAC,GAAIC,KAAI,EAAE,CAAC,CAAGF,OAAO,CAAE;AACrCW,UAAU,CAACL,cAAc,CAAEP,QAAQ,CAAEQ,OAAO,CAAEC,MAAM,CAAC;AACzD,CAAC,IAAM;AACHL,OAAO,CAACS,IAAI,CAAC,+CAA+C,CAAC;AAC7DJ,MAAM,CAAC,+CAA+C,CAAC;AAC3D,CAAC;;AAEDL,OAAO,CAACS,IAAI,CAAC,+CAA+C,CAAC;AAC7DJ,MAAM,cAAG,CAAC,yEAEjB;;;;AAED,MAAO,IAAIK,QAAO,CAACP,cAAc,CAAC;AACtC,CAAC;;AAEM,GAAMQ,eAAc,CAAG,QAAjBA,eAAc,CAAS9B,CAAC,8JAAIY,IAAI,CAAC,iBAAMb,kBAAiB,CAACC,CAAC,CAAC,GAAC,wEAAC"}