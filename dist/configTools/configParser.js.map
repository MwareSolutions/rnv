{"version":3,"sources":["../../src/configTools/configParser.js"],"names":["base","path","resolve","homedir","require","readdirAsync","fs","readdir","IGNORE_FOLDERS","loadAppConfigIDfromDir","dir","appConfigsDir","chalk","grey","filePath","join","existsSync","renativeConf","JSON","parse","readFileSync","id","e","askUserAboutConfigs","c","basePath","program","ci","Error","inquirer","prompt","type","name","message","choices","value","Separator","choice","renameSync","fileContents","matchAppConfigID","appConfigID","appConfigsDirs","buildConfig","paths","project","i","folder","statSync","isDirectory","filter","appConfigDirContents","appConfigs","map","conf","ids","dirs","Promise","all","toLowerCase","includes","push","foundConfig","cfg","length","checkIsRenativeProject","reject","configExists","white","config","fixRenativeConfigsSync","rnCliConfig","rnv","projectTemplate","RN_CLI_CONFIG_NAME","babelConfig","RN_BABEL_CONFIG_NAME","_generateConfigPaths","pathObj","RENATIVE_CONFIG_NAME","configLocal","RENATIVE_CONFIG_LOCAL_NAME","configPrivate","RENATIVE_CONFIG_PRIVATE_NAME","versionCheck","runtime","isWrapper","versionCheckCompleted","rnvVersionRunner","files","package","version","rnvVersionProject","devDependencies","recCmd","actionNoUpdate","actionWithUpdate","actionUpgrade","warningMessage","red","chosenAction","skipPackageUpdate","loadFile","fileObj","key","toString","_findAndSwitchAppConfigDir","appId","forEach","v","altPath","_arrayMergeOverride","destinationArray","sourceArray","generateBuildConfig","mergeOrder","projectTemplates","pluginTemplates","platformTemplates","workspace","appConfig","configBase","cleanPaths","existsPaths","exists","configs","Object","keys","mergeFiles","mergeFolders","platformTemplate","projectConfig","buildsDir","meta","_meta","generated","Date","getTime","mergedConfigs","existsFiles","out","merge","arrayMerge","builds","_refs","Config","isRenativeProject","localMetroPath","platform","writeFileSync","_loadConfigFiles","extendDir","result","extendAppId","extend","fontDirs","generateRuntimeConfig","assetConfig","common","platforms","assets","generateLocalConfig","resetAppId","currentAppConfigId","_generatePlatformTemplatePaths","pt","platformTemplatesDirs","originalPath","platformTemplatesDir","SUPPORTED_PLATFORMS","_listAppConfigsFoldersSync","dirPath","configDirs","ignoreHiddenConfigs","readdirSync","appConfigDir","lstatSync","hidden","listAppConfigsFoldersSync","loadProjectTemplates","loadPluginTemplates","customPluginTemplates","k","val","npm","npmDep","dependencies","ptPath","startsWith","replace","nodeModulesDir","ptConfig","RENATIVE_CONFIG_PLUGINS_NAME","loadPlatformTemplates","_loadWorkspacesSync","configWorkspaces","workspaces","setAppConfig","appDir","fontsDir","workspaceAppConfigsDir","getRealPath","updateConfig","appConfigId","isPureRnv","command","subCommand","pageSize","logMessage","SAMPLE_APP_ID","parseRenativeConfigs","aid","defaultWorkspace","GLOBAL_RNV_DIR","projectName","configureRnvGlobal","oldGlobalConfigPath","appConfigsPath","defaultTargets","undefined","defaultConfig","newConfig","stringify","createRnvConfig","process","cmd","subCmd","cli","buildHooks","dist","home","plugins","global","template","platformDefaults","PLATFORMS","__dirname","RENATIVE_CONFIG_PLATFORMS_NAME","RENATIVE_CONFIG_TEMPLATES_NAME","GLOBAL_RNV_CONFIG","RENATIVE_CONFIG_WORKSPACES_NAME","index","srcDir","npmLinkPolyfill","pluginsDir","runtimeDir","RENATIVE_CONFIG_RUNTIME_NAME","RENATIVE_CONFIG_BUILD_NAME"],"mappings":"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","sourcesContent":["import path from 'path';\nimport fs from 'fs';\nimport chalk from 'chalk';\nimport merge from 'deepmerge';\nimport { promisify } from 'util';\nimport inquirer from 'inquirer';\nimport {\n    RENATIVE_CONFIG_NAME,\n    RENATIVE_CONFIG_PRIVATE_NAME,\n    RENATIVE_CONFIG_LOCAL_NAME,\n    RENATIVE_CONFIG_BUILD_NAME,\n    RENATIVE_CONFIG_RUNTIME_NAME,\n    RENATIVE_CONFIG_WORKSPACES_NAME,\n    RENATIVE_CONFIG_PLUGINS_NAME,\n    RENATIVE_CONFIG_TEMPLATES_NAME,\n    RENATIVE_CONFIG_PLATFORMS_NAME,\n    RN_CLI_CONFIG_NAME,\n    SAMPLE_APP_ID,\n    RN_BABEL_CONFIG_NAME,\n    PLATFORMS,\n    SUPPORTED_PLATFORMS\n} from '../constants';\n\nimport {\n    copyFolderContentsRecursiveSync,\n    copyFileSync, mkdirSync, writeFileSync, readObjectSync,\n    getRealPath, sanitizeDynamicRefs, sanitizeDynamicProps, mergeObjects\n} from '../systemTools/fileutils';\nimport { getSourceExtsAsString, getConfigProp } from '../common';\nimport { getWorkspaceDirPath } from '../projectTools/workspace';\nimport {\n    logError, logTask,\n    logWarning, logDebug, logInfo, getCurrentCommand\n} from '../systemTools/logger';\nimport {\n    copyRuntimeAssets, checkAndCreateProjectPackage, checkAndCreateProjectConfig,\n    checkAndCreateGitignore, copySharedPlatforms, upgradeProjectDependencies\n} from '../projectTools/projectParser';\nimport { inquirerPrompt } from '../systemTools/prompt';\nimport Config from '../config';\n\nconst base = path.resolve('.');\nconst homedir = require('os').homedir();\n\nconst readdirAsync = promisify(fs.readdir);\n\nconst IGNORE_FOLDERS = ['.git'];\n\n\nconst loadAppConfigIDfromDir = (dir, appConfigsDir) => {\n    logTask(`loadAppConfigIDfromDir:${dir}:${appConfigsDir}`, chalk.grey);\n    const filePath = path.join(appConfigsDir, dir, 'renative.json');\n    if (fs.existsSync(filePath)) {\n        try {\n            const renativeConf = JSON.parse(fs.readFileSync(filePath));\n            return { dir, id: renativeConf.id };\n        } catch (e) {\n            logError(`File ${filePath} is MALFORMED:\\n${e}`);\n        }\n    }\n    return { dir, id: null };\n};\n\nconst askUserAboutConfigs = async (c, dir, id, basePath) => {\n    logWarning(`AppConfig error - It seems you have a mismatch between appConfig folder name (${dir}) and the id defined in renative.json (${id}). They must match.`);\n    if (c.program.ci === true) throw new Error('You cannot continue if you set --ci flag. please fix above error first');\n    const { choice } = await inquirer.prompt({\n        type: 'list',\n        name: 'choice',\n        message: 'You must choose what you want to keep',\n        choices: [{\n            name: `Keep ID from renative.json (${id}) and rename the folder (${dir} -> ${id})`,\n            value: 'keepID'\n        }, {\n            name: `Keep folder name (${dir}) and rename the ID from renative.json (${id} -> ${dir})`,\n            value: 'keepFolder'\n        }, new inquirer.Separator(), {\n            name: 'I\\'ll do it manually',\n            value: 'manually'\n        }]\n    });\n\n    if (choice === 'manually') throw new Error('Please do the changes and rerun the command');\n\n    if (choice === 'keepID') {\n        fs.renameSync(path.join(basePath, dir), path.join(basePath, id));\n    }\n\n    if (choice === 'keepFolder') {\n        const filePath = path.join(basePath, dir, 'renative.json');\n        const fileContents = JSON.parse(fs.readFileSync(filePath));\n        fileContents.id = dir;\n\n        writeFileSync(filePath, fileContents);\n    }\n};\n\nconst matchAppConfigID = async (c, appConfigID) => {\n    logTask(`matchAppConfigID:${appConfigID}`, chalk.grey);\n\n    if (!appConfigID) return false;\n\n    const appConfigsDirs = c.buildConfig?.paths?.appConfigsDirs || [c.paths.project?.appConfigsDir];\n    for (let i = 0; i < appConfigsDirs.length; i++) {\n        const appConfigsDir = appConfigsDirs[i];\n\n        const appConfigDirContents = await (await readdirAsync(appConfigsDir)).filter(folder => fs.statSync(path.join(appConfigsDir, folder)).isDirectory());\n\n        const appConfigs = appConfigDirContents.map(dir => loadAppConfigIDfromDir(dir, appConfigsDir)).filter(conf => conf.id !== null);\n        // find duplicates\n        const ids = [];\n        const dirs = [];\n        await Promise.all(appConfigs.map(async (conf) => {\n            const id = conf.id.toLowerCase();\n            const dir = conf.dir.toLowerCase();\n            // find mismatches\n            if (id !== dir) await askUserAboutConfigs(c, conf.dir, conf.id, appConfigsDir);\n            if (ids.includes(id)) throw new Error(`AppConfig error - You have 2 duplicate app configs with ID ${id}. Keep in mind that ID is case insensitive. Please edit one of them in /appConfigs/<folder>/renative.json`);\n            ids.push(id);\n            if (dirs.includes(dir)) throw new Error(`AppConfig error - You have 2 duplicate app config folders named ${dir}. Keep in mind that folder names are case insensitive. Please rename one /appConfigs/<folder>`);\n            dirs.push(dir);\n        }));\n\n        const foundConfig = appConfigs.filter(cfg => cfg.id === appConfigID || cfg.id.toLowerCase() === appConfigID || cfg.dir === appConfigID || cfg.dir.toLowerCase() === appConfigID);\n        if (foundConfig.length) return foundConfig[0].id.toLowerCase();\n    }\n    return false;\n};\n\nexport const checkIsRenativeProject = c => new Promise((resolve, reject) => {\n    if (!c.paths.project.configExists) {\n        return reject(\n            `Looks like this directory is not ReNative project. Project config ${chalk.white(\n                c.paths.project.config,\n            )} is missing!. You can create new project with ${chalk.white('rnv new')}`,\n        );\n    }\n\n    return resolve();\n});\n\nexport const fixRenativeConfigsSync = async (c) => {\n    logTask('fixRenativeConfigsSync');\n\n    // Parse Project Config\n    // checkAndCreateProjectPackage(c, 'renative-app', 'ReNative App');\n\n    // Check gitignore\n    checkAndCreateGitignore(c);\n\n    // Check rn-cli-config\n    logTask('configureProject:check rn-cli', chalk.grey);\n    if (!fs.existsSync(c.paths.project.rnCliConfig)) {\n        logInfo(\n            `Looks like your rn-cli config file ${chalk.white(c.paths.project.rnCliConfig)} is missing! Let's create one for you.`,\n        );\n        copyFileSync(path.join(c.paths.rnv.projectTemplate.dir, RN_CLI_CONFIG_NAME), c.paths.project.rnCliConfig);\n    }\n\n    // Check babel-config\n    logTask('configureProject:check babel config', chalk.grey);\n    if (!fs.existsSync(c.paths.project.babelConfig)) {\n        logInfo(\n            `Looks like your babel config file ${chalk.white(c.paths.project.babelConfig)} is missing! Let's create one for you.`,\n        );\n        copyFileSync(path.join(c.paths.rnv.dir, RN_BABEL_CONFIG_NAME), c.paths.project.babelConfig);\n    }\n\n    return true;\n};\n\nconst _generateConfigPaths = (pathObj, dir) => {\n    pathObj.dir = dir;\n    pathObj.config = path.join(dir, RENATIVE_CONFIG_NAME);\n    pathObj.configLocal = path.join(dir, RENATIVE_CONFIG_LOCAL_NAME);\n    pathObj.configPrivate = path.join(dir, RENATIVE_CONFIG_PRIVATE_NAME);\n};\n\nexport const versionCheck = async (c) => {\n    logTask('versionCheck');\n\n    if (c.runtime.isWrapper || c.runtime.versionCheckCompleted) {\n        return true;\n    }\n    c.runtime.rnvVersionRunner = c.files.rnv?.package?.version;\n    c.runtime.rnvVersionProject = c.files.project?.package?.devDependencies?.rnv;\n    logTask(`versionCheck:rnvRunner:${c.runtime.rnvVersionRunner},rnvProject:${c.runtime.rnvVersionProject}`, chalk.grey);\n    if (c.runtime.rnvVersionRunner && c.runtime.rnvVersionProject) {\n        if (c.runtime.rnvVersionRunner !== c.runtime.rnvVersionProject) {\n            const recCmd = chalk.white(`$ npx ${getCurrentCommand(true)}`);\n            const actionNoUpdate = 'Continue and skip updating package.json';\n            const actionWithUpdate = 'Continue and update package.json';\n            const actionUpgrade = `Upgrade project to ${c.runtime.rnvVersionRunner}`;\n\n            const { chosenAction } = await inquirerPrompt({\n                message: 'What to do next?',\n                type: 'list',\n                name: 'chosenAction',\n                choices: [\n                    actionNoUpdate,\n                    actionWithUpdate,\n                    actionUpgrade\n                ],\n                warningMessage: `You are running $rnv v${chalk.red(c.runtime.rnvVersionRunner)} against project built with rnv v${chalk.red(c.runtime.rnvVersionProject)}. This might result in unexpected behaviour! It is recommended that you run your rnv command with npx prefix: ${recCmd} . or manually update your devDependencies.rnv version in your package.json.`\n            });\n\n            c.runtime.versionCheckCompleted = true;\n\n            c.runtime.skipPackageUpdate = chosenAction === actionNoUpdate;\n\n            if (chosenAction === actionUpgrade) {\n                upgradeProjectDependencies(c, c.runtime.rnvVersionRunner);\n            }\n        }\n    }\n    return true;\n};\n\nexport const loadFile = (fileObj, pathObj, key) => {\n    if (!fs.existsSync(pathObj[key])) {\n        pathObj[`${key}Exists`] = false;\n        logDebug(`WARNING: loadFile: Path ${pathObj[key]} does not exists!`);\n        return false;\n    }\n    pathObj[`${key}Exists`] = true;\n    try {\n        fileObj[key] = JSON.parse(fs.readFileSync(pathObj[key]).toString());\n        pathObj[`${key}Exists`] = true;\n        return true;\n    } catch (e) {\n        logError(`loadFile: ${pathObj[key]} :: ${e}`, true); // crash if there's an error in the config file\n        return false;\n    }\n};\n\n\nconst _findAndSwitchAppConfigDir = (c, appId) => {\n    logTask(`_findAndSwitchAppConfigDir:${appId}`);\n\n    c.paths.project.appConfigsDir = getRealPath(c, c.buildConfig.paths?.appConfigsDir, 'appConfigsDir', c.paths.project.appConfigsDir);\n    const appConfigsDirs = c.buildConfig.paths?.appConfigsDirs;\n    if (appConfigsDirs && appConfigsDirs.forEach && appId) {\n        appConfigsDirs.forEach((v) => {\n            const altPath = path.join(v, appId);\n            if (fs.existsSync(altPath)) {\n                logInfo(`Found config in following location: ${altPath}. Will use it`);\n                c.paths.project.appConfigsDir = v;\n            }\n        });\n    }\n};\n\nconst _arrayMergeOverride = (destinationArray, sourceArray) => sourceArray;\n\nexport const generateBuildConfig = (c) => {\n    logTask('generateBuildConfig');\n\n    const mergeOrder = [\n        c.paths.rnv.projectTemplates.config,\n        c.paths.rnv.pluginTemplates.config,\n        c.files.rnv.platformTemplates.config,\n        c.paths.workspace.config,\n        c.paths.workspace.configPrivate,\n        c.paths.workspace.configLocal,\n        c.paths.workspace.project.config,\n        c.paths.workspace.project.configPrivate,\n        c.paths.workspace.project.configLocal,\n        c.paths.workspace.appConfig.configBase,\n        c.paths.workspace.appConfig.config,\n        c.paths.workspace.appConfig.configPrivate,\n        c.paths.workspace.appConfig.configLocal,\n        c.paths.project.config,\n        c.paths.project.configPrivate,\n        c.paths.project.configLocal,\n        c.paths.appConfig.configBase,\n        c.paths.appConfig.config,\n        c.paths.appConfig.configPrivate,\n        c.paths.appConfig.configLocal\n    ];\n    const cleanPaths = mergeOrder.filter(v => v);\n    const existsPaths = cleanPaths.filter((v) => {\n        const exists = fs.existsSync(v);\n        if (exists) {\n            logDebug(`Merged: ${v}`);\n            // console.log(chalk.green(v));\n        } else {\n            // console.log(chalk.red(v));\n        }\n        return exists;\n    });\n\n    let pluginTemplates = [];\n    if (c.files.rnv.pluginTemplates.configs) {\n        pluginTemplates = Object.keys(c.files.rnv.pluginTemplates.configs).map(v => c.files.rnv.pluginTemplates.configs[v]);\n    }\n\n    const mergeFiles = [\n        c.files.rnv.projectTemplates.config,\n        ...pluginTemplates,\n        c.files.workspace.config,\n        c.files.workspace.configPrivate,\n        c.files.workspace.configLocal,\n        c.files.workspace.project.config,\n        c.files.workspace.project.configPrivate,\n        c.files.workspace.project.configLocal,\n        c.files.workspace.appConfig.configBase,\n        c.files.workspace.appConfig.config,\n        c.files.workspace.appConfig.configPrivate,\n        c.files.workspace.appConfig.configLocal,\n        c.files.project.config,\n        c.files.project.configPrivate,\n        c.files.project.configLocal,\n        c.files.appConfig.configBase,\n        c.files.appConfig.config,\n        c.files.appConfig.configPrivate,\n        c.files.appConfig.configLocal\n    ];\n\n    const mergeFolders = [\n        // platform templates\n        c.paths.rnv.platformTemplate.dir,\n        c.paths.project.projectConfig.buildsDir,\n        c.paths.workspace.project.projectConfig.buildsDir,\n        // ...c.paths.project.appConfigs.dirs,\n        c.paths.appConfig.buildsDir,\n        c.paths.workspace.appConfig.buildsDir\n        // PROJECT PLUGINS?\n        // PROJECT ASSETS?\n        // PROJECT FONTS?\n        // APP CONFIG PLUGINS?\n        // APP CONFIG ASSETS?\n        // APP CONFIG FONTS?\n    ];\n\n    logDebug('mergeFolders:', mergeFolders);\n\n    const meta = [{\n        _meta: {\n            generated: (new Date()).getTime(),\n            mergedConfigs: existsPaths\n        }\n    }];\n    const existsFiles = mergeFiles.filter(v => v);\n\n    logTask(`generateBuildConfig:${mergeOrder.length}:${cleanPaths.length}:${existsPaths.length}:${existsFiles.length}`, chalk.grey);\n\n    let out = merge.all([...meta, ...existsFiles], { arrayMerge: _arrayMergeOverride });\n    out = merge({}, out);\n\n    logDebug(`generateBuildConfig: will sanitize file at: ${c.paths.project.builds.config}`);\n    c.buildConfig = sanitizeDynamicRefs(c, out);\n    c.buildConfig = sanitizeDynamicProps(c.buildConfig, c.buildConfig._refs);\n\n    if (fs.existsSync(c.paths.project.builds.dir)) {\n        writeFileSync(c.paths.project.builds.config, c.buildConfig);\n    }\n    if (Config.isRenativeProject) {\n        const localMetroPath = path.join(c.paths.project.dir, 'metro.config.local.js');\n\n        if (c.platform) {\n            fs.writeFileSync(localMetroPath, `module.exports = ${getSourceExtsAsString(c)}`);\n        } else if (!fs.existsSync(localMetroPath)) {\n            fs.writeFileSync(localMetroPath, 'module.exports = []');\n        }\n    }\n};\n\nconst _loadConfigFiles = (c, fileObj, pathObj, extendDir) => {\n    let result = false;\n    let extendAppId;\n    if (loadFile(fileObj, pathObj, 'config')) {\n        extendAppId = fileObj.config.extend || extendAppId;\n        result = true;\n    }\n\n    if (loadFile(fileObj, pathObj, 'configLocal')) {\n        extendAppId = fileObj.configLocal.extend || extendAppId;\n        result = true;\n    }\n\n    if (loadFile(fileObj, pathObj, 'configPrivate')) {\n        extendAppId = fileObj.configPrivate.extend || extendAppId;\n        result = true;\n    }\n\n    if (extendAppId && extendDir) {\n        pathObj.configBase = path.join(extendDir, extendAppId, 'renative.json');\n        pathObj.dirs = [\n            path.join(extendDir, extendAppId),\n            pathObj.dir\n        ];\n        pathObj.fontDirs = [\n            path.join(pathObj.dirs[0], 'fonts'),\n            path.join(pathObj.dirs[1], 'fonts')\n        ];\n        loadFile(fileObj, pathObj, 'configBase');\n    }\n\n\n    generateBuildConfig(c);\n    return result;\n};\n\nexport const generateRuntimeConfig = async (c) => {\n    logTask('generateRuntimeConfig');\n    // c.assetConfig = {\n    //     common: c.buildConfig.common,\n    //     runtime: c.buildConfig.runtime\n    // };\n    c.assetConfig = mergeObjects(c, c.assetConfig, c.buildConfig.runtime || {});\n    c.assetConfig = mergeObjects(c, c.assetConfig, c.buildConfig.common?.runtime || {});\n    c.assetConfig = mergeObjects(c, c.assetConfig, c.buildConfig.platforms?.[c.platform]?.runtime || {});\n    c.assetConfig = mergeObjects(c, c.assetConfig, getConfigProp(c, c.platform, 'runtime') || {});\n\n    if (fs.existsSync(c.paths.project.assets.dir)) {\n        writeFileSync(c.paths.project.assets.config, c.assetConfig);\n    }\n    return true;\n};\n\nexport const generateLocalConfig = (c, resetAppId) => {\n    logTask(`generateLocalConfig:${resetAppId}:${c.paths.project.configLocal}`);\n    const configLocal = c.files.project.configLocal || {};\n    configLocal._meta = configLocal._meta || {};\n    if (resetAppId) {\n        delete configLocal._meta.currentAppConfigId;\n    } else {\n        configLocal._meta.currentAppConfigId = c.runtime.appId;\n    }\n    c.files.project.configLocal = configLocal;\n    writeFileSync(c.paths.project.configLocal, configLocal);\n};\n\nconst _generatePlatformTemplatePaths = (c) => {\n    const pt = c.buildConfig.platformTemplatesDirs || {};\n    const originalPath = c.buildConfig.platformTemplatesDir || '$RNV_HOME/platformTemplates';\n    const result = {};\n    SUPPORTED_PLATFORMS.forEach((v) => {\n        if (!pt[v]) {\n            result[v] = getRealPath(\n                c,\n                originalPath,\n                'platformTemplatesDir',\n                originalPath,\n            );\n        } else {\n            result[v] = getRealPath(\n                c,\n                pt[v],\n                'platformTemplatesDir',\n                originalPath,\n            );\n        }\n    });\n    return result;\n};\n\nconst _listAppConfigsFoldersSync = (dirPath, configDirs, ignoreHiddenConfigs) => {\n    logTask(`_listAppConfigsFoldersSync:${dirPath}`, chalk.grey);\n    if (!fs.existsSync(dirPath)) return;\n    fs.readdirSync(dirPath).forEach((dir) => {\n        const appConfigDir = path.join(dirPath, dir);\n        if (!IGNORE_FOLDERS.includes(dir) && fs.lstatSync(appConfigDir).isDirectory()) {\n            if (ignoreHiddenConfigs) {\n                const appConfig = path.join(appConfigDir, RENATIVE_CONFIG_NAME);\n                if (fs.existsSync(appConfig)) {\n                    try {\n                        const config = readObjectSync(appConfig);\n                        if (config?.hidden !== true) {\n                            configDirs.push(dir);\n                        }\n                    } catch (e) {\n                        logWarning(`_listAppConfigsFoldersSync: ${e}`);\n                    }\n                }\n            } else {\n                configDirs.push(dir);\n            }\n        }\n    });\n};\n\nexport const listAppConfigsFoldersSync = (c, ignoreHiddenConfigs) => {\n    logTask(`listAppConfigsFoldersSync:${ignoreHiddenConfigs}`);\n    const configDirs = [];\n    const appConfigsDirs = c.buildConfig?.paths?.appConfigsDirs;\n    if (appConfigsDirs && appConfigsDirs.forEach) {\n        appConfigsDirs.forEach((v) => {\n            _listAppConfigsFoldersSync(v, configDirs, ignoreHiddenConfigs);\n        });\n    } else {\n        _listAppConfigsFoldersSync(c.paths.project.appConfigsDir, configDirs, ignoreHiddenConfigs);\n    }\n\n    return configDirs;\n};\n\nexport const loadProjectTemplates = (c) => {\n    c.files.rnv.projectTemplates.config = readObjectSync(c.paths.rnv.projectTemplates.config);\n};\n\nexport const loadPluginTemplates = (c) => {\n    c.files.rnv.pluginTemplates.config = readObjectSync(c.paths.rnv.pluginTemplates.config);\n\n    c.files.rnv.pluginTemplates.configs = {\n        rnv: c.files.rnv.pluginTemplates.config\n    };\n\n    c.paths.rnv.pluginTemplates.dirs = [c.paths.rnv.pluginTemplates.dir];\n\n    const customPluginTemplates = c.files.project.config?.paths?.pluginTemplates;\n\n    if (customPluginTemplates) {\n        Object.keys(customPluginTemplates).forEach((k) => {\n            const val = customPluginTemplates[k];\n            if (val.npm) {\n                const npmDep = c.files.project.package?.dependencies[val.npm] || c.files.project.package?.devDependencies[val.npm];\n\n                if (npmDep) {\n                    let ptPath;\n                    if (npmDep.startsWith('file:')) {\n                        ptPath = path.join(c.paths.project.dir, npmDep.replace('file:', ''), val.path || '');\n                    } else {\n                        ptPath = path.join(c.paths.project.nodeModulesDir, val.npm, val.path || '');\n                    }\n\n                    const ptConfig = path.join(ptPath, RENATIVE_CONFIG_PLUGINS_NAME);\n                    c.paths.rnv.pluginTemplates.dirs.push(ptPath);\n                    if (fs.existsSync(ptConfig)) {\n                        c.files.rnv.pluginTemplates.configs[k] = readObjectSync(ptConfig);\n                    }\n                }\n            }\n        });\n    }\n};\n\nexport const loadPlatformTemplates = (c) => {\n    c.files.rnv.platformTemplates.config = readObjectSync(c.paths.rnv.platformTemplates.config);\n};\n\nconst _loadWorkspacesSync = (c) => {\n    // CHECK WORKSPACES\n    if (fs.existsSync(c.paths.rnv.configWorkspaces)) {\n        logDebug(`${c.paths.rnv.configWorkspaces} file exists!`);\n        c.files.rnv.configWorkspaces = readObjectSync(c.paths.rnv.configWorkspaces);\n\n        if (!c.files.rnv.configWorkspaces) c.files.rnv.configWorkspaces = {};\n\n        if (!c.files.rnv.configWorkspaces?.workspaces) c.files.rnv.configWorkspaces.workspaces = {};\n        if (Object.keys(c.files.rnv.configWorkspaces.workspaces).length === 0) {\n            logWarning(`No workspace found in ${c.paths.rnv.configWorkspaces}. Creating default rnv one for you`);\n            c.files.rnv.configWorkspaces.workspaces = {\n                rnv: {\n                    path: c.paths.workspace.dir\n                }\n            };\n            writeFileSync(c.paths.rnv.configWorkspaces, c.files.rnv.configWorkspaces);\n        }\n    } else {\n        logWarning(`Cannot find ${c.paths.rnv.configWorkspaces}. creating one..`);\n        c.files.rnv.configWorkspaces = {\n            workspaces: {\n                rnv: {\n                    path: c.paths.workspace.dir\n                }\n            }\n        };\n        writeFileSync(c.paths.rnv.configWorkspaces, c.files.rnv.configWorkspaces);\n    }\n};\n\nexport const setAppConfig = async (c, appId) => {\n    logTask(`setAppConfig:${appId}`);\n\n    if (!appId || appId === true || appId === true) return;\n\n    c.runtime.appId = appId;\n    c.runtime.appDir = path.join(c.paths.project.builds.dir, `${c.runtime.appId}_${c.platform}`);\n\n    _findAndSwitchAppConfigDir(c, appId);\n\n    _generateConfigPaths(c.paths.appConfig, path.join(c.paths.project.appConfigsDir, appId));\n    c.paths.appConfig.fontsDir = path.join(c.paths.appConfig.dir, 'fonts');\n    _loadConfigFiles(c, c.files.appConfig, c.paths.appConfig, c.paths.project.appConfigsDir);\n\n    const workspaceAppConfigsDir = getRealPath(c, c.buildConfig.workspaceAppConfigsDir);\n    c.paths.workspace.project.appConfigsDir = workspaceAppConfigsDir || path.join(c.paths.workspace.project.dir, 'appConfigs');\n\n    _generateConfigPaths(c.paths.workspace.appConfig, path.join(c.paths.workspace.project.appConfigsDir, appId));\n\n    _loadConfigFiles(c, c.files.workspace.appConfig, c.paths.workspace.appConfig, c.paths.workspace.project.appConfigsDir);\n    generateBuildConfig(c);\n    generateLocalConfig(c);\n\n    // LOAD WORKSPACE /RENATIVE.*.JSON\n    _generateConfigPaths(c.paths.workspace, getRealPath(c, await getWorkspaceDirPath(c)));\n    _loadConfigFiles(c, c.files.workspace, c.paths.workspace);\n};\n\nexport const updateConfig = async (c, appConfigId) => {\n    logTask(`updateConfig:${appConfigId}`);\n\n    await setAppConfig(c, appConfigId);\n\n    const isPureRnv = (!c.command && !c.subCommand);\n\n    if (!fs.existsSync(c.paths.appConfig.dir) || isPureRnv) {\n        const configDirs = listAppConfigsFoldersSync(c, true);\n\n        if (!appConfigId) {\n            logWarning(\n                'It seems you don\\'t have any appConfig active',\n            );\n        } else if (appConfigId !== true && appConfigId !== true && !isPureRnv) {\n            logWarning(\n                `It seems you don't have appConfig named ${chalk.white(appConfigId)} present in your config folder: ${chalk.white(\n                    c.paths.project.appConfigsDir,\n                )} !`,\n            );\n        }\n\n        if (configDirs.length) {\n            if (configDirs.length === 1) {\n                // we have only one, skip the question\n                logInfo(`Found only one app config available. Will use ${chalk.white(configDirs[0])}`);\n                await setAppConfig(c, configDirs[0]);\n                return true;\n            }\n\n            const { conf } = await inquirerPrompt({\n                name: 'conf',\n                type: 'list',\n                message: 'Which one would you like to pick?',\n                choices: configDirs,\n                pageSize: 50,\n                logMessage: 'ReNative found multiple existing appConfigs'\n            });\n\n            if (conf) {\n                await setAppConfig(c, conf);\n                return true;\n            }\n        }\n        const { conf } = await inquirerPrompt({\n            name: 'conf',\n            type: 'confirm',\n            message: `Do you want ReNative to create new sample appConfig (${chalk.white(\n                appConfigId,\n            )}) for you?`,\n            warningMessage: 'No app configs found for this project'\n        });\n\n        if (conf) {\n            await setAppConfig(c, SAMPLE_APP_ID);\n            copyFolderContentsRecursiveSync(\n                path.join(c.paths.rnv.dir, 'appConfigs', SAMPLE_APP_ID),\n                path.join(c.paths.appConfig.dir),\n            );\n            return true;\n        }\n    }\n    return true;\n};\n\nexport const parseRenativeConfigs = async (c) => {\n    logTask('parseRenativeConfigs');\n    // LOAD ./package.json\n    loadFile(c.files.project, c.paths.project, 'package');\n\n    // LOAD ./RENATIVE.*.JSON\n    _loadConfigFiles(c, c.files.project, c.paths.project);\n    if (c.program.appConfigID !== true) {\n        const aid = await matchAppConfigID(c, c.program.appConfigID?.toLowerCase?.());\n        c.runtime.appId = aid || c.runtime.appId || c.files.project?.configLocal?._meta?.currentAppConfigId;\n    }\n    c.paths.project.builds.config = path.join(c.paths.project.builds.dir, `${c.runtime.appId}_${c.platform}.json`);\n\n    // LOAD ./platformBuilds/RENATIVE.BUILLD.JSON\n    loadFile(c.files.project.builds, c.paths.project.builds, 'config');\n\n    // LOAD WORKSPACE /RENATIVE.*.JSON\n    _generateConfigPaths(c.paths.workspace, getRealPath(c, await getWorkspaceDirPath(c)));\n    _loadConfigFiles(c, c.files.workspace, c.paths.workspace);\n\n    // LOAD DEFAULT WORKSPACE\n    _generateConfigPaths(c.paths.defaultWorkspace, c.paths.GLOBAL_RNV_DIR);\n    _loadConfigFiles(c, c.files.defaultWorkspace, c.paths.defaultWorkspace);\n\n    // LOAD PROJECT TEMPLATES\n    loadProjectTemplates(c);\n\n    // LOAD PLUGIN TEMPLATES\n    loadPluginTemplates(c);\n\n    // LOAD PLATFORM TEMPLATES\n    loadPlatformTemplates(c);\n\n    if (!c.files.project.config) return;\n\n    // LOAD WORKSPACE /[PROJECT_NAME]/RENATIVE.*.JSON\n    _generateConfigPaths(c.paths.workspace.project, path.join(c.paths.workspace.dir, c.files.project.config.projectName));\n    _loadConfigFiles(c, c.files.workspace.project, c.paths.workspace.project);\n\n    c.paths.workspace.project.projectConfig.dir = path.join(c.paths.workspace.project.dir, 'projectConfig');\n\n    _findAndSwitchAppConfigDir(c);\n\n    c.runtime.isWrapper = c.buildConfig.isWrapper;\n    c.paths.project.platformTemplatesDirs = _generatePlatformTemplatePaths(c);\n};\n\nexport const configureRnvGlobal = async (c) => {\n    logTask('configureRnvGlobal');\n\n\n    // Check globalConfig Dir\n    if (fs.existsSync(c.paths.workspace.dir)) {\n        logDebug(`${c.paths.workspace.dir} folder exists!`);\n    } else {\n        logInfo(`${c.paths.workspace.dir} folder missing! Creating one for you...`);\n        mkdirSync(c.paths.workspace.dir);\n    }\n\n    // Check globalConfig\n    if (fs.existsSync(c.paths.workspace.config)) {\n        logDebug(`${c.paths.workspace.dir}/${RENATIVE_CONFIG_NAME} file exists!`);\n    } else {\n        const oldGlobalConfigPath = path.join(c.paths.workspace.dir, 'config.json');\n        if (fs.existsSync(oldGlobalConfigPath)) {\n            logWarning('Found old version of your config. will copy it to new renative.json config');\n            copyFileSync(oldGlobalConfigPath, c.paths.workspace.config);\n        } else {\n            logInfo(`${c.paths.workspace.dir}/${RENATIVE_CONFIG_NAME} file missing! Creating one for you...`);\n            copyFileSync(path.join(c.paths.rnv.dir, 'supportFiles', 'global-config-template.json'), c.paths.workspace.config);\n        }\n    }\n\n    if (fs.existsSync(c.paths.workspace.config)) {\n        c.files.workspace.config = JSON.parse(fs.readFileSync(c.paths.workspace.config).toString());\n\n        if (c.files.workspace.config?.appConfigsPath) {\n            if (!fs.existsSync(c.files.workspace.config.appConfigsPath)) {\n                logWarning(\n                    `Looks like your custom global appConfig is pointing to ${chalk.white(\n                        c.files.workspace.config.appConfigsPath,\n                    )} which doesn't exist! Make sure you create one in that location`,\n                );\n            } else {\n                logInfo(\n                    `Found custom appConfing location pointing to ${chalk.white(\n                        c.files.workspace.config.appConfigsPath,\n                    )}. ReNativewill now swith to that location!`,\n                );\n                c.paths.project.appConfigsDir = c.files.workspace.config.appConfigsPath;\n            }\n        }\n\n        // Check config sanity\n        if (c.files.workspace.config.defaultTargets === undefined) {\n            logWarning(\n                `Looks like you\\'re missing defaultTargets in your config ${chalk.white(c.paths.workspace.config)}. Let's add them!`,\n            );\n            const defaultConfig = JSON.parse(\n                fs.readFileSync(path.join(c.paths.rnv.dir, 'supportFiles', 'global-config-template.json')).toString(),\n            );\n            const newConfig = { ...c.files.workspace.config, defaultTargets: defaultConfig.defaultTargets };\n            fs.writeFileSync(c.paths.workspace.config, JSON.stringify(newConfig, null, 2));\n        }\n    }\n\n    return true;\n};\n\nexport const createRnvConfig = (program, process, cmd, subCmd) => {\n    const c = {\n        cli: {},\n        runtime: {\n\n        },\n        paths: {\n            buildHooks: {\n                dist: {}\n            },\n            home: {},\n            rnv: {\n                pluginTemplates: {},\n                platformTemplates: {},\n                projectTemplates: {},\n                platformTemplate: {},\n                plugins: {},\n                projectTemplate: {}\n            },\n            global: {\n\n            },\n            project: {\n                projectConfig: {},\n                builds: {},\n                assets: {},\n                platformTemplates: {}\n            },\n            template: {},\n            appConfig: {},\n            workspace: {\n                project: {\n                    projectConfig: {},\n                    builds: {},\n                    assets: {},\n                    platformTemplates: {}\n                },\n                appConfig: {}\n            },\n            defaultWorkspace: {\n                project: {\n                    projectConfig: {},\n                    builds: {},\n                    assets: {},\n                    platformTemplates: {}\n                },\n                appConfig: {}\n            }\n\n        },\n        files: {\n            rnv: {\n                pluginTemplates: {},\n                platformTemplates: {},\n                projectTemplates: {},\n                plugins: {},\n                projectTemplate: {}\n            },\n            project: {\n                projectConfig: {},\n                builds: {},\n                assets: {},\n                platformTemplates: {}\n            },\n            appConfig: {},\n            workspace: {\n                project: {\n                    projectConfig: {},\n                    builds: {},\n                    assets: {},\n                    platformTemplates: {}\n                },\n                appConfig: {}\n            },\n            defaultWorkspace: {\n                project: {\n                    projectConfig: {},\n                    builds: {},\n                    assets: {},\n                    platformTemplates: {}\n                },\n                appConfig: {}\n            }\n        }\n    };\n\n    c.program = program;\n    c.process = process;\n    c.command = cmd;\n    c.subCommand = subCmd;\n    c.platformDefaults = PLATFORMS;\n\n    c.paths.rnv.dir = path.join(__dirname, '../..');\n    c.paths.rnv.nodeModulesDir = path.join(c.paths.rnv.dir, 'node_modules');\n    c.paths.rnv.platformTemplates.dir = path.join(c.paths.rnv.dir, 'platformTemplates');\n    c.paths.rnv.pluginTemplates.dir = path.join(c.paths.rnv.dir, 'pluginTemplates');\n    c.paths.rnv.platformTemplates.config = path.join(c.paths.rnv.platformTemplates.dir, RENATIVE_CONFIG_PLATFORMS_NAME);\n    c.paths.rnv.pluginTemplates.config = path.join(c.paths.rnv.pluginTemplates.dir, RENATIVE_CONFIG_PLUGINS_NAME);\n    c.paths.rnv.projectTemplates.dir = path.join(c.paths.rnv.dir, 'projectTemplates');\n    c.paths.rnv.projectTemplates.config = path.join(c.paths.rnv.projectTemplates.dir, RENATIVE_CONFIG_TEMPLATES_NAME);\n    c.paths.rnv.package = path.join(c.paths.rnv.dir, 'package.json');\n\n    c.paths.rnv.projectTemplate.dir = path.join(c.paths.rnv.dir, 'projectTemplate');\n    c.files.rnv.package = JSON.parse(fs.readFileSync(c.paths.rnv.package).toString());\n\n    c.platform = c.program.platform;\n    c.paths.home.dir = homedir;\n    c.paths.GLOBAL_RNV_DIR = path.join(c.paths.home.dir, '.rnv');\n    c.paths.GLOBAL_RNV_CONFIG = path.join(c.paths.GLOBAL_RNV_DIR, RENATIVE_CONFIG_NAME);\n    c.paths.rnv.configWorkspaces = path.join(c.paths.GLOBAL_RNV_DIR, RENATIVE_CONFIG_WORKSPACES_NAME);\n\n    if (!fs.existsSync(c.paths.GLOBAL_RNV_DIR)) mkdirSync(c.paths.GLOBAL_RNV_DIR);\n\n    _generateConfigPaths(c.paths.project, base);\n\n    c.paths.buildHooks.dir = path.join(c.paths.project.dir, 'buildHooks/src');\n    c.paths.buildHooks.dist.dir = path.join(c.paths.project.dir, 'buildHooks/dist');\n    c.paths.buildHooks.index = path.join(c.paths.buildHooks.dir, 'index.js');\n    c.paths.buildHooks.dist.index = path.join(c.paths.buildHooks.dist.dir, 'index.js');\n    c.paths.project.nodeModulesDir = path.join(c.paths.project.dir, 'node_modules');\n    c.paths.project.srcDir = path.join(c.paths.project.dir, 'src');\n    c.paths.project.appConfigsDir = path.join(c.paths.project.dir, 'appConfigs');\n    c.paths.project.package = path.join(c.paths.project.dir, 'package.json');\n    c.paths.project.rnCliConfig = path.join(c.paths.project.dir, RN_CLI_CONFIG_NAME);\n    c.paths.project.babelConfig = path.join(c.paths.project.dir, RN_BABEL_CONFIG_NAME);\n    c.paths.project.npmLinkPolyfill = path.join(c.paths.project.dir, 'npm_link_polyfill.json');\n    c.paths.project.projectConfig.dir = path.join(c.paths.project.dir, 'appConfigs', 'base');\n    c.paths.project.projectConfig.pluginsDir = path.join(c.paths.project.projectConfig.dir, 'plugins');\n    c.paths.project.projectConfig.fontsDir = path.join(c.paths.project.projectConfig.dir, 'fonts');\n    c.paths.project.assets.dir = path.join(c.paths.project.dir, 'platformAssets');\n    c.paths.project.assets.runtimeDir = path.join(c.paths.project.assets.dir, 'runtime');\n    c.paths.project.assets.config = path.join(c.paths.project.assets.dir, RENATIVE_CONFIG_RUNTIME_NAME);\n    c.paths.project.builds.dir = path.join(c.paths.project.dir, 'platformBuilds');\n    c.paths.project.builds.config = path.join(c.paths.project.builds.dir, RENATIVE_CONFIG_BUILD_NAME);\n\n    _generateConfigPaths(c.paths.workspace, c.paths.GLOBAL_RNV_DIR);\n\n    // LOAD WORKSPACES\n    try {\n        _loadWorkspacesSync(c);\n    } catch (e) {\n        logError(e);\n    }\n\n    return c;\n};\n"],"file":"configParser.js"}