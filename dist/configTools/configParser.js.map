{"version":3,"file":"configParser.js","names":["base","path","resolve","homedir","require","readdirAsync","promisify","fs","readdir","IGNORE_FOLDERS","loadAppConfigIDfromDir","dir","appConfigsDir","logTask","chalk","grey","filePath","join","existsSync","renativeConf","JSON","parse","readFileSync","id","e","logError","askUserAboutConfigs","c","basePath","logWarning","program","ci","Error","inquirer","prompt","type","name","message","choices","value","Separator","choice","renameSync","fileContents","writeFileSync","matchAppConfigID","appConfigID","appConfigsDirs","buildConfig","paths","project","i","filter","folder","statSync","isDirectory","appConfigDirContents","appConfigs","map","conf","ids","dirs","Promise","all","toLowerCase","includes","push","foundConfig","cfg","length","checkIsRenativeProject","reject","configExists","white","config","fixRenativeConfigsSync","checkAndCreateGitignore","rnCliConfig","logInfo","copyFileSync","rnv","projectTemplate","RN_CLI_CONFIG_NAME","babelConfig","RN_BABEL_CONFIG_NAME","_generateConfigPaths","pathObj","RENATIVE_CONFIG_NAME","configLocal","RENATIVE_CONFIG_LOCAL_NAME","configPrivate","RENATIVE_CONFIG_PRIVATE_NAME","versionCheck","runtime","isWrapper","versionCheckCompleted","rnvVersionRunner","files","package","version","rnvVersionProject","devDependencies","recCmd","getCurrentCommand","actionNoUpdate","actionWithUpdate","actionUpgrade","inquirerPrompt","warningMessage","red","chosenAction","skipPackageUpdate","upgradeProjectDependencies","loadFile","fileObj","key","logDebug","toString","_findAndSwitchAppConfigDir","appId","getRealPath","forEach","v","altPath","_arrayMergeOverride","destinationArray","sourceArray","generateBuildConfig","mergeOrder","projectTemplates","pluginTemplates","platformTemplates","workspace","appConfig","configBase","cleanPaths","existsPaths","exists","configs","Object","keys","mergeFiles","mergeFolders","platformTemplate","projectConfig","buildsDir","meta","_meta","generated","Date","getTime","mergedConfigs","existsFiles","out","merge","arrayMerge","builds","sanitizeDynamicRefs","sanitizeDynamicProps","_refs","Config","isRenativeProject","localMetroPath","platform","getSourceExtsAsString","_loadConfigFiles","extendDir","result","extendAppId","extend","fontDirs","generateRuntimeConfig","assetConfig","mergeObjects","common","platforms","getConfigProp","assets","generateLocalConfig","resetAppId","currentAppConfigId","_generatePlatformTemplatePaths","pt","platformTemplatesDirs","originalPath","platformTemplatesDir","SUPPORTED_PLATFORMS","_listAppConfigsFoldersSync","dirPath","configDirs","ignoreHiddenConfigs","readdirSync","appConfigDir","lstatSync","readObjectSync","hidden","listAppConfigsFoldersSync","loadProjectTemplates","loadPluginTemplates","customPluginTemplates","k","val","npm","npmDep","dependencies","ptPath","startsWith","replace","nodeModulesDir","ptConfig","RENATIVE_CONFIG_PLUGINS_NAME","loadPlatformTemplates","_loadWorkspacesSync","configWorkspaces","workspaces","setAppConfig","appDir","fontsDir","workspaceAppConfigsDir","getWorkspaceDirPath","updateConfig","appConfigId","isPureRnv","command","subCommand","pageSize","logMessage","SAMPLE_APP_ID","copyFolderContentsRecursiveSync","parseRenativeConfigs","aid","defaultWorkspace","GLOBAL_RNV_DIR","projectName","configureRnvGlobal","mkdirSync","oldGlobalConfigPath","appConfigsPath","defaultTargets","undefined","defaultConfig","newConfig","stringify","createRnvConfig","process","cmd","subCmd","cli","buildHooks","dist","home","plugins","global","template","platformDefaults","PLATFORMS","__dirname","RENATIVE_CONFIG_PLATFORMS_NAME","RENATIVE_CONFIG_TEMPLATES_NAME","GLOBAL_RNV_CONFIG","RENATIVE_CONFIG_WORKSPACES_NAME","index","srcDir","npmLinkPolyfill","pluginsDir","runtimeDir","RENATIVE_CONFIG_RUNTIME_NAME","RENATIVE_CONFIG_BUILD_NAME"],"sources":["../../src/configTools/configParser.js"],"sourcesContent":["import path from 'path';\nimport fs from 'fs';\nimport chalk from 'chalk';\nimport merge from 'deepmerge';\nimport { promisify } from 'util';\nimport inquirer from 'inquirer';\nimport {\n    RENATIVE_CONFIG_NAME,\n    RENATIVE_CONFIG_PRIVATE_NAME,\n    RENATIVE_CONFIG_LOCAL_NAME,\n    RENATIVE_CONFIG_BUILD_NAME,\n    RENATIVE_CONFIG_RUNTIME_NAME,\n    RENATIVE_CONFIG_WORKSPACES_NAME,\n    RENATIVE_CONFIG_PLUGINS_NAME,\n    RENATIVE_CONFIG_TEMPLATES_NAME,\n    RENATIVE_CONFIG_PLATFORMS_NAME,\n    RN_CLI_CONFIG_NAME,\n    SAMPLE_APP_ID,\n    RN_BABEL_CONFIG_NAME,\n    PLATFORMS,\n    SUPPORTED_PLATFORMS\n} from '../constants';\n\nimport {\n    copyFolderContentsRecursiveSync,\n    copyFileSync, mkdirSync, writeFileSync, readObjectSync,\n    getRealPath, sanitizeDynamicRefs, sanitizeDynamicProps, mergeObjects\n} from '../systemTools/fileutils';\nimport { getSourceExtsAsString, getConfigProp } from '../common';\nimport { getWorkspaceDirPath } from '../projectTools/workspace';\nimport {\n    logError, logTask,\n    logWarning, logDebug, logInfo, getCurrentCommand\n} from '../systemTools/logger';\nimport {\n    copyRuntimeAssets, checkAndCreateProjectPackage, checkAndCreateProjectConfig,\n    checkAndCreateGitignore, copySharedPlatforms, upgradeProjectDependencies\n} from '../projectTools/projectParser';\nimport { inquirerPrompt } from '../systemTools/prompt';\nimport Config from '../config';\n\nconst base = path.resolve('.');\nconst homedir = require('os').homedir();\n\nconst readdirAsync = promisify(fs.readdir);\n\nconst IGNORE_FOLDERS = ['.git'];\n\n\nconst loadAppConfigIDfromDir = (dir, appConfigsDir) => {\n    logTask(`loadAppConfigIDfromDir:${dir}:${appConfigsDir}`, chalk.grey);\n    const filePath = path.join(appConfigsDir, dir, 'renative.json');\n    if (fs.existsSync(filePath)) {\n        try {\n            const renativeConf = JSON.parse(fs.readFileSync(filePath));\n            return { dir, id: renativeConf.id };\n        } catch (e) {\n            logError(`File ${filePath} is MALFORMED:\\n${e}`);\n        }\n    }\n    return { dir, id: null };\n};\n\nconst askUserAboutConfigs = async (c, dir, id, basePath) => {\n    logWarning(`AppConfig error - It seems you have a mismatch between appConfig folder name (${dir}) and the id defined in renative.json (${id}). They must match.`);\n    if (c.program.ci === true) throw new Error('You cannot continue if you set --ci flag. please fix above error first');\n    const { choice } = await inquirer.prompt({\n        type: 'list',\n        name: 'choice',\n        message: 'You must choose what you want to keep',\n        choices: [{\n            name: `Keep ID from renative.json (${id}) and rename the folder (${dir} -> ${id})`,\n            value: 'keepID'\n        }, {\n            name: `Keep folder name (${dir}) and rename the ID from renative.json (${id} -> ${dir})`,\n            value: 'keepFolder'\n        }, new inquirer.Separator(), {\n            name: 'I\\'ll do it manually',\n            value: 'manually'\n        }]\n    });\n\n    if (choice === 'manually') throw new Error('Please do the changes and rerun the command');\n\n    if (choice === 'keepID') {\n        fs.renameSync(path.join(basePath, dir), path.join(basePath, id));\n    }\n\n    if (choice === 'keepFolder') {\n        const filePath = path.join(basePath, dir, 'renative.json');\n        const fileContents = JSON.parse(fs.readFileSync(filePath));\n        fileContents.id = dir;\n\n        writeFileSync(filePath, fileContents);\n    }\n};\n\nconst matchAppConfigID = async (c, appConfigID) => {\n    logTask(`matchAppConfigID:${appConfigID}`, chalk.grey);\n\n    if (!appConfigID) return false;\n\n    const appConfigsDirs = c.buildConfig?.paths?.appConfigsDirs || [c.paths.project?.appConfigsDir];\n    for (let i = 0; i < appConfigsDirs.length; i++) {\n        const appConfigsDir = appConfigsDirs[i];\n\n        const appConfigDirContents = await (await readdirAsync(appConfigsDir)).filter(folder => fs.statSync(path.join(appConfigsDir, folder)).isDirectory());\n\n        const appConfigs = appConfigDirContents.map(dir => loadAppConfigIDfromDir(dir, appConfigsDir)).filter(conf => conf.id !== null);\n        // find duplicates\n        const ids = [];\n        const dirs = [];\n        await Promise.all(appConfigs.map(async (conf) => {\n            const id = conf.id.toLowerCase();\n            const dir = conf.dir.toLowerCase();\n            // find mismatches\n            if (id !== dir) await askUserAboutConfigs(c, conf.dir, conf.id, appConfigsDir);\n            if (ids.includes(id)) throw new Error(`AppConfig error - You have 2 duplicate app configs with ID ${id}. Keep in mind that ID is case insensitive. Please edit one of them in /appConfigs/<folder>/renative.json`);\n            ids.push(id);\n            if (dirs.includes(dir)) throw new Error(`AppConfig error - You have 2 duplicate app config folders named ${dir}. Keep in mind that folder names are case insensitive. Please rename one /appConfigs/<folder>`);\n            dirs.push(dir);\n        }));\n\n        const foundConfig = appConfigs.filter(cfg => cfg.id === appConfigID || cfg.id.toLowerCase() === appConfigID || cfg.dir === appConfigID || cfg.dir.toLowerCase() === appConfigID);\n        if (foundConfig.length) return foundConfig[0].id.toLowerCase();\n    }\n    return false;\n};\n\nexport const checkIsRenativeProject = c => new Promise((resolve, reject) => {\n    if (!c.paths.project.configExists) {\n        return reject(\n            `Looks like this directory is not ReNative project. Project config ${chalk.white(\n                c.paths.project.config,\n            )} is missing!. You can create new project with ${chalk.white('rnv new')}`,\n        );\n    }\n\n    return resolve();\n});\n\nexport const fixRenativeConfigsSync = async (c) => {\n    logTask('fixRenativeConfigsSync');\n\n    // Parse Project Config\n    // checkAndCreateProjectPackage(c, 'renative-app', 'ReNative App');\n\n    // Check gitignore\n    checkAndCreateGitignore(c);\n\n    // Check rn-cli-config\n    logTask('configureProject:check rn-cli', chalk.grey);\n    if (!fs.existsSync(c.paths.project.rnCliConfig)) {\n        logInfo(\n            `Looks like your rn-cli config file ${chalk.white(c.paths.project.rnCliConfig)} is missing! Let's create one for you.`,\n        );\n        copyFileSync(path.join(c.paths.rnv.projectTemplate.dir, RN_CLI_CONFIG_NAME), c.paths.project.rnCliConfig);\n    }\n\n    // Check babel-config\n    logTask('configureProject:check babel config', chalk.grey);\n    if (!fs.existsSync(c.paths.project.babelConfig)) {\n        logInfo(\n            `Looks like your babel config file ${chalk.white(c.paths.project.babelConfig)} is missing! Let's create one for you.`,\n        );\n        copyFileSync(path.join(c.paths.rnv.dir, RN_BABEL_CONFIG_NAME), c.paths.project.babelConfig);\n    }\n\n    return true;\n};\n\nconst _generateConfigPaths = (pathObj, dir) => {\n    pathObj.dir = dir;\n    pathObj.config = path.join(dir, RENATIVE_CONFIG_NAME);\n    pathObj.configLocal = path.join(dir, RENATIVE_CONFIG_LOCAL_NAME);\n    pathObj.configPrivate = path.join(dir, RENATIVE_CONFIG_PRIVATE_NAME);\n};\n\nexport const versionCheck = async (c) => {\n    logTask('versionCheck');\n\n    if (c.runtime.isWrapper || c.runtime.versionCheckCompleted) {\n        return true;\n    }\n    c.runtime.rnvVersionRunner = c.files.rnv?.package?.version;\n    c.runtime.rnvVersionProject = c.files.project?.package?.devDependencies?.rnv;\n    logTask(`versionCheck:rnvRunner:${c.runtime.rnvVersionRunner},rnvProject:${c.runtime.rnvVersionProject}`, chalk.grey);\n    if (c.runtime.rnvVersionRunner && c.runtime.rnvVersionProject) {\n        if (c.runtime.rnvVersionRunner !== c.runtime.rnvVersionProject) {\n            const recCmd = chalk.white(`$ npx ${getCurrentCommand(true)}`);\n            const actionNoUpdate = 'Continue and skip updating package.json';\n            const actionWithUpdate = 'Continue and update package.json';\n            const actionUpgrade = `Upgrade project to ${c.runtime.rnvVersionRunner}`;\n\n            const { chosenAction } = await inquirerPrompt({\n                message: 'What to do next?',\n                type: 'list',\n                name: 'chosenAction',\n                choices: [\n                    actionNoUpdate,\n                    actionWithUpdate,\n                    actionUpgrade\n                ],\n                warningMessage: `You are running $rnv v${chalk.red(c.runtime.rnvVersionRunner)} against project built with rnv v${chalk.red(c.runtime.rnvVersionProject)}. This might result in unexpected behaviour! It is recommended that you run your rnv command with npx prefix: ${recCmd} . or manually update your devDependencies.rnv version in your package.json.`\n            });\n\n            c.runtime.versionCheckCompleted = true;\n\n            c.runtime.skipPackageUpdate = chosenAction === actionNoUpdate;\n\n            if (chosenAction === actionUpgrade) {\n                upgradeProjectDependencies(c, c.runtime.rnvVersionRunner);\n            }\n        }\n    }\n    return true;\n};\n\nexport const loadFile = (fileObj, pathObj, key) => {\n    if (!fs.existsSync(pathObj[key])) {\n        pathObj[`${key}Exists`] = false;\n        logDebug(`WARNING: loadFile: Path ${pathObj[key]} does not exists!`);\n        return false;\n    }\n    pathObj[`${key}Exists`] = true;\n    try {\n        fileObj[key] = JSON.parse(fs.readFileSync(pathObj[key]).toString());\n        pathObj[`${key}Exists`] = true;\n        return true;\n    } catch (e) {\n        logError(`loadFile: ${pathObj[key]} :: ${e}`, true); // crash if there's an error in the config file\n        return false;\n    }\n};\n\n\nconst _findAndSwitchAppConfigDir = (c, appId) => {\n    logTask(`_findAndSwitchAppConfigDir:${appId}`);\n\n    c.paths.project.appConfigsDir = getRealPath(c, c.buildConfig.paths?.appConfigsDir, 'appConfigsDir', c.paths.project.appConfigsDir);\n    const appConfigsDirs = c.buildConfig.paths?.appConfigsDirs;\n    if (appConfigsDirs && appConfigsDirs.forEach && appId) {\n        appConfigsDirs.forEach((v) => {\n            const altPath = path.join(v, appId);\n            if (fs.existsSync(altPath)) {\n                logInfo(`Found config in following location: ${altPath}. Will use it`);\n                c.paths.project.appConfigsDir = v;\n            }\n        });\n    }\n};\n\nconst _arrayMergeOverride = (destinationArray, sourceArray) => sourceArray;\n\nexport const generateBuildConfig = (c) => {\n    logTask('generateBuildConfig');\n\n    const mergeOrder = [\n        c.paths.rnv.projectTemplates.config,\n        c.paths.rnv.pluginTemplates.config,\n        c.files.rnv.platformTemplates.config,\n        c.paths.workspace.config,\n        c.paths.workspace.configPrivate,\n        c.paths.workspace.configLocal,\n        c.paths.workspace.project.config,\n        c.paths.workspace.project.configPrivate,\n        c.paths.workspace.project.configLocal,\n        c.paths.workspace.appConfig.configBase,\n        c.paths.workspace.appConfig.config,\n        c.paths.workspace.appConfig.configPrivate,\n        c.paths.workspace.appConfig.configLocal,\n        c.paths.project.config,\n        c.paths.project.configPrivate,\n        c.paths.project.configLocal,\n        c.paths.appConfig.configBase,\n        c.paths.appConfig.config,\n        c.paths.appConfig.configPrivate,\n        c.paths.appConfig.configLocal\n    ];\n    const cleanPaths = mergeOrder.filter(v => v);\n    const existsPaths = cleanPaths.filter((v) => {\n        const exists = fs.existsSync(v);\n        if (exists) {\n            logDebug(`Merged: ${v}`);\n            // console.log(chalk.green(v));\n        } else {\n            // console.log(chalk.red(v));\n        }\n        return exists;\n    });\n\n    let pluginTemplates = [];\n    if (c.files.rnv.pluginTemplates.configs) {\n        pluginTemplates = Object.keys(c.files.rnv.pluginTemplates.configs).map(v => c.files.rnv.pluginTemplates.configs[v]);\n    }\n\n    const mergeFiles = [\n        c.files.rnv.projectTemplates.config,\n        ...pluginTemplates,\n        c.files.workspace.config,\n        c.files.workspace.configPrivate,\n        c.files.workspace.configLocal,\n        c.files.workspace.project.config,\n        c.files.workspace.project.configPrivate,\n        c.files.workspace.project.configLocal,\n        c.files.workspace.appConfig.configBase,\n        c.files.workspace.appConfig.config,\n        c.files.workspace.appConfig.configPrivate,\n        c.files.workspace.appConfig.configLocal,\n        c.files.project.config,\n        c.files.project.configPrivate,\n        c.files.project.configLocal,\n        c.files.appConfig.configBase,\n        c.files.appConfig.config,\n        c.files.appConfig.configPrivate,\n        c.files.appConfig.configLocal\n    ];\n\n    const mergeFolders = [\n        // platform templates\n        c.paths.rnv.platformTemplate.dir,\n        c.paths.project.projectConfig.buildsDir,\n        c.paths.workspace.project.projectConfig.buildsDir,\n        // ...c.paths.project.appConfigs.dirs,\n        c.paths.appConfig.buildsDir,\n        c.paths.workspace.appConfig.buildsDir\n        // PROJECT PLUGINS?\n        // PROJECT ASSETS?\n        // PROJECT FONTS?\n        // APP CONFIG PLUGINS?\n        // APP CONFIG ASSETS?\n        // APP CONFIG FONTS?\n    ];\n\n    logDebug('mergeFolders:', mergeFolders);\n\n    const meta = [{\n        _meta: {\n            generated: (new Date()).getTime(),\n            mergedConfigs: existsPaths\n        }\n    }];\n    const existsFiles = mergeFiles.filter(v => v);\n\n    logTask(`generateBuildConfig:${mergeOrder.length}:${cleanPaths.length}:${existsPaths.length}:${existsFiles.length}`, chalk.grey);\n\n    let out = merge.all([...meta, ...existsFiles], { arrayMerge: _arrayMergeOverride });\n    out = merge({}, out);\n\n    logDebug(`generateBuildConfig: will sanitize file at: ${c.paths.project.builds.config}`);\n    c.buildConfig = sanitizeDynamicRefs(c, out);\n    c.buildConfig = sanitizeDynamicProps(c.buildConfig, c.buildConfig._refs);\n\n    if (fs.existsSync(c.paths.project.builds.dir)) {\n        writeFileSync(c.paths.project.builds.config, c.buildConfig);\n    }\n    if (Config.isRenativeProject) {\n        const localMetroPath = path.join(c.paths.project.dir, 'metro.config.local.js');\n\n        if (c.platform) {\n            fs.writeFileSync(localMetroPath, `module.exports = ${getSourceExtsAsString(c)}`);\n        } else if (!fs.existsSync(localMetroPath)) {\n            fs.writeFileSync(localMetroPath, 'module.exports = []');\n        }\n    }\n};\n\nconst _loadConfigFiles = (c, fileObj, pathObj, extendDir) => {\n    let result = false;\n    let extendAppId;\n    if (loadFile(fileObj, pathObj, 'config')) {\n        extendAppId = fileObj.config.extend || extendAppId;\n        result = true;\n    }\n\n    if (loadFile(fileObj, pathObj, 'configLocal')) {\n        extendAppId = fileObj.configLocal.extend || extendAppId;\n        result = true;\n    }\n\n    if (loadFile(fileObj, pathObj, 'configPrivate')) {\n        extendAppId = fileObj.configPrivate.extend || extendAppId;\n        result = true;\n    }\n\n    if (extendAppId && extendDir) {\n        pathObj.configBase = path.join(extendDir, extendAppId, 'renative.json');\n        pathObj.dirs = [\n            path.join(extendDir, extendAppId),\n            pathObj.dir\n        ];\n        pathObj.fontDirs = [\n            path.join(pathObj.dirs[0], 'fonts'),\n            path.join(pathObj.dirs[1], 'fonts')\n        ];\n        loadFile(fileObj, pathObj, 'configBase');\n    }\n\n\n    generateBuildConfig(c);\n    return result;\n};\n\nexport const generateRuntimeConfig = async (c) => {\n    logTask('generateRuntimeConfig');\n    // c.assetConfig = {\n    //     common: c.buildConfig.common,\n    //     runtime: c.buildConfig.runtime\n    // };\n    c.assetConfig = mergeObjects(c, c.assetConfig, c.buildConfig.runtime || {});\n    c.assetConfig = mergeObjects(c, c.assetConfig, c.buildConfig.common?.runtime || {});\n    c.assetConfig = mergeObjects(c, c.assetConfig, c.buildConfig.platforms?.[c.platform]?.runtime || {});\n    c.assetConfig = mergeObjects(c, c.assetConfig, getConfigProp(c, c.platform, 'runtime') || {});\n\n    if (fs.existsSync(c.paths.project.assets.dir)) {\n        writeFileSync(c.paths.project.assets.config, c.assetConfig);\n    }\n    return true;\n};\n\nexport const generateLocalConfig = (c, resetAppId) => {\n    logTask(`generateLocalConfig:${resetAppId}:${c.paths.project.configLocal}`);\n    const configLocal = c.files.project.configLocal || {};\n    configLocal._meta = configLocal._meta || {};\n    if (resetAppId) {\n        delete configLocal._meta.currentAppConfigId;\n    } else {\n        configLocal._meta.currentAppConfigId = c.runtime.appId;\n    }\n    c.files.project.configLocal = configLocal;\n    writeFileSync(c.paths.project.configLocal, configLocal);\n};\n\nconst _generatePlatformTemplatePaths = (c) => {\n    const pt = c.buildConfig.platformTemplatesDirs || {};\n    const originalPath = c.buildConfig.platformTemplatesDir || '$RNV_HOME/platformTemplates';\n    const result = {};\n    SUPPORTED_PLATFORMS.forEach((v) => {\n        if (!pt[v]) {\n            result[v] = getRealPath(\n                c,\n                originalPath,\n                'platformTemplatesDir',\n                originalPath,\n            );\n        } else {\n            result[v] = getRealPath(\n                c,\n                pt[v],\n                'platformTemplatesDir',\n                originalPath,\n            );\n        }\n    });\n    return result;\n};\n\nconst _listAppConfigsFoldersSync = (dirPath, configDirs, ignoreHiddenConfigs) => {\n    logTask(`_listAppConfigsFoldersSync:${dirPath}`, chalk.grey);\n    if (!fs.existsSync(dirPath)) return;\n    fs.readdirSync(dirPath).forEach((dir) => {\n        const appConfigDir = path.join(dirPath, dir);\n        if (!IGNORE_FOLDERS.includes(dir) && fs.lstatSync(appConfigDir).isDirectory()) {\n            if (ignoreHiddenConfigs) {\n                const appConfig = path.join(appConfigDir, RENATIVE_CONFIG_NAME);\n                if (fs.existsSync(appConfig)) {\n                    try {\n                        const config = readObjectSync(appConfig);\n                        if (config?.hidden !== true) {\n                            configDirs.push(dir);\n                        }\n                    } catch (e) {\n                        logWarning(`_listAppConfigsFoldersSync: ${e}`);\n                    }\n                }\n            } else {\n                configDirs.push(dir);\n            }\n        }\n    });\n};\n\nexport const listAppConfigsFoldersSync = (c, ignoreHiddenConfigs) => {\n    logTask(`listAppConfigsFoldersSync:${ignoreHiddenConfigs}`);\n    const configDirs = [];\n    const appConfigsDirs = c.buildConfig?.paths?.appConfigsDirs;\n    if (appConfigsDirs && appConfigsDirs.forEach) {\n        appConfigsDirs.forEach((v) => {\n            _listAppConfigsFoldersSync(v, configDirs, ignoreHiddenConfigs);\n        });\n    } else {\n        _listAppConfigsFoldersSync(c.paths.project.appConfigsDir, configDirs, ignoreHiddenConfigs);\n    }\n\n    return configDirs;\n};\n\nexport const loadProjectTemplates = (c) => {\n    c.files.rnv.projectTemplates.config = readObjectSync(c.paths.rnv.projectTemplates.config);\n};\n\nexport const loadPluginTemplates = (c) => {\n    c.files.rnv.pluginTemplates.config = readObjectSync(c.paths.rnv.pluginTemplates.config);\n\n    c.files.rnv.pluginTemplates.configs = {\n        rnv: c.files.rnv.pluginTemplates.config\n    };\n\n    c.paths.rnv.pluginTemplates.dirs = [c.paths.rnv.pluginTemplates.dir];\n\n    const customPluginTemplates = c.files.project.config?.paths?.pluginTemplates;\n\n    if (customPluginTemplates) {\n        Object.keys(customPluginTemplates).forEach((k) => {\n            const val = customPluginTemplates[k];\n            if (val.npm) {\n                const npmDep = c.files.project.package?.dependencies[val.npm] || c.files.project.package?.devDependencies[val.npm];\n\n                if (npmDep) {\n                    let ptPath;\n                    if (npmDep.startsWith('file:')) {\n                        ptPath = path.join(c.paths.project.dir, npmDep.replace('file:', ''), val.path || '');\n                    } else {\n                        ptPath = path.join(c.paths.project.nodeModulesDir, val.npm, val.path || '');\n                    }\n\n                    const ptConfig = path.join(ptPath, RENATIVE_CONFIG_PLUGINS_NAME);\n                    c.paths.rnv.pluginTemplates.dirs.push(ptPath);\n                    if (fs.existsSync(ptConfig)) {\n                        c.files.rnv.pluginTemplates.configs[k] = readObjectSync(ptConfig);\n                    }\n                }\n            }\n        });\n    }\n};\n\nexport const loadPlatformTemplates = (c) => {\n    c.files.rnv.platformTemplates.config = readObjectSync(c.paths.rnv.platformTemplates.config);\n};\n\nconst _loadWorkspacesSync = (c) => {\n    // CHECK WORKSPACES\n    if (fs.existsSync(c.paths.rnv.configWorkspaces)) {\n        logDebug(`${c.paths.rnv.configWorkspaces} file exists!`);\n        c.files.rnv.configWorkspaces = readObjectSync(c.paths.rnv.configWorkspaces);\n\n        if (!c.files.rnv.configWorkspaces) c.files.rnv.configWorkspaces = {};\n\n        if (!c.files.rnv.configWorkspaces?.workspaces) c.files.rnv.configWorkspaces.workspaces = {};\n        if (Object.keys(c.files.rnv.configWorkspaces.workspaces).length === 0) {\n            logWarning(`No workspace found in ${c.paths.rnv.configWorkspaces}. Creating default rnv one for you`);\n            c.files.rnv.configWorkspaces.workspaces = {\n                rnv: {\n                    path: c.paths.workspace.dir\n                }\n            };\n            writeFileSync(c.paths.rnv.configWorkspaces, c.files.rnv.configWorkspaces);\n        }\n    } else {\n        logWarning(`Cannot find ${c.paths.rnv.configWorkspaces}. creating one..`);\n        c.files.rnv.configWorkspaces = {\n            workspaces: {\n                rnv: {\n                    path: c.paths.workspace.dir\n                }\n            }\n        };\n        writeFileSync(c.paths.rnv.configWorkspaces, c.files.rnv.configWorkspaces);\n    }\n};\n\nexport const setAppConfig = async (c, appId) => {\n    logTask(`setAppConfig:${appId}`);\n\n    if (!appId || appId === true || appId === true) return;\n\n    c.runtime.appId = appId;\n    c.runtime.appDir = path.join(c.paths.project.builds.dir, `${c.runtime.appId}_${c.platform}`);\n\n    _findAndSwitchAppConfigDir(c, appId);\n\n    _generateConfigPaths(c.paths.appConfig, path.join(c.paths.project.appConfigsDir, appId));\n    c.paths.appConfig.fontsDir = path.join(c.paths.appConfig.dir, 'fonts');\n    _loadConfigFiles(c, c.files.appConfig, c.paths.appConfig, c.paths.project.appConfigsDir);\n\n    const workspaceAppConfigsDir = getRealPath(c, c.buildConfig.workspaceAppConfigsDir);\n    c.paths.workspace.project.appConfigsDir = workspaceAppConfigsDir || path.join(c.paths.workspace.project.dir, 'appConfigs');\n\n    _generateConfigPaths(c.paths.workspace.appConfig, path.join(c.paths.workspace.project.appConfigsDir, appId));\n\n    _loadConfigFiles(c, c.files.workspace.appConfig, c.paths.workspace.appConfig, c.paths.workspace.project.appConfigsDir);\n    generateBuildConfig(c);\n    generateLocalConfig(c);\n\n    // LOAD WORKSPACE /RENATIVE.*.JSON\n    _generateConfigPaths(c.paths.workspace, getRealPath(c, await getWorkspaceDirPath(c)));\n    _loadConfigFiles(c, c.files.workspace, c.paths.workspace);\n};\n\nexport const updateConfig = async (c, appConfigId) => {\n    logTask(`updateConfig:${appConfigId}`);\n\n    await setAppConfig(c, appConfigId);\n\n    const isPureRnv = (!c.command && !c.subCommand);\n\n    if (!fs.existsSync(c.paths.appConfig.dir) || isPureRnv) {\n        const configDirs = listAppConfigsFoldersSync(c, true);\n\n        if (!appConfigId) {\n            logWarning(\n                'It seems you don\\'t have any appConfig active',\n            );\n        } else if (appConfigId !== true && appConfigId !== true && !isPureRnv) {\n            logWarning(\n                `It seems you don't have appConfig named ${chalk.white(appConfigId)} present in your config folder: ${chalk.white(\n                    c.paths.project.appConfigsDir,\n                )} !`,\n            );\n        }\n\n        if (configDirs.length) {\n            if (configDirs.length === 1) {\n                // we have only one, skip the question\n                logInfo(`Found only one app config available. Will use ${chalk.white(configDirs[0])}`);\n                await setAppConfig(c, configDirs[0]);\n                return true;\n            }\n\n            const { conf } = await inquirerPrompt({\n                name: 'conf',\n                type: 'list',\n                message: 'Which one would you like to pick?',\n                choices: configDirs,\n                pageSize: 50,\n                logMessage: 'ReNative found multiple existing appConfigs'\n            });\n\n            if (conf) {\n                await setAppConfig(c, conf);\n                return true;\n            }\n        }\n        const { conf } = await inquirerPrompt({\n            name: 'conf',\n            type: 'confirm',\n            message: `Do you want ReNative to create new sample appConfig (${chalk.white(\n                appConfigId,\n            )}) for you?`,\n            warningMessage: 'No app configs found for this project'\n        });\n\n        if (conf) {\n            await setAppConfig(c, SAMPLE_APP_ID);\n            copyFolderContentsRecursiveSync(\n                path.join(c.paths.rnv.dir, 'appConfigs', SAMPLE_APP_ID),\n                path.join(c.paths.appConfig.dir),\n            );\n            return true;\n        }\n    }\n    return true;\n};\n\nexport const parseRenativeConfigs = async (c) => {\n    logTask('parseRenativeConfigs');\n    // LOAD ./package.json\n    loadFile(c.files.project, c.paths.project, 'package');\n\n    // LOAD ./RENATIVE.*.JSON\n    _loadConfigFiles(c, c.files.project, c.paths.project);\n    if (c.program.appConfigID !== true) {\n        const aid = await matchAppConfigID(c, c.program.appConfigID?.toLowerCase?.());\n        c.runtime.appId = aid || c.runtime.appId || c.files.project?.configLocal?._meta?.currentAppConfigId;\n    }\n    c.paths.project.builds.config = path.join(c.paths.project.builds.dir, `${c.runtime.appId}_${c.platform}.json`);\n\n    // LOAD ./platformBuilds/RENATIVE.BUILLD.JSON\n    loadFile(c.files.project.builds, c.paths.project.builds, 'config');\n\n    // LOAD WORKSPACE /RENATIVE.*.JSON\n    _generateConfigPaths(c.paths.workspace, getRealPath(c, await getWorkspaceDirPath(c)));\n    _loadConfigFiles(c, c.files.workspace, c.paths.workspace);\n\n    // LOAD DEFAULT WORKSPACE\n    _generateConfigPaths(c.paths.defaultWorkspace, c.paths.GLOBAL_RNV_DIR);\n    _loadConfigFiles(c, c.files.defaultWorkspace, c.paths.defaultWorkspace);\n\n    // LOAD PROJECT TEMPLATES\n    loadProjectTemplates(c);\n\n    // LOAD PLUGIN TEMPLATES\n    loadPluginTemplates(c);\n\n    // LOAD PLATFORM TEMPLATES\n    loadPlatformTemplates(c);\n\n    if (!c.files.project.config) return;\n\n    // LOAD WORKSPACE /[PROJECT_NAME]/RENATIVE.*.JSON\n    _generateConfigPaths(c.paths.workspace.project, path.join(c.paths.workspace.dir, c.files.project.config.projectName));\n    _loadConfigFiles(c, c.files.workspace.project, c.paths.workspace.project);\n\n    c.paths.workspace.project.projectConfig.dir = path.join(c.paths.workspace.project.dir, 'projectConfig');\n\n    _findAndSwitchAppConfigDir(c);\n\n    c.runtime.isWrapper = c.buildConfig.isWrapper;\n    c.paths.project.platformTemplatesDirs = _generatePlatformTemplatePaths(c);\n};\n\nexport const configureRnvGlobal = async (c) => {\n    logTask('configureRnvGlobal');\n\n\n    // Check globalConfig Dir\n    if (fs.existsSync(c.paths.workspace.dir)) {\n        logDebug(`${c.paths.workspace.dir} folder exists!`);\n    } else {\n        logInfo(`${c.paths.workspace.dir} folder missing! Creating one for you...`);\n        mkdirSync(c.paths.workspace.dir);\n    }\n\n    // Check globalConfig\n    if (fs.existsSync(c.paths.workspace.config)) {\n        logDebug(`${c.paths.workspace.dir}/${RENATIVE_CONFIG_NAME} file exists!`);\n    } else {\n        const oldGlobalConfigPath = path.join(c.paths.workspace.dir, 'config.json');\n        if (fs.existsSync(oldGlobalConfigPath)) {\n            logWarning('Found old version of your config. will copy it to new renative.json config');\n            copyFileSync(oldGlobalConfigPath, c.paths.workspace.config);\n        } else {\n            logInfo(`${c.paths.workspace.dir}/${RENATIVE_CONFIG_NAME} file missing! Creating one for you...`);\n            copyFileSync(path.join(c.paths.rnv.dir, 'supportFiles', 'global-config-template.json'), c.paths.workspace.config);\n        }\n    }\n\n    if (fs.existsSync(c.paths.workspace.config)) {\n        c.files.workspace.config = JSON.parse(fs.readFileSync(c.paths.workspace.config).toString());\n\n        if (c.files.workspace.config?.appConfigsPath) {\n            if (!fs.existsSync(c.files.workspace.config.appConfigsPath)) {\n                logWarning(\n                    `Looks like your custom global appConfig is pointing to ${chalk.white(\n                        c.files.workspace.config.appConfigsPath,\n                    )} which doesn't exist! Make sure you create one in that location`,\n                );\n            } else {\n                logInfo(\n                    `Found custom appConfing location pointing to ${chalk.white(\n                        c.files.workspace.config.appConfigsPath,\n                    )}. ReNativewill now swith to that location!`,\n                );\n                c.paths.project.appConfigsDir = c.files.workspace.config.appConfigsPath;\n            }\n        }\n\n        // Check config sanity\n        if (c.files.workspace.config.defaultTargets === undefined) {\n            logWarning(\n                `Looks like you\\'re missing defaultTargets in your config ${chalk.white(c.paths.workspace.config)}. Let's add them!`,\n            );\n            const defaultConfig = JSON.parse(\n                fs.readFileSync(path.join(c.paths.rnv.dir, 'supportFiles', 'global-config-template.json')).toString(),\n            );\n            const newConfig = { ...c.files.workspace.config, defaultTargets: defaultConfig.defaultTargets };\n            fs.writeFileSync(c.paths.workspace.config, JSON.stringify(newConfig, null, 2));\n        }\n    }\n\n    return true;\n};\n\nexport const createRnvConfig = (program, process, cmd, subCmd) => {\n    const c = {\n        cli: {},\n        runtime: {\n\n        },\n        paths: {\n            buildHooks: {\n                dist: {}\n            },\n            home: {},\n            rnv: {\n                pluginTemplates: {},\n                platformTemplates: {},\n                projectTemplates: {},\n                platformTemplate: {},\n                plugins: {},\n                projectTemplate: {}\n            },\n            global: {\n\n            },\n            project: {\n                projectConfig: {},\n                builds: {},\n                assets: {},\n                platformTemplates: {}\n            },\n            template: {},\n            appConfig: {},\n            workspace: {\n                project: {\n                    projectConfig: {},\n                    builds: {},\n                    assets: {},\n                    platformTemplates: {}\n                },\n                appConfig: {}\n            },\n            defaultWorkspace: {\n                project: {\n                    projectConfig: {},\n                    builds: {},\n                    assets: {},\n                    platformTemplates: {}\n                },\n                appConfig: {}\n            }\n\n        },\n        files: {\n            rnv: {\n                pluginTemplates: {},\n                platformTemplates: {},\n                projectTemplates: {},\n                plugins: {},\n                projectTemplate: {}\n            },\n            project: {\n                projectConfig: {},\n                builds: {},\n                assets: {},\n                platformTemplates: {}\n            },\n            appConfig: {},\n            workspace: {\n                project: {\n                    projectConfig: {},\n                    builds: {},\n                    assets: {},\n                    platformTemplates: {}\n                },\n                appConfig: {}\n            },\n            defaultWorkspace: {\n                project: {\n                    projectConfig: {},\n                    builds: {},\n                    assets: {},\n                    platformTemplates: {}\n                },\n                appConfig: {}\n            }\n        }\n    };\n\n    c.program = program;\n    c.process = process;\n    c.command = cmd;\n    c.subCommand = subCmd;\n    c.platformDefaults = PLATFORMS;\n\n    c.paths.rnv.dir = path.join(__dirname, '../..');\n    c.paths.rnv.nodeModulesDir = path.join(c.paths.rnv.dir, 'node_modules');\n    c.paths.rnv.platformTemplates.dir = path.join(c.paths.rnv.dir, 'platformTemplates');\n    c.paths.rnv.pluginTemplates.dir = path.join(c.paths.rnv.dir, 'pluginTemplates');\n    c.paths.rnv.platformTemplates.config = path.join(c.paths.rnv.platformTemplates.dir, RENATIVE_CONFIG_PLATFORMS_NAME);\n    c.paths.rnv.pluginTemplates.config = path.join(c.paths.rnv.pluginTemplates.dir, RENATIVE_CONFIG_PLUGINS_NAME);\n    c.paths.rnv.projectTemplates.dir = path.join(c.paths.rnv.dir, 'projectTemplates');\n    c.paths.rnv.projectTemplates.config = path.join(c.paths.rnv.projectTemplates.dir, RENATIVE_CONFIG_TEMPLATES_NAME);\n    c.paths.rnv.package = path.join(c.paths.rnv.dir, 'package.json');\n\n    c.paths.rnv.projectTemplate.dir = path.join(c.paths.rnv.dir, 'projectTemplate');\n    c.files.rnv.package = JSON.parse(fs.readFileSync(c.paths.rnv.package).toString());\n\n    c.platform = c.program.platform;\n    c.paths.home.dir = homedir;\n    c.paths.GLOBAL_RNV_DIR = path.join(c.paths.home.dir, '.rnv');\n    c.paths.GLOBAL_RNV_CONFIG = path.join(c.paths.GLOBAL_RNV_DIR, RENATIVE_CONFIG_NAME);\n    c.paths.rnv.configWorkspaces = path.join(c.paths.GLOBAL_RNV_DIR, RENATIVE_CONFIG_WORKSPACES_NAME);\n\n    if (!fs.existsSync(c.paths.GLOBAL_RNV_DIR)) mkdirSync(c.paths.GLOBAL_RNV_DIR);\n\n    _generateConfigPaths(c.paths.project, base);\n\n    c.paths.buildHooks.dir = path.join(c.paths.project.dir, 'buildHooks/src');\n    c.paths.buildHooks.dist.dir = path.join(c.paths.project.dir, 'buildHooks/dist');\n    c.paths.buildHooks.index = path.join(c.paths.buildHooks.dir, 'index.js');\n    c.paths.buildHooks.dist.index = path.join(c.paths.buildHooks.dist.dir, 'index.js');\n    c.paths.project.nodeModulesDir = path.join(c.paths.project.dir, 'node_modules');\n    c.paths.project.srcDir = path.join(c.paths.project.dir, 'src');\n    c.paths.project.appConfigsDir = path.join(c.paths.project.dir, 'appConfigs');\n    c.paths.project.package = path.join(c.paths.project.dir, 'package.json');\n    c.paths.project.rnCliConfig = path.join(c.paths.project.dir, RN_CLI_CONFIG_NAME);\n    c.paths.project.babelConfig = path.join(c.paths.project.dir, RN_BABEL_CONFIG_NAME);\n    c.paths.project.npmLinkPolyfill = path.join(c.paths.project.dir, 'npm_link_polyfill.json');\n    c.paths.project.projectConfig.dir = path.join(c.paths.project.dir, 'appConfigs', 'base');\n    c.paths.project.projectConfig.pluginsDir = path.join(c.paths.project.projectConfig.dir, 'plugins');\n    c.paths.project.projectConfig.fontsDir = path.join(c.paths.project.projectConfig.dir, 'fonts');\n    c.paths.project.assets.dir = path.join(c.paths.project.dir, 'platformAssets');\n    c.paths.project.assets.runtimeDir = path.join(c.paths.project.assets.dir, 'runtime');\n    c.paths.project.assets.config = path.join(c.paths.project.assets.dir, RENATIVE_CONFIG_RUNTIME_NAME);\n    c.paths.project.builds.dir = path.join(c.paths.project.dir, 'platformBuilds');\n    c.paths.project.builds.config = path.join(c.paths.project.builds.dir, RENATIVE_CONFIG_BUILD_NAME);\n\n    _generateConfigPaths(c.paths.workspace, c.paths.GLOBAL_RNV_DIR);\n\n    // LOAD WORKSPACES\n    try {\n        _loadWorkspacesSync(c);\n    } catch (e) {\n        logError(e);\n    }\n\n    return c;\n};\n"],"mappings":"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"}