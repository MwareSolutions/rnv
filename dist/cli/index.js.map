{"version":3,"file":"index.js","names":["rnvHelp","cmdsString","key","COMMANDS","logToSummary","chalk","bold","white","start","fn","rnvStart","platforms","SUPPORTED_PLATFORMS","config","rnvConfigHandler","desc","run","rnvRun","package","IOS","ANDROID","ANDROID_TV","ANDROID_WEAR","TVOS","rnvPackage","deploy","rnvDeploy","build","rnvBuild","export","MACOS","WINDOWS","WEB","rnvExport","log","rnvLog","new","createNewProject","params","help","configure","rnvConfigure","switch","rnvSwitch","link","rnvLink","platform","subCommands","eject","rnvPlatformEject","list","rnvPlatformList","connect","rnvPlatformConnect","rnvPlatformConfigure","setup","rnvPlatformSetup","target","TIZEN","TIZEN_MOBILE","WEBOS","TIZEN_WATCH","launch","rnvTargetLaunch","rnvTargetList","plugin","add","rnvPluginAdd","rnvPluginList","update","rnvPluginUpdate","hooks","rnvHooksRun","rnvHooksList","pipes","rnvHooksPipes","status","rnvStatus","clean","rnvClean","template","rnvTemplateAdd","rnvTemplateList","apply","rnvTemplateApply","crypto","encrypt","rnvCryptoEncrypt","decrypt","rnvCryptoDecrypt","installCerts","rnvCryptoInstallCerts","updateProfile","requiredParams","rnvCryptoUpdateProfile","updateProfiles","rnvCryptoUpdateProfiles","installProfiles","rnvCryptoInstallProfiles","workspace","rnvWorkspaceAdd","rnvWorkspaceConnect","rnvWorkspaceList","rnvWorkspaceUpdate","fastlane","rnvFastlane","publish","rnvPublish","pkg","rnvPkg","NO_OP_COMMANDS","SKIP_APP_CONFIG_CHECK","_handleUnknownPlatform","c","logTask","inquirerPrompt","type","name","message","choices","logMessage","grey","command","_builderStarted","_startBuilder","checkAndMigrateProject","parseRenativeConfigs","paths","project","configExists","default","sort","pageSize","includes","configureRnvGlobal","checkIsRenativeProject","checkAndCreateProjectPackage","checkIfTemplateInstalled","fixRenativeConfigsSync","configureNodeModules","applyTemplate","configurePlugins","checkCrypto","updateConfig","runtime","appId","logAppInfo","_execCommandHep","cmd","opts","Object","keys","join","reduce","t","v","Promise","resolve","_handleUnknownSubCommand","cmds","subCommand","_handleUnknownCommand","program","scheme","_arrayMergeOverride","destinationArray","sourceArray","mergeOptions","_spawnCommand","overrideParams","newCommand","forEach","k","merge","require","arrayMerge","spawnC","skipStartBuilder","oldC","Config","initializeConfig","cmdFn","subCmd","subCmdFn","_execute","requiredPlatforms","port","buildConfig","defaults","ports","PLATFORMS","defaultPort","files","defaultTargets","localhost","isSystemWin","pipeEnabled","executePipe"],"sources":["../../src/cli/index.js"],"sourcesContent":["import chalk from 'chalk';\nimport { logTask, rnvStatus, logToSummary, logAppInfo } from '../systemTools/logger';\nimport { rnvWorkspaceList, rnvWorkspaceAdd, rnvWorkspaceConnect, rnvWorkspaceUpdate } from '../projectTools/workspace';\nimport { createNewProject } from '../projectTools/projectGenerator';\nimport { rnvTemplateAdd, rnvTemplateApply, rnvTemplateList, applyTemplate, checkIfTemplateInstalled } from '../templateTools';\nimport { targetCreate, rnvTargetLaunch, rnvTargetList } from '../platformTools/target';\nimport { rnvPluginAdd, rnvPluginList, rnvPluginUpdate, configurePlugins } from '../pluginTools';\nimport { rnvPlatformEject, rnvPlatformList, rnvPlatformConnect, rnvPlatformConfigure, rnvPlatformSetup } from '../platformTools';\nimport { executePipe, rnvHooksList, rnvHooksRun, rnvHooksPipes } from '../projectTools/buildHooks';\nimport { rnvConfigure, rnvSwitch, rnvLink } from '../projectTools';\nimport { rnvCryptoDecrypt, rnvCryptoEncrypt, rnvCryptoInstallCerts, rnvCryptoUpdateProfile, rnvCryptoUpdateProfiles, rnvCryptoInstallProfiles, checkCrypto } from '../systemTools/crypto';\nimport { rnvFastlane } from '../deployTools/fastlane';\nimport { rnvClean } from '../systemTools/cleaner';\nimport { inquirerPrompt } from '../systemTools/prompt';\nimport { rnvRun, rnvBuild, rnvPackage, rnvExport, rnvLog, rnvDeploy, rnvStart } from '../platformTools/runner';\nimport { isSystemWin } from '../utils';\nimport { PLATFORMS, SUPPORTED_PLATFORMS, IOS, ANDROID, ANDROID_TV, ANDROID_WEAR, WEB, TIZEN, TIZEN_MOBILE, TVOS,\n    WEBOS, MACOS, WINDOWS, TIZEN_WATCH, KAIOS, FIREFOX_OS, FIREFOX_TV } from '../constants';\n// import { getBinaryPath } from '../common';\nimport Config, { rnvConfigHandler } from '../config';\nimport { checkAndMigrateProject } from '../projectTools/migrator';\nimport {\n    parseRenativeConfigs, createRnvConfig, updateConfig,\n    fixRenativeConfigsSync, configureRnvGlobal, checkIsRenativeProject\n} from '../configTools/configParser';\nimport { configureNodeModules, checkAndCreateProjectPackage, cleanPlaformAssets } from '../projectTools/projectParser';\nimport rnvPublish from '../projectTools/publish';\nimport rnvPkg from '../projectTools/package';\n\nexport const rnvHelp = () => {\n    let cmdsString = '';\n    for (const key in COMMANDS) {\n        cmdsString += `${key}, `;\n    }\n\n    logToSummary(`\n${chalk.bold.white('COMMANDS:')}\n\n${cmdsString}\n\n${chalk.bold.white('OPTIONS:')}\n\n'-i, --info', 'Show full debug info'\n'-u, --update', 'Force update dependencies (iOS only)'\n'-p, --platform <value>', 'Select specific platform' // <ios|android|web|...>\n'-c, --appConfigID <value>', 'Select specific appConfigID' // <ios|android|web|...>\n'-t, --target <value>', 'Select specific simulator' // <.....>\n'-d, --device [value]', 'Select connected device'\n'-s, --scheme <value>', 'Select build scheme' // <Debug | Release>\n'-f, --filter <value>', 'Filter Value'\n'-l, --list', 'Return list of items related to command' // <alpha|beta|prod>\n'-r, --reset', 'Also perform reset'\n'-b, --blueprint', 'Blueprint for targets'\n'-h, --host <value>', 'Custom Host IP'\n'-x, --exeMethod <value>', 'Executable method in buildHooks'\n'-P, --port <value>', 'Custom Port'\n'-H, --help', 'Help'\n'-D, --debug', 'enable remote debugger'\n'-G, --global', 'Flag for setting a config value for all RNV projects'\n'--hosted', 'Run in a hosted environment (skip bundleAssets)'\n'--debugIp <value>', '(optional) overwrite the ip to which the remote debugger will connect'\n`);\n};\n\nconst COMMANDS = {\n    start: {\n        fn: rnvStart,\n        platforms: SUPPORTED_PLATFORMS\n    },\n    config: {\n        fn: rnvConfigHandler,\n        desc: 'Edit or display RNV configs',\n    },\n    run: {\n        desc: 'Run your app on target device or emulator',\n        fn: rnvRun\n    },\n    package: {\n        desc: 'Package JS Code',\n        platforms: [IOS, ANDROID, ANDROID_TV, ANDROID_WEAR, TVOS],\n        fn: rnvPackage\n    },\n    deploy: {\n        desc: 'Deploy whole app via preconfigured or custom integration',\n        fn: rnvDeploy\n    },\n    build: {\n        desc: 'Build your app',\n        fn: rnvBuild\n    },\n    export: {\n        desc: 'Export your app (ios only)',\n        platforms: [IOS, TVOS, MACOS, WINDOWS, WEB, ANDROID, ANDROID_TV, ANDROID_WEAR],\n        fn: rnvExport\n    },\n    log: {\n        desc: 'Attach logger to device or emulator and print out logs',\n        platforms: [IOS, ANDROID, ANDROID_TV, ANDROID_WEAR, TVOS],\n        fn: rnvLog\n    },\n    new: {\n        fn: createNewProject,\n        desc: 'Creates new project',\n        params: ['mono', 'ci']\n    },\n    help: {\n        desc: 'Displays help',\n        fn: rnvHelp\n    },\n    configure: {\n        desc: 'Configures app config',\n        fn: rnvConfigure,\n        params: ['appConfigID', 'mono', 'ci']\n    },\n    switch: {\n        desc: 'Switches to app confing without rebuilding',\n        fn: rnvSwitch,\n        params: ['appConfigID', 'mono', 'ci']\n    },\n    link: {\n        desc: 'Local dependency linking of your project',\n        fn: rnvLink\n    },\n    platform: {\n        desc: 'Manages native platform projects',\n        subCommands: {\n            eject: {\n                fn: rnvPlatformEject\n            },\n            list: {\n                fn: rnvPlatformList\n            },\n            connect: {\n                fn: rnvPlatformConnect\n            },\n            configure: {\n                fn: rnvPlatformConfigure\n            },\n            setup: {\n                fn: rnvPlatformSetup\n            }\n        }\n    },\n    target: {\n        desc: 'Manages simulators and emulators',\n        platforms: [IOS, ANDROID, ANDROID_TV, ANDROID_WEAR, TIZEN, TIZEN_MOBILE, TVOS, WEBOS, TIZEN_WATCH],\n        subCommands: {\n            launch: {\n                fn: rnvTargetLaunch\n            },\n            list: {\n                fn: rnvTargetList\n            }\n        }\n    },\n    plugin: {\n        desc: 'Manages all plugins',\n        subCommands: {\n            add: {\n                fn: rnvPluginAdd\n            },\n            list: {\n                fn: rnvPluginList\n            },\n            update: {\n                fn: rnvPluginUpdate\n            }\n        }\n    },\n    hooks: {\n        desc: 'Manages project based build hooks. This allows you to extend functionality of RNV CLI',\n        subCommands: {\n            run: {\n                fn: rnvHooksRun\n            },\n            list: {\n                fn: rnvHooksList\n            },\n            pipes: {\n                fn: rnvHooksPipes\n            }\n        }\n    },\n    status: {\n        desc: 'Prints out summary of your project',\n        fn: rnvStatus\n    },\n    clean: {\n        desc: 'Automatically removes all node_modules and lock in your project and its dependencies',\n        fn: rnvClean\n    },\n    template: {\n        desc: 'Manages rnv and project templates',\n        subCommands: {\n            add: {\n                fn: rnvTemplateAdd\n            },\n            list: {\n                fn: rnvTemplateList\n            },\n            apply: {\n                fn: rnvTemplateApply\n            }\n        }\n    },\n    crypto: {\n        desc: 'Utility to manage encrytped files in your project, provisioning profiles, kestores and other sensitive information',\n        subCommands: {\n            encrypt: {\n                fn: rnvCryptoEncrypt\n            },\n            decrypt: {\n                fn: rnvCryptoDecrypt\n            },\n            installCerts: {\n                platforms: [IOS, TVOS],\n                fn: rnvCryptoInstallCerts\n            },\n            updateProfile: {\n                requiredParams: ['scheme', 'platform'],\n                platforms: [IOS, TVOS],\n                fn: rnvCryptoUpdateProfile\n            },\n            updateProfiles: {\n                platforms: [IOS, TVOS],\n                fn: rnvCryptoUpdateProfiles\n            },\n            installProfiles: {\n                platforms: [IOS, TVOS],\n                fn: rnvCryptoInstallProfiles\n            }\n        }\n    },\n    workspace: {\n        desc: 'Manages global workspaces for ReNative projects',\n        subCommands: {\n            add: {\n                fn: rnvWorkspaceAdd\n            },\n            connect: {\n                fn: rnvWorkspaceConnect\n            },\n            list: {\n                fn: rnvWorkspaceList\n            },\n            update: {\n                fn: rnvWorkspaceUpdate\n            }\n        }\n    },\n    fastlane: {\n        desc: 'Run fastlane commands on currectly active app/platform directly via rnv command',\n        platforms: [IOS, ANDROID, ANDROID_TV, ANDROID_WEAR, TVOS],\n        fn: rnvFastlane\n    },\n    publish: {\n        desc: 'Provides help deploying a new version, like tagging a commit, pushing it, etc',\n        fn: rnvPublish\n    },\n    pkg: {\n        desc: 'Provides help deploying a new version, like tagging a commit, pushing it, etc',\n        fn: rnvPkg\n    }\n};\nexport const NO_OP_COMMANDS = ['fix', 'clean', 'tool', 'status', 'log', 'new', 'target', 'help', 'config'];\nexport const SKIP_APP_CONFIG_CHECK = ['crypto', 'config'];\n\nconst _handleUnknownPlatform = async (c, platforms) => {\n    logTask('_handleUnknownPlatform');\n    const { platform } = await inquirerPrompt({\n        type: 'list',\n        name: 'platform',\n        message: 'pick one of the following',\n        choices: platforms,\n        logMessage: `cli: Command ${chalk.grey(c.command)} does not support platform ${chalk.grey(c.platform)}. `\n    });\n\n    c.platform = platform;\n    return run(c);\n};\n\n// ##########################################\n// PRIVATE API\n// ##########################################\n\nlet _builderStarted = false;\nexport const _startBuilder = async (c) => {\n    logTask(`_startBuilder:${_builderStarted}`);\n\n    if (_builderStarted) return;\n\n    _builderStarted = true;\n\n    await checkAndMigrateProject(c);\n    await parseRenativeConfigs(c);\n\n    if (!c.command) {\n        if (!c.paths.project.configExists) {\n            const { command } = await inquirerPrompt({\n                type: 'list',\n                default: 'new',\n                name: 'command',\n                message: 'Pick a command',\n                choices: NO_OP_COMMANDS.sort(),\n                pageSize: 15,\n                logMessage: 'You need to tell rnv what to do. NOTE: your current directory is not ReNative project. RNV options will be limited'\n            });\n            c.command = command;\n        }\n    }\n\n    if (NO_OP_COMMANDS.includes(c.command)) {\n        await configureRnvGlobal(c);\n        return c;\n    }\n\n    await checkAndMigrateProject(c);\n    await parseRenativeConfigs(c);\n    await checkIsRenativeProject(c);\n    await checkAndCreateProjectPackage(c);\n    await configureRnvGlobal(c);\n    await checkIfTemplateInstalled(c);\n    await fixRenativeConfigsSync(c);\n    await configureNodeModules(c);\n    await applyTemplate(c);\n    await configurePlugins(c);\n    await configureNodeModules(c);\n    await checkCrypto(c);\n\n    if (!SKIP_APP_CONFIG_CHECK.includes(c.command)) {\n        await updateConfig(c, c.runtime.appId);\n    }\n    await logAppInfo(c);\n};\n\nconst _execCommandHep = async (c, cmd) => {\n    let opts = '';\n    let subCommands = '';\n\n    if (cmd.subCommands) {\n        subCommands = '\\nSub Commands: \\n';\n        subCommands += Object.keys(cmd.subCommands).join(', ');\n        subCommands += '\\n';\n    }\n\n    if (cmd.params) {\n        opts = 'Options:\\n';\n        opts += (cmd.params || []).reduce((t, v) => `${t}--${v}\\n`, '');\n    }\n\n    logToSummary(`\nCommand: ${c.command}\n\nDescription: ${cmd.desc}.\n${subCommands}\n${opts}\nMore info at ${chalk.grey(`https://renative.org/docs/rnv-${c.command}`)}\n`);\n    return Promise.resolve();\n};\n\nconst _handleUnknownSubCommand = async (c) => {\n    logTask('_handleUnknownSubCommand');\n    const cmds = COMMANDS[c.command]?.subCommands;\n\n    const { subCommand } = await inquirerPrompt({\n        type: 'list',\n        name: 'subCommand',\n        message: 'Pick a subCommand',\n        choices: Object.keys(cmds),\n        logMessage: `cli: Command ${chalk.bold(c.command)} does not support method ${chalk.bold(c.subCommand)}!`\n    });\n\n    c.subCommand = subCommand;\n    return run(c);\n};\n\nconst _handleUnknownCommand = async (c) => {\n    logTask('_handleUnknownCommand');\n\n    c.program.scheme = true;\n\n    const { command } = await inquirerPrompt({\n        type: 'list',\n        name: 'command',\n        message: 'Pick a command',\n        pageSize: 7,\n        choices: Object.keys(COMMANDS).sort(),\n        logMessage: `cli: Command ${chalk.bold(c.command)} not supported!`\n    });\n    c.command = command;\n    return run(c);\n};\n\n\nconst _arrayMergeOverride = (destinationArray, sourceArray, mergeOptions) => sourceArray;\n\nexport const _spawnCommand = (c, overrideParams) => {\n    const newCommand = {};\n\n    Object.keys(c).forEach((k) => {\n        if (typeof newCommand[k] === 'object' && !(newCommand[k] instanceof 'String')) {\n            newCommand[k] = { ...c[k] };\n        } else {\n            newCommand[k] = c[k];\n        }\n    });\n\n    const merge = require('deepmerge');\n\n    Object.keys(overrideParams).forEach((k) => {\n        if (newCommand[k] && typeof overrideParams[k] === 'object') {\n            newCommand[k] = merge(newCommand[k], overrideParams[k], { arrayMerge: _arrayMergeOverride });\n        } else {\n            newCommand[k] = overrideParams[k];\n        }\n    });\n\n    // This causes stack overflow on Linux\n    // const merge = require('deepmerge');\n    // const newCommand = merge(c, overrideParams, { arrayMerge: _arrayMergeOverride });\n    return newCommand;\n};\n\n\n// ##########################################\n// PUBLIC API\n// ##########################################\n\nconst run = async (c, spawnC, skipStartBuilder) => {\n    logTask('cli');\n\n    if (!skipStartBuilder) await _startBuilder(c);\n\n    let oldC;\n    if (spawnC) {\n        oldC = c;\n        c = _spawnCommand(c, spawnC);\n        Config.initializeConfig(c);\n    }\n\n    const cmd = COMMANDS[c.command];\n    const cmdFn = cmd?.fn;\n    const subCmd = cmd?.subCommands?.[c.subCommand];\n    const subCmdFn = subCmd?.fn;\n\n    if (cmd) {\n        if (c.subCommand === 'help') {\n            await _execCommandHep(c, cmd);\n        } else if (cmdFn) {\n            if (subCmdFn) {\n                await _execute(c, subCmdFn, cmd);\n            } else {\n                // There is no subCommand function available so reset the key not to confuse pipe hooks\n                c.subCommand = null;\n                await _execute(c, cmdFn, cmd);\n            }\n        } else if (subCmdFn) {\n            await _execute(c, subCmdFn, cmd);\n        } else {\n            await _handleUnknownSubCommand(c);\n        }\n    } else {\n        await _handleUnknownCommand(c);\n    }\n    // if (spawnC) Config.initializeConfig(oldC);\n};\n\nconst _execute = async (c, cmdFn, cmd) => {\n    logTask(`_execute:${c.command}:${c.subCommand}`);\n    if (cmd.platforms && !cmd.platforms.includes(c.platform)) {\n        await _handleUnknownPlatform(c, cmd.platforms);\n        return;\n    }\n\n    let subCmd = '';\n    if (c.subCommand) {\n        subCmd = `:${c.subCommand}`;\n        const requiredPlatforms = cmd.subCommands?.[c.subCommand]?.platforms;\n        if (requiredPlatforms && !requiredPlatforms.includes(c.platform)) {\n            await _handleUnknownPlatform(c, requiredPlatforms);\n            return;\n        }\n        // TODO: Required params\n        // const requiredParams = cmd.subCommands?.[c.subCommand]?.requiredParams;\n        // if (requiredParams) {\n        //     for (let i = 0; i < requiredParams.length; i++) {\n        //         const requiredParam = requiredParams[i];\n        //\n        //     }\n        // }\n    }\n\n    c.runtime.port = c.program.port || c.buildConfig?.defaults?.ports?.[c.platform] || PLATFORMS[c.platform]?.defaultPort;\n    if (c.program.target !== true) c.runtime.target = c.program.target || c.files.workspace.config.defaultTargets[c.platform];\n    else c.runtime.target = c.program.target;\n    c.runtime.scheme = c.program.scheme || 'debug';\n    c.runtime.localhost = isSystemWin ? '127.0.0.1' : '0.0.0.0';\n    // const { scheme } = c.program;\n    // if (scheme !== true) {\n    //     const isSchemePresent = !!c.buildConfig?.platforms[c.platform]?.buildSchemes[scheme || 'debug'];\n    //     c.runtime.scheme = isSchemePresent ? scheme : undefined;\n    // }\n\n    const pipeEnabled = !NO_OP_COMMANDS.includes(c.command) && !SKIP_APP_CONFIG_CHECK.includes(c.command);\n    if (pipeEnabled) await executePipe(c, `${c.command}${subCmd}:before`);\n    await cmdFn(c);\n    if (pipeEnabled) await executePipe(c, `${c.command}${subCmd}:after`);\n};\n\n\nexport default run;\n"],"mappings":"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"}