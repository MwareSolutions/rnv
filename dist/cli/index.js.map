{"version":3,"sources":["../../src/cli/index.js"],"names":["rnvHelp","cmdsString","key","COMMANDS","chalk","bold","white","start","fn","rnvStart","platforms","SUPPORTED_PLATFORMS","config","rnvConfigHandler","desc","run","rnvRun","package","IOS","ANDROID","ANDROID_TV","ANDROID_WEAR","TVOS","rnvPackage","deploy","rnvDeploy","build","rnvBuild","export","MACOS","WINDOWS","WEB","rnvExport","log","rnvLog","new","createNewProject","params","help","configure","rnvConfigure","switch","rnvSwitch","link","rnvLink","platform","subCommands","eject","rnvPlatformEject","list","rnvPlatformList","connect","rnvPlatformConnect","rnvPlatformConfigure","setup","rnvPlatformSetup","target","TIZEN","TIZEN_MOBILE","WEBOS","TIZEN_WATCH","launch","rnvTargetLaunch","rnvTargetList","plugin","add","rnvPluginAdd","rnvPluginList","update","rnvPluginUpdate","hooks","rnvHooksRun","rnvHooksList","pipes","rnvHooksPipes","status","rnvStatus","clean","rnvClean","template","rnvTemplateAdd","rnvTemplateList","apply","rnvTemplateApply","crypto","encrypt","rnvCryptoEncrypt","decrypt","rnvCryptoDecrypt","installCerts","rnvCryptoInstallCerts","updateProfile","requiredParams","rnvCryptoUpdateProfile","updateProfiles","rnvCryptoUpdateProfiles","installProfiles","rnvCryptoInstallProfiles","workspace","rnvWorkspaceAdd","rnvWorkspaceConnect","rnvWorkspaceList","rnvWorkspaceUpdate","fastlane","rnvFastlane","publish","rnvPublish","pkg","rnvPkg","NO_OP_COMMANDS","SKIP_APP_CONFIG_CHECK","_handleUnknownPlatform","c","type","name","message","choices","logMessage","grey","command","_builderStarted","_startBuilder","paths","project","configExists","default","sort","pageSize","includes","runtime","appId","_execCommandHep","cmd","opts","Object","keys","join","reduce","t","v","Promise","resolve","_handleUnknownSubCommand","cmds","subCommand","_handleUnknownCommand","program","scheme","_arrayMergeOverride","destinationArray","sourceArray","mergeOptions","_spawnCommand","overrideParams","newCommand","forEach","k","merge","require","arrayMerge","spawnC","skipStartBuilder","oldC","Config","initializeConfig","cmdFn","subCmd","subCmdFn","_execute","requiredPlatforms","port","buildConfig","defaults","ports","PLATFORMS","defaultPort","files","defaultTargets","localhost","isSystemWin","pipeEnabled"],"mappings":"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","sourcesContent":["import chalk from 'chalk';\nimport { logTask, rnvStatus, logToSummary, logAppInfo } from '../systemTools/logger';\nimport { rnvWorkspaceList, rnvWorkspaceAdd, rnvWorkspaceConnect, rnvWorkspaceUpdate } from '../projectTools/workspace';\nimport { createNewProject } from '../projectTools/projectGenerator';\nimport { rnvTemplateAdd, rnvTemplateApply, rnvTemplateList, applyTemplate, checkIfTemplateInstalled } from '../templateTools';\nimport { targetCreate, rnvTargetLaunch, rnvTargetList } from '../platformTools/target';\nimport { rnvPluginAdd, rnvPluginList, rnvPluginUpdate, configurePlugins } from '../pluginTools';\nimport { rnvPlatformEject, rnvPlatformList, rnvPlatformConnect, rnvPlatformConfigure, rnvPlatformSetup } from '../platformTools';\nimport { executePipe, rnvHooksList, rnvHooksRun, rnvHooksPipes } from '../projectTools/buildHooks';\nimport { rnvConfigure, rnvSwitch, rnvLink } from '../projectTools';\nimport { rnvCryptoDecrypt, rnvCryptoEncrypt, rnvCryptoInstallCerts, rnvCryptoUpdateProfile, rnvCryptoUpdateProfiles, rnvCryptoInstallProfiles, checkCrypto } from '../systemTools/crypto';\nimport { rnvFastlane } from '../deployTools/fastlane';\nimport { rnvClean } from '../systemTools/cleaner';\nimport { inquirerPrompt } from '../systemTools/prompt';\nimport { rnvRun, rnvBuild, rnvPackage, rnvExport, rnvLog, rnvDeploy, rnvStart } from '../platformTools/runner';\nimport { isSystemWin } from '../utils';\nimport { PLATFORMS, SUPPORTED_PLATFORMS, IOS, ANDROID, ANDROID_TV, ANDROID_WEAR, WEB, TIZEN, TIZEN_MOBILE, TVOS,\n    WEBOS, MACOS, WINDOWS, TIZEN_WATCH, KAIOS, FIREFOX_OS, FIREFOX_TV } from '../constants';\n// import { getBinaryPath } from '../common';\nimport Config, { rnvConfigHandler } from '../config';\nimport { checkAndMigrateProject } from '../projectTools/migrator';\nimport {\n    parseRenativeConfigs, createRnvConfig, updateConfig,\n    fixRenativeConfigsSync, configureRnvGlobal, checkIsRenativeProject\n} from '../configTools/configParser';\nimport { configureNodeModules, checkAndCreateProjectPackage, cleanPlaformAssets } from '../projectTools/projectParser';\nimport rnvPublish from '../projectTools/publish';\nimport rnvPkg from '../projectTools/package';\n\nexport const rnvHelp = () => {\n    let cmdsString = '';\n    for (const key in COMMANDS) {\n        cmdsString += `${key}, `;\n    }\n\n    logToSummary(`\n${chalk.bold.white('COMMANDS:')}\n\n${cmdsString}\n\n${chalk.bold.white('OPTIONS:')}\n\n'-i, --info', 'Show full debug info'\n'-u, --update', 'Force update dependencies (iOS only)'\n'-p, --platform <value>', 'Select specific platform' // <ios|android|web|...>\n'-c, --appConfigID <value>', 'Select specific appConfigID' // <ios|android|web|...>\n'-t, --target <value>', 'Select specific simulator' // <.....>\n'-d, --device [value]', 'Select connected device'\n'-s, --scheme <value>', 'Select build scheme' // <Debug | Release>\n'-f, --filter <value>', 'Filter Value'\n'-l, --list', 'Return list of items related to command' // <alpha|beta|prod>\n'-r, --reset', 'Also perform reset'\n'-b, --blueprint', 'Blueprint for targets'\n'-h, --host <value>', 'Custom Host IP'\n'-x, --exeMethod <value>', 'Executable method in buildHooks'\n'-P, --port <value>', 'Custom Port'\n'-H, --help', 'Help'\n'-D, --debug', 'enable remote debugger'\n'-G, --global', 'Flag for setting a config value for all RNV projects'\n'--hosted', 'Run in a hosted environment (skip bundleAssets)'\n'--debugIp <value>', '(optional) overwrite the ip to which the remote debugger will connect'\n`);\n};\n\nconst COMMANDS = {\n    start: {\n        fn: rnvStart,\n        platforms: SUPPORTED_PLATFORMS\n    },\n    config: {\n        fn: rnvConfigHandler,\n        desc: 'Edit or display RNV configs',\n    },\n    run: {\n        desc: 'Run your app on target device or emulator',\n        fn: rnvRun\n    },\n    package: {\n        desc: 'Package JS Code',\n        platforms: [IOS, ANDROID, ANDROID_TV, ANDROID_WEAR, TVOS],\n        fn: rnvPackage\n    },\n    deploy: {\n        desc: 'Deploy whole app via preconfigured or custom integration',\n        fn: rnvDeploy\n    },\n    build: {\n        desc: 'Build your app',\n        fn: rnvBuild\n    },\n    export: {\n        desc: 'Export your app (ios only)',\n        platforms: [IOS, TVOS, MACOS, WINDOWS, WEB, ANDROID, ANDROID_TV, ANDROID_WEAR],\n        fn: rnvExport\n    },\n    log: {\n        desc: 'Attach logger to device or emulator and print out logs',\n        platforms: [IOS, ANDROID, ANDROID_TV, ANDROID_WEAR, TVOS],\n        fn: rnvLog\n    },\n    new: {\n        fn: createNewProject,\n        desc: 'Creates new project',\n        params: ['mono', 'ci']\n    },\n    help: {\n        desc: 'Displays help',\n        fn: rnvHelp\n    },\n    configure: {\n        desc: 'Configures app config',\n        fn: rnvConfigure,\n        params: ['appConfigID', 'mono', 'ci']\n    },\n    switch: {\n        desc: 'Switches to app confing without rebuilding',\n        fn: rnvSwitch,\n        params: ['appConfigID', 'mono', 'ci']\n    },\n    link: {\n        desc: 'Local dependency linking of your project',\n        fn: rnvLink\n    },\n    platform: {\n        desc: 'Manages native platform projects',\n        subCommands: {\n            eject: {\n                fn: rnvPlatformEject\n            },\n            list: {\n                fn: rnvPlatformList\n            },\n            connect: {\n                fn: rnvPlatformConnect\n            },\n            configure: {\n                fn: rnvPlatformConfigure\n            },\n            setup: {\n                fn: rnvPlatformSetup\n            }\n        }\n    },\n    target: {\n        desc: 'Manages simulators and emulators',\n        platforms: [IOS, ANDROID, ANDROID_TV, ANDROID_WEAR, TIZEN, TIZEN_MOBILE, TVOS, WEBOS, TIZEN_WATCH],\n        subCommands: {\n            launch: {\n                fn: rnvTargetLaunch\n            },\n            list: {\n                fn: rnvTargetList\n            }\n        }\n    },\n    plugin: {\n        desc: 'Manages all plugins',\n        subCommands: {\n            add: {\n                fn: rnvPluginAdd\n            },\n            list: {\n                fn: rnvPluginList\n            },\n            update: {\n                fn: rnvPluginUpdate\n            }\n        }\n    },\n    hooks: {\n        desc: 'Manages project based build hooks. This allows you to extend functionality of RNV CLI',\n        subCommands: {\n            run: {\n                fn: rnvHooksRun\n            },\n            list: {\n                fn: rnvHooksList\n            },\n            pipes: {\n                fn: rnvHooksPipes\n            }\n        }\n    },\n    status: {\n        desc: 'Prints out summary of your project',\n        fn: rnvStatus\n    },\n    clean: {\n        desc: 'Automatically removes all node_modules and lock in your project and its dependencies',\n        fn: rnvClean\n    },\n    template: {\n        desc: 'Manages rnv and project templates',\n        subCommands: {\n            add: {\n                fn: rnvTemplateAdd\n            },\n            list: {\n                fn: rnvTemplateList\n            },\n            apply: {\n                fn: rnvTemplateApply\n            }\n        }\n    },\n    crypto: {\n        desc: 'Utility to manage encrytped files in your project, provisioning profiles, kestores and other sensitive information',\n        subCommands: {\n            encrypt: {\n                fn: rnvCryptoEncrypt\n            },\n            decrypt: {\n                fn: rnvCryptoDecrypt\n            },\n            installCerts: {\n                platforms: [IOS, TVOS],\n                fn: rnvCryptoInstallCerts\n            },\n            updateProfile: {\n                requiredParams: ['scheme', 'platform'],\n                platforms: [IOS, TVOS],\n                fn: rnvCryptoUpdateProfile\n            },\n            updateProfiles: {\n                platforms: [IOS, TVOS],\n                fn: rnvCryptoUpdateProfiles\n            },\n            installProfiles: {\n                platforms: [IOS, TVOS],\n                fn: rnvCryptoInstallProfiles\n            }\n        }\n    },\n    workspace: {\n        desc: 'Manages global workspaces for ReNative projects',\n        subCommands: {\n            add: {\n                fn: rnvWorkspaceAdd\n            },\n            connect: {\n                fn: rnvWorkspaceConnect\n            },\n            list: {\n                fn: rnvWorkspaceList\n            },\n            update: {\n                fn: rnvWorkspaceUpdate\n            }\n        }\n    },\n    fastlane: {\n        desc: 'Run fastlane commands on currectly active app/platform directly via rnv command',\n        platforms: [IOS, ANDROID, ANDROID_TV, ANDROID_WEAR, TVOS],\n        fn: rnvFastlane\n    },\n    publish: {\n        desc: 'Provides help deploying a new version, like tagging a commit, pushing it, etc',\n        fn: rnvPublish\n    },\n    pkg: {\n        desc: 'Provides help deploying a new version, like tagging a commit, pushing it, etc',\n        fn: rnvPkg\n    }\n};\nexport const NO_OP_COMMANDS = ['fix', 'clean', 'tool', 'status', 'log', 'new', 'target', 'help', 'config'];\nexport const SKIP_APP_CONFIG_CHECK = ['crypto', 'config'];\n\nconst _handleUnknownPlatform = async (c, platforms) => {\n    logTask('_handleUnknownPlatform');\n    const { platform } = await inquirerPrompt({\n        type: 'list',\n        name: 'platform',\n        message: 'pick one of the following',\n        choices: platforms,\n        logMessage: `cli: Command ${chalk.grey(c.command)} does not support platform ${chalk.grey(c.platform)}. `\n    });\n\n    c.platform = platform;\n    return run(c);\n};\n\n// ##########################################\n// PRIVATE API\n// ##########################################\n\nlet _builderStarted = false;\nexport const _startBuilder = async (c) => {\n    logTask(`_startBuilder:${_builderStarted}`);\n\n    if (_builderStarted) return;\n\n    _builderStarted = true;\n\n    await checkAndMigrateProject(c);\n    await parseRenativeConfigs(c);\n\n    if (!c.command) {\n        if (!c.paths.project.configExists) {\n            const { command } = await inquirerPrompt({\n                type: 'list',\n                default: 'new',\n                name: 'command',\n                message: 'Pick a command',\n                choices: NO_OP_COMMANDS.sort(),\n                pageSize: 15,\n                logMessage: 'You need to tell rnv what to do. NOTE: your current directory is not ReNative project. RNV options will be limited'\n            });\n            c.command = command;\n        }\n    }\n\n    if (NO_OP_COMMANDS.includes(c.command)) {\n        await configureRnvGlobal(c);\n        return c;\n    }\n\n    await checkAndMigrateProject(c);\n    await parseRenativeConfigs(c);\n    await checkIsRenativeProject(c);\n    await checkAndCreateProjectPackage(c);\n    await configureRnvGlobal(c);\n    await checkIfTemplateInstalled(c);\n    await fixRenativeConfigsSync(c);\n    await configureNodeModules(c);\n    await applyTemplate(c);\n    await configurePlugins(c);\n    await configureNodeModules(c);\n    await checkCrypto(c);\n\n    if (!SKIP_APP_CONFIG_CHECK.includes(c.command)) {\n        await updateConfig(c, c.runtime.appId);\n    }\n    await logAppInfo(c);\n};\n\nconst _execCommandHep = async (c, cmd) => {\n    let opts = '';\n    let subCommands = '';\n\n    if (cmd.subCommands) {\n        subCommands = '\\nSub Commands: \\n';\n        subCommands += Object.keys(cmd.subCommands).join(', ');\n        subCommands += '\\n';\n    }\n\n    if (cmd.params) {\n        opts = 'Options:\\n';\n        opts += (cmd.params || []).reduce((t, v) => `${t}--${v}\\n`, '');\n    }\n\n    logToSummary(`\nCommand: ${c.command}\n\nDescription: ${cmd.desc}.\n${subCommands}\n${opts}\nMore info at ${chalk.grey(`https://renative.org/docs/rnv-${c.command}`)}\n`);\n    return Promise.resolve();\n};\n\nconst _handleUnknownSubCommand = async (c) => {\n    logTask('_handleUnknownSubCommand');\n    const cmds = COMMANDS[c.command]?.subCommands;\n\n    const { subCommand } = await inquirerPrompt({\n        type: 'list',\n        name: 'subCommand',\n        message: 'Pick a subCommand',\n        choices: Object.keys(cmds),\n        logMessage: `cli: Command ${chalk.bold(c.command)} does not support method ${chalk.bold(c.subCommand)}!`\n    });\n\n    c.subCommand = subCommand;\n    return run(c);\n};\n\nconst _handleUnknownCommand = async (c) => {\n    logTask('_handleUnknownCommand');\n\n    c.program.scheme = true;\n\n    const { command } = await inquirerPrompt({\n        type: 'list',\n        name: 'command',\n        message: 'Pick a command',\n        pageSize: 7,\n        choices: Object.keys(COMMANDS).sort(),\n        logMessage: `cli: Command ${chalk.bold(c.command)} not supported!`\n    });\n    c.command = command;\n    return run(c);\n};\n\n\nconst _arrayMergeOverride = (destinationArray, sourceArray, mergeOptions) => sourceArray;\n\nexport const _spawnCommand = (c, overrideParams) => {\n    const newCommand = {};\n\n    Object.keys(c).forEach((k) => {\n        if (typeof newCommand[k] === 'object' && !(newCommand[k] instanceof 'String')) {\n            newCommand[k] = { ...c[k] };\n        } else {\n            newCommand[k] = c[k];\n        }\n    });\n\n    const merge = require('deepmerge');\n\n    Object.keys(overrideParams).forEach((k) => {\n        if (newCommand[k] && typeof overrideParams[k] === 'object') {\n            newCommand[k] = merge(newCommand[k], overrideParams[k], { arrayMerge: _arrayMergeOverride });\n        } else {\n            newCommand[k] = overrideParams[k];\n        }\n    });\n\n    // This causes stack overflow on Linux\n    // const merge = require('deepmerge');\n    // const newCommand = merge(c, overrideParams, { arrayMerge: _arrayMergeOverride });\n    return newCommand;\n};\n\n\n// ##########################################\n// PUBLIC API\n// ##########################################\n\nconst run = async (c, spawnC, skipStartBuilder) => {\n    logTask('cli');\n\n    if (!skipStartBuilder) await _startBuilder(c);\n\n    let oldC;\n    if (spawnC) {\n        oldC = c;\n        c = _spawnCommand(c, spawnC);\n        Config.initializeConfig(c);\n    }\n\n    const cmd = COMMANDS[c.command];\n    const cmdFn = cmd?.fn;\n    const subCmd = cmd?.subCommands?.[c.subCommand];\n    const subCmdFn = subCmd?.fn;\n\n    if (cmd) {\n        if (c.subCommand === 'help') {\n            await _execCommandHep(c, cmd);\n        } else if (cmdFn) {\n            if (subCmdFn) {\n                await _execute(c, subCmdFn, cmd);\n            } else {\n                // There is no subCommand function available so reset the key not to confuse pipe hooks\n                c.subCommand = null;\n                await _execute(c, cmdFn, cmd);\n            }\n        } else if (subCmdFn) {\n            await _execute(c, subCmdFn, cmd);\n        } else {\n            await _handleUnknownSubCommand(c);\n        }\n    } else {\n        await _handleUnknownCommand(c);\n    }\n    // if (spawnC) Config.initializeConfig(oldC);\n};\n\nconst _execute = async (c, cmdFn, cmd) => {\n    logTask(`_execute:${c.command}:${c.subCommand}`);\n    if (cmd.platforms && !cmd.platforms.includes(c.platform)) {\n        await _handleUnknownPlatform(c, cmd.platforms);\n        return;\n    }\n\n    let subCmd = '';\n    if (c.subCommand) {\n        subCmd = `:${c.subCommand}`;\n        const requiredPlatforms = cmd.subCommands?.[c.subCommand]?.platforms;\n        if (requiredPlatforms && !requiredPlatforms.includes(c.platform)) {\n            await _handleUnknownPlatform(c, requiredPlatforms);\n            return;\n        }\n        // TODO: Required params\n        // const requiredParams = cmd.subCommands?.[c.subCommand]?.requiredParams;\n        // if (requiredParams) {\n        //     for (let i = 0; i < requiredParams.length; i++) {\n        //         const requiredParam = requiredParams[i];\n        //\n        //     }\n        // }\n    }\n\n    c.runtime.port = c.program.port || c.buildConfig?.defaults?.ports?.[c.platform] || PLATFORMS[c.platform]?.defaultPort;\n    if (c.program.target !== true) c.runtime.target = c.program.target || c.files.workspace.config.defaultTargets[c.platform];\n    else c.runtime.target = c.program.target;\n    c.runtime.scheme = c.program.scheme || 'debug';\n    c.runtime.localhost = isSystemWin ? '127.0.0.1' : '0.0.0.0';\n    // const { scheme } = c.program;\n    // if (scheme !== true) {\n    //     const isSchemePresent = !!c.buildConfig?.platforms[c.platform]?.buildSchemes[scheme || 'debug'];\n    //     c.runtime.scheme = isSchemePresent ? scheme : undefined;\n    // }\n\n    const pipeEnabled = !NO_OP_COMMANDS.includes(c.command) && !SKIP_APP_CONFIG_CHECK.includes(c.command);\n    if (pipeEnabled) await executePipe(c, `${c.command}${subCmd}:before`);\n    await cmdFn(c);\n    if (pipeEnabled) await executePipe(c, `${c.command}${subCmd}:after`);\n};\n\n\nexport default run;\n"],"file":"index.js"}