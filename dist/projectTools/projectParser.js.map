{"version":3,"sources":["../../src/projectTools/projectParser.js"],"names":["checkAndCreateProjectPackage","c","Promise","resolve","fs","existsSync","paths","project","package","packageName","files","config","projectName","dir","split","pop","version","defaults","templateName","template","rnvVersion","rnv","pkgJson","name","dependencies","renative","devDependencies","pkgJsonStringClean","JSON","stringify","writeFileSync","checkAndCreateGitignore","ignrPath","path","join","copyRuntimeAssets","reject","destPath","assets","appConfig","dirs","forEach","v","sourcePath","buildConfig","common","chalk","white","fontsObj","parseFonts","font","includes","key","includedFonts","fontSource","relativePath","replace","isSystemWin","runtimeDir","fontJsPath","existingFileContents","readFileSync","toString","supportFiles","callback","projectConfig","fontsDir","readdirSync","fontsDirs","copySharedPlatforms","platform","platformTemplatesDirs","builds","ASSET_PATH_ALIASES","android","androidtv","androidwear","ios","tvos","tizen","tizenmobile","tizenwatch","webos","kaios","firefoxtv","firefoxos","windows","macos","web","copyAssetsFolder","customFn","hasAssetFolder","filter","length","generateDefaultAssets","confirmAssets","program","ci","type","message","confirm","copyBuildsFolder","sourcePath1","sourcePath1sec","workspace","WEB_HOSTED_PLATFORMS","sourcePathShared","sourceV","sourcePath0sec","plugin","pluginPlat","sourcePath3","sourcePath3sec","sourcePath2","sourcePath2sec","upgradeProjectDependencies","thw","tb","templates","_requiresNpmInstall","configureNodeModules","nodeModulesDir","runtime","skipPackageUpdate","then","catch","e","cleanPlaformAssets"],"mappings":"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","sourcesContent":["import path from 'path';\nimport fs from 'fs';\nimport chalk from 'chalk';\nimport {\n    WEB_HOSTED_PLATFORMS,\n} from '../constants';\nimport { getAppFolder, getAppSubFolder, getBuildsFolder } from '../common';\nimport {\n    cleanFolder, copyFolderContentsRecursiveSync,\n    copyFileSync, mkdirSync, writeFileSync\n} from '../systemTools/fileutils';\nimport { isPlatformActive } from '../platformTools';\nimport { npmInstall } from '../systemTools/exec';\nimport {\n    logTask,\n    logWarning, logDebug, logInfo\n} from '../systemTools/logger';\nimport { getMergedPlugin, parsePlugins } from '../pluginTools';\nimport { loadFile } from '../configTools/configParser';\nimport { inquirerPrompt } from '../systemTools/prompt';\nimport { isSystemWin } from '../utils';\n\n\nexport const checkAndCreateProjectPackage = c => new Promise((resolve) => {\n    logTask('checkAndCreateProjectPackage');\n\n    if (!fs.existsSync(c.paths.project.package)) {\n        logInfo(`Looks like your ${c.paths.project.package} is missing. Let's create one for you!`);\n\n        const packageName = c.files.project.config.projectName || c.paths.project.dir.split('/').pop();\n        const version = c.files.project.config.defaults?.package?.version || '0.1.0';\n        const templateName = c.files.project.config.defaults?.template || 'renative-template-hello-world';\n        const rnvVersion = c.files.rnv.package.version;\n\n        const pkgJson = {};\n        pkgJson.name = packageName;\n        pkgJson.version = version;\n        pkgJson.dependencies = {\n            renative: rnvVersion,\n        };\n        pkgJson.devDependencies = {\n            rnv: rnvVersion,\n        };\n        pkgJson.devDependencies[templateName] = rnvVersion;\n        const pkgJsonStringClean = JSON.stringify(pkgJson, null, 2);\n        fs.writeFileSync(c.paths.project.package, pkgJsonStringClean);\n    }\n\n    loadFile(c.files.project, c.paths.project, 'package');\n\n    resolve();\n});\n\nexport const checkAndCreateGitignore = (c) => {\n    logTask('checkAndCreateGitignore');\n    const ignrPath = path.join(c.paths.project.dir, '.gitignore');\n    if (!fs.existsSync(ignrPath)) {\n        logInfo(\"Looks like your .gitignore is missing. Let's create one for you!\");\n\n        copyFileSync(path.join(c.paths.rnv.dir, 'supportFiles/gitignore-template'), ignrPath);\n    }\n};\n\nexport const copyRuntimeAssets = c => new Promise((resolve, reject) => {\n    logTask('copyRuntimeAssets');\n\n    const destPath = path.join(c.paths.project.assets.dir, 'runtime');\n\n    // FOLDER MERGERS FROM APP CONFIG + EXTEND\n    if (c.paths.appConfig.dirs) {\n        c.paths.appConfig.dirs.forEach((v) => {\n            const sourcePath = path.join(v, 'assets/runtime');\n            copyFolderContentsRecursiveSync(sourcePath, destPath);\n        });\n    } else {\n        const sourcePath = path.join(c.paths.appConfig.dir, 'assets/runtime');\n        copyFolderContentsRecursiveSync(sourcePath, destPath);\n    }\n\n    if (c.buildConfig) {\n        if (!c.buildConfig.common) {\n            reject(`Your ${chalk.white(c.paths.appConfig.config)} is missconfigured. (Maybe you have older version?). Missing ${chalk.white('{ common: {} }')} object at root`);\n            return;\n        }\n    }\n\n    // FONTS\n    let fontsObj = 'export default [';\n\n\n    parseFonts(c, (font, dir) => {\n        if (font.includes('.ttf') || font.includes('.otf')) {\n            const key = font.split('.')[0];\n            const { includedFonts } = c.buildConfig.common;\n            if (includedFonts) {\n                if (includedFonts.includes('*') || includedFonts.includes(key)) {\n                    if (font) {\n                        const fontSource = path.join(dir, font);\n\n                        let relativePath = dir.replace(c.paths.project.dir, '');\n                        if (isSystemWin) relativePath = relativePath.replace(/\\\\/g, '/'); // strings don't like windows backslashes\n                        if (fs.existsSync(fontSource)) {\n                            // const fontFolder = path.join(appFolder, 'app/src/main/assets/fonts');\n                            // mkdirSync(fontFolder);\n                            // const fontDest = path.join(fontFolder, font);\n                            // copyFileSync(fontSource, fontDest);\n                            fontsObj += `{\n                              fontFamily: '${key}',\n                              file: require('../..${relativePath}/${font}'),\n                          },`;\n                        } else {\n                            logWarning(`Font ${chalk.white(fontSource)} doesn't exist! Skipping.`);\n                        }\n                    }\n                }\n            }\n        }\n    });\n\n\n    fontsObj += '];';\n    if (!fs.existsSync(c.paths.project.assets.runtimeDir)) {\n        mkdirSync(c.paths.project.assets.runtimeDir);\n    }\n    const fontJsPath = path.join(c.paths.project.assets.dir, 'runtime', 'fonts.js');\n    if (fs.existsSync(fontJsPath)) {\n        const existingFileContents = fs.readFileSync(fontJsPath).toString();\n\n        if (existingFileContents !== fontsObj) {\n            logDebug('newFontsJsFile');\n            fs.writeFileSync(fontJsPath, fontsObj);\n        }\n    } else {\n        logDebug('newFontsJsFile');\n        fs.writeFileSync(fontJsPath, fontsObj);\n    }\n\n    const supportFiles = path.resolve(c.paths.rnv.dir, 'supportFiles');\n    copyFileSync(\n        path.resolve(supportFiles, 'fontManager.js'),\n        path.resolve(c.paths.project.assets.dir, 'runtime', 'fontManager.js'),\n    );\n    copyFileSync(\n        path.resolve(supportFiles, 'fontManager.web.js'),\n        path.resolve(c.paths.project.assets.dir, 'runtime', 'fontManager.web.js'),\n    );\n\n    resolve();\n});\n\n\nexport const parseFonts = (c, callback) => {\n    logTask('parseFonts');\n\n    if (c.buildConfig) {\n        // FONTS - PROJECT CONFIG\n        if (fs.existsSync(c.paths.project.projectConfig.fontsDir)) {\n            fs.readdirSync(c.paths.project.projectConfig.fontsDir).forEach((font) => {\n                if (callback) callback(font, c.paths.project.projectConfig.fontsDir);\n            });\n        }\n        // FONTS - APP CONFIG\n        if (c.paths.appConfig.fontsDirs) {\n            c.paths.appConfig.fontsDirs.forEach((v) => {\n                if (fs.existsSync(v)) {\n                    fs.readdirSync(v).forEach((font) => {\n                        if (callback) callback(font, v);\n                    });\n                }\n            });\n        } else if (fs.existsSync(c.paths.appConfig.fontsDir)) {\n            fs.readdirSync(c.paths.appConfig.fontsDir).forEach((font) => {\n                if (callback) callback(font, c.paths.appConfig.fontsDir);\n            });\n        }\n    }\n};\n\n\nexport const copySharedPlatforms = c => new Promise((resolve) => {\n    logTask(`_copySharedPlatform:${c.platform}`);\n\n    if (c.platform) {\n        mkdirSync(path.resolve(c.paths.project.platformTemplatesDirs[c.platform], '_shared'));\n\n        copyFolderContentsRecursiveSync(\n            path.resolve(c.paths.project.platformTemplatesDirs[c.platform], '_shared'),\n            path.resolve(c.paths.project.builds.dir, '_shared'),\n        );\n    }\n\n    resolve();\n});\n\nconst ASSET_PATH_ALIASES = {\n    android: 'app/src/main',\n    androidtv: 'app/src/main',\n    androidwear: 'app/src/main',\n    ios: '',\n    tvos: '',\n    tizen: '',\n    tizenmobile: '',\n    tizenwatch: '',\n    webos: 'public',\n    kaios: '',\n    firefoxtv: '',\n    firefoxos: '',\n    windows: '',\n    macos: '',\n    web: 'public'\n};\n\nexport const copyAssetsFolder = async (c, platform, customFn) => {\n    logTask(`copyAssetsFolder:${platform}`);\n\n    if (!isPlatformActive(c, platform)) return;\n\n    if (customFn) {\n        return customFn(c, platform);\n    }\n\n    const destPath = path.join(getAppSubFolder(c, platform), ASSET_PATH_ALIASES[platform]);\n\n    // FOLDER MERGERS FROM APP CONFIG + EXTEND\n    if (c.paths.appConfig.dirs) {\n        const hasAssetFolder = c.paths.appConfig.dirs.filter(v => fs.existsSync(path.join(v, `assets/${platform}`))).length;\n        if (!hasAssetFolder) {\n            await generateDefaultAssets(c, platform, path.join(c.paths.appConfig.dirs[0], `assets/${platform}`));\n        }\n        c.paths.appConfig.dirs.forEach((v) => {\n            const sourcePath = path.join(v, `assets/${platform}`);\n            copyFolderContentsRecursiveSync(sourcePath, destPath);\n        });\n    } else {\n        const sourcePath = path.join(c.paths.appConfig.dir, `assets/${platform}`);\n        if (!fs.existsSync(sourcePath)) {\n            await generateDefaultAssets(c, platform, sourcePath);\n        }\n        copyFolderContentsRecursiveSync(sourcePath, destPath);\n    }\n};\n\nconst generateDefaultAssets = async (c, platform, sourcePath) => {\n    logTask(`generateDefaultAssets:${platform}`);\n    let confirmAssets = true;\n    if (c.program.ci === false) {\n        const { confirm } = await inquirerPrompt({\n            type: 'confirm',\n            message: `It seems you don't have assets configured in ${chalk.white(sourcePath)} do you want generate default ones?`\n        });\n        confirmAssets = confirm;\n    }\n\n    if (confirmAssets) {\n        copyFolderContentsRecursiveSync(path.join(c.paths.rnv.dir, `projectTemplate/assets/${platform}`), sourcePath);\n    }\n};\n\nexport const copyBuildsFolder = (c, platform) => new Promise((resolve, reject) => {\n    logTask(`copyBuildsFolder:${platform}`);\n    if (!isPlatformActive(c, platform, resolve)) return;\n\n    const destPath = path.join(getAppFolder(c, platform));\n\n    // FOLDER MERGERS PROJECT CONFIG\n    const sourcePath1 = getBuildsFolder(c, platform, c.paths.project.projectConfig.dir);\n    copyFolderContentsRecursiveSync(sourcePath1, destPath);\n\n    // FOLDER MERGERS PROJECT CONFIG (PRIVATE)\n    const sourcePath1sec = getBuildsFolder(c, platform, c.paths.workspace.project.projectConfig.dir);\n    copyFolderContentsRecursiveSync(sourcePath1sec, destPath);\n\n    if (WEB_HOSTED_PLATFORMS.includes(platform)) {\n        // FOLDER MERGERS _SHARED\n        const sourcePathShared = path.join(c.paths.project.projectConfig.dir, 'builds/_shared');\n        copyFolderContentsRecursiveSync(sourcePathShared, path.join(c.paths.project.builds.dir, '_shared'));\n    }\n\n    // FOLDER MERGERS FROM APP CONFIG + EXTEND\n    if (c.paths.appConfig.dirs) {\n        c.paths.appConfig.dirs.forEach((v) => {\n            const sourceV = getBuildsFolder(c, platform, v);\n            copyFolderContentsRecursiveSync(sourceV, destPath, c.paths.appConfig.dir);\n        });\n    } else {\n        copyFolderContentsRecursiveSync(getBuildsFolder(c, platform, c.paths.appConfig.dir), destPath, c.paths.appConfig.dir);\n    }\n\n    // FOLDER MERGERS FROM APP CONFIG (PRIVATE)\n    const sourcePath0sec = getBuildsFolder(c, platform, c.paths.workspace.appConfig.dir);\n    copyFolderContentsRecursiveSync(sourcePath0sec, destPath);\n\n    parsePlugins(c, platform, (plugin, pluginPlat, key) => {\n        // FOLDER MERGES FROM PROJECT CONFIG PLUGIN\n        const sourcePath3 = getBuildsFolder(c, platform, path.join(c.paths.project.projectConfig.dir, `plugins/${key}`));\n        copyFolderContentsRecursiveSync(sourcePath3, destPath);\n\n        // FOLDER MERGES FROM PROJECT CONFIG PLUGIN (PRIVATE)\n        const sourcePath3sec = getBuildsFolder(c, platform, path.join(c.paths.workspace.project.projectConfig.dir, `plugins/${key}`));\n        copyFolderContentsRecursiveSync(sourcePath3sec, destPath);\n\n        // FOLDER MERGES FROM APP CONFIG PLUGIN\n        const sourcePath2 = getBuildsFolder(c, platform, path.join(c.paths.appConfig.dir, `plugins/${key}`));\n        copyFolderContentsRecursiveSync(sourcePath2, destPath);\n\n        // FOLDER MERGES FROM APP CONFIG PLUGIN (PRIVATE)\n        const sourcePath2sec = getBuildsFolder(c, platform, path.join(c.paths.workspace.appConfig.dir, `plugins/${key}`));\n        copyFolderContentsRecursiveSync(sourcePath2sec, destPath);\n    });\n\n    resolve();\n});\n\nexport const upgradeProjectDependencies = (c, version) => {\n    logTask('upgradeProjectDependencies');\n\n    const thw = 'renative-template-hello-world';\n    const tb = 'renative-template-blank';\n    const devDependencies = c.files.project.package?.devDependencies;\n    if (devDependencies?.rnv) {\n        devDependencies.rnv = version;\n    }\n    if (devDependencies[thw]) {\n        devDependencies[thw] = version;\n    }\n    if (devDependencies[tb]) {\n        devDependencies[tb] = version;\n    }\n    if (devDependencies?.renative) {\n        devDependencies.renative = version;\n    }\n\n    writeFileSync(c.paths.project.package, c.files.project.package);\n\n    if (c.files.project.config?.templates?.[thw]?.version) c.files.project.config.templates[thw].version = version;\n    if (c.files.project.config?.templates?.[tb]?.version) c.files.project.config.templates[tb].version = version;\n\n    c._requiresNpmInstall = true;\n\n    writeFileSync(c.paths.project.config, c.files.project.config);\n};\n\nexport const configureNodeModules = c => new Promise((resolve, reject) => {\n    logTask('configureNodeModules');\n    // Check node_modules\n    if (!fs.existsSync(c.paths.project.nodeModulesDir) || c._requiresNpmInstall && !c.runtime.skipPackageUpdate) {\n        if (!fs.existsSync(c.paths.project.nodeModulesDir)) {\n            logWarning(\n                `Looks like your node_modules folder ${chalk.white(c.paths.project.nodeModulesDir)} is missing! Let's run ${chalk.white(\n                    'npm install',\n                )} first!`,\n            );\n        } else {\n            logWarning(`Looks like your node_modules out of date! Let's run ${chalk.white('npm install')} first!`);\n        }\n        c._requiresNpmInstall = false;\n        npmInstall().then(() => resolve()).catch(e => reject(e));\n    } else {\n        resolve();\n    }\n});\n\nexport const cleanPlaformAssets = async (c) => {\n    logTask('cleanPlaformAssets');\n\n    await cleanFolder(c.paths.project.assets.dir);\n    mkdirSync(c.paths.project.assets.runtimeDir);\n    return true;\n};\n"],"file":"projectParser.js"}