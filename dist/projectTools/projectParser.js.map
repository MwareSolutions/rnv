{"version":3,"file":"projectParser.js","names":["checkAndCreateProjectPackage","c","Promise","resolve","logTask","fs","existsSync","paths","project","package","logInfo","packageName","files","config","projectName","dir","split","pop","version","defaults","templateName","template","rnvVersion","rnv","pkgJson","name","dependencies","renative","devDependencies","pkgJsonStringClean","JSON","stringify","writeFileSync","loadFile","checkAndCreateGitignore","ignrPath","path","join","copyFileSync","copyRuntimeAssets","reject","destPath","assets","appConfig","dirs","forEach","v","sourcePath","copyFolderContentsRecursiveSync","buildConfig","common","chalk","white","fontsObj","parseFonts","font","includes","key","includedFonts","fontSource","relativePath","replace","isSystemWin","logWarning","runtimeDir","mkdirSync","fontJsPath","existingFileContents","readFileSync","toString","logDebug","supportFiles","callback","projectConfig","fontsDir","readdirSync","fontsDirs","copySharedPlatforms","platform","platformTemplatesDirs","builds","ASSET_PATH_ALIASES","android","androidtv","androidwear","ios","tvos","tizen","tizenmobile","tizenwatch","webos","kaios","firefoxtv","firefoxos","windows","macos","web","copyAssetsFolder","customFn","isPlatformActive","getAppSubFolder","hasAssetFolder","filter","length","generateDefaultAssets","confirmAssets","program","ci","inquirerPrompt","type","message","confirm","copyBuildsFolder","getAppFolder","sourcePath1","getBuildsFolder","sourcePath1sec","workspace","WEB_HOSTED_PLATFORMS","sourcePathShared","sourceV","sourcePath0sec","parsePlugins","plugin","pluginPlat","sourcePath3","sourcePath3sec","sourcePath2","sourcePath2sec","upgradeProjectDependencies","thw","tb","templates","_requiresNpmInstall","configureNodeModules","nodeModulesDir","runtime","skipPackageUpdate","npmInstall","then","catch","e","cleanPlaformAssets","cleanFolder"],"sources":["../../src/projectTools/projectParser.js"],"sourcesContent":["import path from 'path';\nimport fs from 'fs';\nimport chalk from 'chalk';\nimport {\n    WEB_HOSTED_PLATFORMS,\n} from '../constants';\nimport { getAppFolder, getAppSubFolder, getBuildsFolder } from '../common';\nimport {\n    cleanFolder, copyFolderContentsRecursiveSync,\n    copyFileSync, mkdirSync, writeFileSync\n} from '../systemTools/fileutils';\nimport { isPlatformActive } from '../platformTools';\nimport { npmInstall } from '../systemTools/exec';\nimport {\n    logTask,\n    logWarning, logDebug, logInfo\n} from '../systemTools/logger';\nimport { getMergedPlugin, parsePlugins } from '../pluginTools';\nimport { loadFile } from '../configTools/configParser';\nimport { inquirerPrompt } from '../systemTools/prompt';\nimport { isSystemWin } from '../utils';\n\n\nexport const checkAndCreateProjectPackage = c => new Promise((resolve) => {\n    logTask('checkAndCreateProjectPackage');\n\n    if (!fs.existsSync(c.paths.project.package)) {\n        logInfo(`Looks like your ${c.paths.project.package} is missing. Let's create one for you!`);\n\n        const packageName = c.files.project.config.projectName || c.paths.project.dir.split('/').pop();\n        const version = c.files.project.config.defaults?.package?.version || '0.1.0';\n        const templateName = c.files.project.config.defaults?.template || 'renative-template-hello-world';\n        const rnvVersion = c.files.rnv.package.version;\n\n        const pkgJson = {};\n        pkgJson.name = packageName;\n        pkgJson.version = version;\n        pkgJson.dependencies = {\n            renative: rnvVersion,\n        };\n        pkgJson.devDependencies = {\n            rnv: rnvVersion,\n        };\n        pkgJson.devDependencies[templateName] = rnvVersion;\n        const pkgJsonStringClean = JSON.stringify(pkgJson, null, 2);\n        fs.writeFileSync(c.paths.project.package, pkgJsonStringClean);\n    }\n\n    loadFile(c.files.project, c.paths.project, 'package');\n\n    resolve();\n});\n\nexport const checkAndCreateGitignore = (c) => {\n    logTask('checkAndCreateGitignore');\n    const ignrPath = path.join(c.paths.project.dir, '.gitignore');\n    if (!fs.existsSync(ignrPath)) {\n        logInfo(\"Looks like your .gitignore is missing. Let's create one for you!\");\n\n        copyFileSync(path.join(c.paths.rnv.dir, 'supportFiles/gitignore-template'), ignrPath);\n    }\n};\n\nexport const copyRuntimeAssets = c => new Promise((resolve, reject) => {\n    logTask('copyRuntimeAssets');\n\n    const destPath = path.join(c.paths.project.assets.dir, 'runtime');\n\n    // FOLDER MERGERS FROM APP CONFIG + EXTEND\n    if (c.paths.appConfig.dirs) {\n        c.paths.appConfig.dirs.forEach((v) => {\n            const sourcePath = path.join(v, 'assets/runtime');\n            copyFolderContentsRecursiveSync(sourcePath, destPath);\n        });\n    } else {\n        const sourcePath = path.join(c.paths.appConfig.dir, 'assets/runtime');\n        copyFolderContentsRecursiveSync(sourcePath, destPath);\n    }\n\n    if (c.buildConfig) {\n        if (!c.buildConfig.common) {\n            reject(`Your ${chalk.white(c.paths.appConfig.config)} is missconfigured. (Maybe you have older version?). Missing ${chalk.white('{ common: {} }')} object at root`);\n            return;\n        }\n    }\n\n    // FONTS\n    let fontsObj = 'export default [';\n\n\n    parseFonts(c, (font, dir) => {\n        if (font.includes('.ttf') || font.includes('.otf')) {\n            const key = font.split('.')[0];\n            const { includedFonts } = c.buildConfig.common;\n            if (includedFonts) {\n                if (includedFonts.includes('*') || includedFonts.includes(key)) {\n                    if (font) {\n                        const fontSource = path.join(dir, font);\n\n                        let relativePath = dir.replace(c.paths.project.dir, '');\n                        if (isSystemWin) relativePath = relativePath.replace(/\\\\/g, '/'); // strings don't like windows backslashes\n                        if (fs.existsSync(fontSource)) {\n                            // const fontFolder = path.join(appFolder, 'app/src/main/assets/fonts');\n                            // mkdirSync(fontFolder);\n                            // const fontDest = path.join(fontFolder, font);\n                            // copyFileSync(fontSource, fontDest);\n                            fontsObj += `{\n                              fontFamily: '${key}',\n                              file: require('../..${relativePath}/${font}'),\n                          },`;\n                        } else {\n                            logWarning(`Font ${chalk.white(fontSource)} doesn't exist! Skipping.`);\n                        }\n                    }\n                }\n            }\n        }\n    });\n\n\n    fontsObj += '];';\n    if (!fs.existsSync(c.paths.project.assets.runtimeDir)) {\n        mkdirSync(c.paths.project.assets.runtimeDir);\n    }\n    const fontJsPath = path.join(c.paths.project.assets.dir, 'runtime', 'fonts.js');\n    if (fs.existsSync(fontJsPath)) {\n        const existingFileContents = fs.readFileSync(fontJsPath).toString();\n\n        if (existingFileContents !== fontsObj) {\n            logDebug('newFontsJsFile');\n            fs.writeFileSync(fontJsPath, fontsObj);\n        }\n    } else {\n        logDebug('newFontsJsFile');\n        fs.writeFileSync(fontJsPath, fontsObj);\n    }\n\n    const supportFiles = path.resolve(c.paths.rnv.dir, 'supportFiles');\n    copyFileSync(\n        path.resolve(supportFiles, 'fontManager.js'),\n        path.resolve(c.paths.project.assets.dir, 'runtime', 'fontManager.js'),\n    );\n    copyFileSync(\n        path.resolve(supportFiles, 'fontManager.web.js'),\n        path.resolve(c.paths.project.assets.dir, 'runtime', 'fontManager.web.js'),\n    );\n\n    resolve();\n});\n\n\nexport const parseFonts = (c, callback) => {\n    logTask('parseFonts');\n\n    if (c.buildConfig) {\n        // FONTS - PROJECT CONFIG\n        if (fs.existsSync(c.paths.project.projectConfig.fontsDir)) {\n            fs.readdirSync(c.paths.project.projectConfig.fontsDir).forEach((font) => {\n                if (callback) callback(font, c.paths.project.projectConfig.fontsDir);\n            });\n        }\n        // FONTS - APP CONFIG\n        if (c.paths.appConfig.fontsDirs) {\n            c.paths.appConfig.fontsDirs.forEach((v) => {\n                if (fs.existsSync(v)) {\n                    fs.readdirSync(v).forEach((font) => {\n                        if (callback) callback(font, v);\n                    });\n                }\n            });\n        } else if (fs.existsSync(c.paths.appConfig.fontsDir)) {\n            fs.readdirSync(c.paths.appConfig.fontsDir).forEach((font) => {\n                if (callback) callback(font, c.paths.appConfig.fontsDir);\n            });\n        }\n    }\n};\n\n\nexport const copySharedPlatforms = c => new Promise((resolve) => {\n    logTask(`_copySharedPlatform:${c.platform}`);\n\n    if (c.platform) {\n        mkdirSync(path.resolve(c.paths.project.platformTemplatesDirs[c.platform], '_shared'));\n\n        copyFolderContentsRecursiveSync(\n            path.resolve(c.paths.project.platformTemplatesDirs[c.platform], '_shared'),\n            path.resolve(c.paths.project.builds.dir, '_shared'),\n        );\n    }\n\n    resolve();\n});\n\nconst ASSET_PATH_ALIASES = {\n    android: 'app/src/main',\n    androidtv: 'app/src/main',\n    androidwear: 'app/src/main',\n    ios: '',\n    tvos: '',\n    tizen: '',\n    tizenmobile: '',\n    tizenwatch: '',\n    webos: 'public',\n    kaios: '',\n    firefoxtv: '',\n    firefoxos: '',\n    windows: '',\n    macos: '',\n    web: 'public'\n};\n\nexport const copyAssetsFolder = async (c, platform, customFn) => {\n    logTask(`copyAssetsFolder:${platform}`);\n\n    if (!isPlatformActive(c, platform)) return;\n\n    if (customFn) {\n        return customFn(c, platform);\n    }\n\n    const destPath = path.join(getAppSubFolder(c, platform), ASSET_PATH_ALIASES[platform]);\n\n    // FOLDER MERGERS FROM APP CONFIG + EXTEND\n    if (c.paths.appConfig.dirs) {\n        const hasAssetFolder = c.paths.appConfig.dirs.filter(v => fs.existsSync(path.join(v, `assets/${platform}`))).length;\n        if (!hasAssetFolder) {\n            await generateDefaultAssets(c, platform, path.join(c.paths.appConfig.dirs[0], `assets/${platform}`));\n        }\n        c.paths.appConfig.dirs.forEach((v) => {\n            const sourcePath = path.join(v, `assets/${platform}`);\n            copyFolderContentsRecursiveSync(sourcePath, destPath);\n        });\n    } else {\n        const sourcePath = path.join(c.paths.appConfig.dir, `assets/${platform}`);\n        if (!fs.existsSync(sourcePath)) {\n            await generateDefaultAssets(c, platform, sourcePath);\n        }\n        copyFolderContentsRecursiveSync(sourcePath, destPath);\n    }\n};\n\nconst generateDefaultAssets = async (c, platform, sourcePath) => {\n    logTask(`generateDefaultAssets:${platform}`);\n    let confirmAssets = true;\n    if (c.program.ci === false) {\n        const { confirm } = await inquirerPrompt({\n            type: 'confirm',\n            message: `It seems you don't have assets configured in ${chalk.white(sourcePath)} do you want generate default ones?`\n        });\n        confirmAssets = confirm;\n    }\n\n    if (confirmAssets) {\n        copyFolderContentsRecursiveSync(path.join(c.paths.rnv.dir, `projectTemplate/assets/${platform}`), sourcePath);\n    }\n};\n\nexport const copyBuildsFolder = (c, platform) => new Promise((resolve, reject) => {\n    logTask(`copyBuildsFolder:${platform}`);\n    if (!isPlatformActive(c, platform, resolve)) return;\n\n    const destPath = path.join(getAppFolder(c, platform));\n\n    // FOLDER MERGERS PROJECT CONFIG\n    const sourcePath1 = getBuildsFolder(c, platform, c.paths.project.projectConfig.dir);\n    copyFolderContentsRecursiveSync(sourcePath1, destPath);\n\n    // FOLDER MERGERS PROJECT CONFIG (PRIVATE)\n    const sourcePath1sec = getBuildsFolder(c, platform, c.paths.workspace.project.projectConfig.dir);\n    copyFolderContentsRecursiveSync(sourcePath1sec, destPath);\n\n    if (WEB_HOSTED_PLATFORMS.includes(platform)) {\n        // FOLDER MERGERS _SHARED\n        const sourcePathShared = path.join(c.paths.project.projectConfig.dir, 'builds/_shared');\n        copyFolderContentsRecursiveSync(sourcePathShared, path.join(c.paths.project.builds.dir, '_shared'));\n    }\n\n    // FOLDER MERGERS FROM APP CONFIG + EXTEND\n    if (c.paths.appConfig.dirs) {\n        c.paths.appConfig.dirs.forEach((v) => {\n            const sourceV = getBuildsFolder(c, platform, v);\n            copyFolderContentsRecursiveSync(sourceV, destPath, c.paths.appConfig.dir);\n        });\n    } else {\n        copyFolderContentsRecursiveSync(getBuildsFolder(c, platform, c.paths.appConfig.dir), destPath, c.paths.appConfig.dir);\n    }\n\n    // FOLDER MERGERS FROM APP CONFIG (PRIVATE)\n    const sourcePath0sec = getBuildsFolder(c, platform, c.paths.workspace.appConfig.dir);\n    copyFolderContentsRecursiveSync(sourcePath0sec, destPath);\n\n    parsePlugins(c, platform, (plugin, pluginPlat, key) => {\n        // FOLDER MERGES FROM PROJECT CONFIG PLUGIN\n        const sourcePath3 = getBuildsFolder(c, platform, path.join(c.paths.project.projectConfig.dir, `plugins/${key}`));\n        copyFolderContentsRecursiveSync(sourcePath3, destPath);\n\n        // FOLDER MERGES FROM PROJECT CONFIG PLUGIN (PRIVATE)\n        const sourcePath3sec = getBuildsFolder(c, platform, path.join(c.paths.workspace.project.projectConfig.dir, `plugins/${key}`));\n        copyFolderContentsRecursiveSync(sourcePath3sec, destPath);\n\n        // FOLDER MERGES FROM APP CONFIG PLUGIN\n        const sourcePath2 = getBuildsFolder(c, platform, path.join(c.paths.appConfig.dir, `plugins/${key}`));\n        copyFolderContentsRecursiveSync(sourcePath2, destPath);\n\n        // FOLDER MERGES FROM APP CONFIG PLUGIN (PRIVATE)\n        const sourcePath2sec = getBuildsFolder(c, platform, path.join(c.paths.workspace.appConfig.dir, `plugins/${key}`));\n        copyFolderContentsRecursiveSync(sourcePath2sec, destPath);\n    });\n\n    resolve();\n});\n\nexport const upgradeProjectDependencies = (c, version) => {\n    logTask('upgradeProjectDependencies');\n\n    const thw = 'renative-template-hello-world';\n    const tb = 'renative-template-blank';\n    const devDependencies = c.files.project.package?.devDependencies;\n    if (devDependencies?.rnv) {\n        devDependencies.rnv = version;\n    }\n    if (devDependencies[thw]) {\n        devDependencies[thw] = version;\n    }\n    if (devDependencies[tb]) {\n        devDependencies[tb] = version;\n    }\n    if (devDependencies?.renative) {\n        devDependencies.renative = version;\n    }\n\n    writeFileSync(c.paths.project.package, c.files.project.package);\n\n    if (c.files.project.config?.templates?.[thw]?.version) c.files.project.config.templates[thw].version = version;\n    if (c.files.project.config?.templates?.[tb]?.version) c.files.project.config.templates[tb].version = version;\n\n    c._requiresNpmInstall = true;\n\n    writeFileSync(c.paths.project.config, c.files.project.config);\n};\n\nexport const configureNodeModules = c => new Promise((resolve, reject) => {\n    logTask('configureNodeModules');\n    // Check node_modules\n    if (!fs.existsSync(c.paths.project.nodeModulesDir) || c._requiresNpmInstall && !c.runtime.skipPackageUpdate) {\n        if (!fs.existsSync(c.paths.project.nodeModulesDir)) {\n            logWarning(\n                `Looks like your node_modules folder ${chalk.white(c.paths.project.nodeModulesDir)} is missing! Let's run ${chalk.white(\n                    'npm install',\n                )} first!`,\n            );\n        } else {\n            logWarning(`Looks like your node_modules out of date! Let's run ${chalk.white('npm install')} first!`);\n        }\n        c._requiresNpmInstall = false;\n        npmInstall().then(() => resolve()).catch(e => reject(e));\n    } else {\n        resolve();\n    }\n});\n\nexport const cleanPlaformAssets = async (c) => {\n    logTask('cleanPlaformAssets');\n\n    await cleanFolder(c.paths.project.assets.dir);\n    mkdirSync(c.paths.project.assets.runtimeDir);\n    return true;\n};\n"],"mappings":"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"}