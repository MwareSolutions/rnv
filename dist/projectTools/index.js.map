{"version":3,"file":"index.js","names":["rnvConfigure","c","p","platform","logTask","Config","injectPlatformDependencies","_checkAndCreatePlatforms","copyRuntimeAssets","copySharedPlatforms","generateRuntimeConfig","ptDirs","paths","rnv","pluginTemplates","dirs","i","length","overridePlugins","project","projectConfig","pluginsDir","originalPlatform","_configurePlatform","ANDROID","configureGradleProject","ANDROID_TV","ANDROID_WEAR","TIZEN","configureTizenProject","TIZEN_WATCH","TIZEN_MOBILE","WEBOS","configureWebOSProject","WEB","configureWebProject","MACOS","configureElectronProject","WINDOWS","KAIOS","configureKaiOSProject","FIREFOX_OS","FIREFOX_TV","IOS","configureXcodeProject","TVOS","method","_isOK","rnvSwitch","Promise","resolve","reject","program","then","catch","e","rnvLink","fs","existsSync","npmLinkPolyfill","l","JSON","parse","readFileSync","toString","Object","keys","forEach","key","source","path","nm","join","dest","nodeModulesDir","copyFolderContentsRecursiveSync","logWarning","list","result","v","isPlatformActive","builds","dir","CLI","command","subCommand","appConfig","runtime","appId","appFolder","getAppFolder","platforms","buildConfig","chalk","white","config","ks","k","pluginsPath","grey","logInfo","readdirSync","startsWith","pluginsPathNested","subDir","_overridePlugins","overrideConfig","readObjectSync","overrides","override","ovDir","lstatSync","isDirectory","fileToFix","fk","replace","RegExp","writeFileSync"],"sources":["../../src/projectTools/index.js"],"sourcesContent":["/* eslint-disable import/no-cycle */\n// @todo fix cycle dep\nimport path from 'path';\nimport fs from 'fs';\nimport chalk from 'chalk';\nimport {\n    getAppFolder,\n} from '../common';\nimport { isPlatformActive } from '../platformTools';\nimport {\n    logTask,\n    logWarning,\n    logInfo,\n} from '../systemTools/logger';\nimport {\n    IOS,\n    ANDROID,\n    TVOS,\n    TIZEN,\n    WEBOS,\n    ANDROID_TV,\n    ANDROID_WEAR,\n    WEB,\n    MACOS,\n    WINDOWS,\n    TIZEN_MOBILE,\n    TIZEN_WATCH,\n    KAIOS,\n    FIREFOX_OS,\n    FIREFOX_TV,\n} from '../constants';\nimport { configureXcodeProject } from '../platformTools/apple';\nimport { configureGradleProject } from '../platformTools/android';\nimport { configureTizenProject } from '../platformTools/tizen';\nimport { configureWebOSProject } from '../platformTools/webos';\nimport { configureElectronProject } from '../platformTools/electron';\nimport { configureKaiOSProject } from '../platformTools/firefox';\nimport { configureWebProject } from '../platformTools/web';\nimport { copyFolderContentsRecursiveSync, readObjectSync } from '../systemTools/fileutils';\nimport CLI from '../cli';\nimport { copyRuntimeAssets, copySharedPlatforms } from './projectParser';\nimport { generateRuntimeConfig } from '../configTools/configParser';\nimport Config from '../config';\nimport { commandExistsSync, executeAsync } from '../systemTools/exec';\n\nexport const rnvConfigure = async (c) => {\n    const p = c.platform || 'all';\n    logTask(`rnvConfigure:${c.platform}:${p}`);\n\n    // inject packages if needed\n    if (p !== 'all') await Config.injectPlatformDependencies(p);\n\n    await _checkAndCreatePlatforms(c, c.platform);\n    await copyRuntimeAssets(c);\n    await copySharedPlatforms(c);\n    await generateRuntimeConfig(c);\n    const ptDirs = c.paths.rnv.pluginTemplates.dirs;\n    for (let i = 0; i < ptDirs.length; i++) {\n        await overridePlugins(c, ptDirs[i]);\n    }\n    // await overridePlugins(c, c.paths.rnv.pluginTemplates.dir);\n    await overridePlugins(c, c.paths.project.projectConfig.pluginsDir);\n\n    const originalPlatform = c.platform;\n\n    await _configurePlatform(c, p, ANDROID, configureGradleProject);\n    await _configurePlatform(c, p, ANDROID_TV, configureGradleProject);\n    await _configurePlatform(c, p, ANDROID_WEAR, configureGradleProject);\n    await _configurePlatform(c, p, TIZEN, configureTizenProject);\n    await _configurePlatform(c, p, TIZEN_WATCH, configureTizenProject);\n    await _configurePlatform(c, p, TIZEN_MOBILE, configureTizenProject);\n    await _configurePlatform(c, p, WEBOS, configureWebOSProject);\n    await _configurePlatform(c, p, WEB, configureWebProject);\n    await _configurePlatform(c, p, MACOS, configureElectronProject);\n    await _configurePlatform(c, p, WINDOWS, configureElectronProject);\n    await _configurePlatform(c, p, KAIOS, configureKaiOSProject);\n    await _configurePlatform(c, p, FIREFOX_OS, configureKaiOSProject);\n    await _configurePlatform(c, p, FIREFOX_TV, configureKaiOSProject);\n    await _configurePlatform(c, p, IOS, configureXcodeProject);\n    await _configurePlatform(c, p, TVOS, configureXcodeProject);\n\n    c.platform = originalPlatform;\n};\n\nconst _configurePlatform = async (c, p, platform, method) => {\n    if (_isOK(c, p, [platform])) {\n        c.platform = platform;\n        await method(c, platform);\n    }\n};\n\nexport const rnvSwitch = c => new Promise((resolve, reject) => {\n    const p = c.program.platform || 'all';\n    logTask(`rnvSwitch:${p}`);\n\n\n    copyRuntimeAssets(c)\n        .then(() => copySharedPlatforms(c))\n        .then(() => generateRuntimeConfig(c))\n        .then(() => resolve())\n        .catch(e => reject(e));\n});\n\nexport const rnvLink = c => new Promise((resolve) => {\n    if (fs.existsSync(c.paths.project.npmLinkPolyfill)) {\n        const l = JSON.parse(fs.readFileSync(c.paths.project.npmLinkPolyfill).toString());\n        Object.keys(l).forEach((key) => {\n            // console.log('COPY', key, l[key]);\n            const source = path.resolve(l[key]);\n            const nm = path.join(source, 'node_modules');\n            const dest = path.join(c.paths.project.nodeModulesDir, key);\n            if (fs.existsSync(source)) {\n                copyFolderContentsRecursiveSync(source, dest, false, [nm]);\n            } else {\n                logWarning(`Source: ${source} doesn't exists!`);\n            }\n        });\n    } else {\n        logWarning(`${c.paths.project.npmLinkPolyfill} file not found. nothing to link!`);\n        resolve();\n    }\n});\n\nconst _isOK = (c, p, list) => {\n    let result = false;\n    list.forEach((v) => {\n        if (isPlatformActive(c, v) && (p === v || p === 'all')) result = true;\n    });\n    return result;\n};\n\n\nconst _checkAndCreatePlatforms = async (c, platform) => {\n    logTask(`_checkAndCreatePlatforms:${platform}`);\n\n    if (!fs.existsSync(c.paths.project.builds.dir)) {\n        logWarning('Platforms not created yet. creating them for you...');\n        await CLI(c, {\n            command: 'platform',\n            subCommand: 'configure',\n            program: { appConfig: c.runtime.appId, platform }\n        });\n        return;\n    }\n    if (platform) {\n        const appFolder = getAppFolder(c, platform);\n        if (!fs.existsSync(appFolder)) {\n            logWarning(`Platform ${platform} not created yet. creating them for you at ${appFolder}`);\n            await CLI(c, {\n                command: 'platform',\n                subCommand: 'configure',\n                program: { appConfig: c.runtime.appId, platform }\n            });\n        }\n    } else {\n        const { platforms } = c.buildConfig;\n        if (!platforms) {\n            reject(`Your ${chalk.white(c.paths.appConfig.config)} is missconfigured. (Maybe you have older version?). Missing ${chalk.white('{ platforms: {} }')} object at root`);\n            return;\n        }\n        const ks = Object.keys(platforms);\n        for (let i = 0; i < ks.length; i++) {\n            const k = ks[i];\n            const appFolder = getAppFolder(c, k);\n            if (!fs.existsSync(appFolder)) {\n                logWarning(`Platform ${k} not created yet. creating one for you at ${appFolder}`);\n                await CLI(c, {\n                    command: 'platform',\n                    subCommand: 'configure',\n                    platform: k,\n                    program: { appConfig: c.runtime.appId, platform: k }\n                });\n            }\n        }\n    }\n};\n\nconst overridePlugins = (c, pluginsPath) => new Promise((resolve) => {\n    logTask(`overridePlugins:${pluginsPath}`, chalk.grey);\n\n    if (!fs.existsSync(pluginsPath)) {\n        logInfo(`Your project plugin folder ${chalk.white(pluginsPath)} does not exists. skipping plugin configuration`);\n        resolve();\n        return;\n    }\n\n    fs.readdirSync(pluginsPath).forEach((dir) => {\n        if (dir.startsWith('@')) {\n            const pluginsPathNested = path.join(pluginsPath, dir);\n            fs.readdirSync(pluginsPathNested).forEach((subDir) => {\n                _overridePlugins(c, pluginsPath, `${dir}/${subDir}`);\n            });\n        } else {\n            _overridePlugins(c, pluginsPath, dir);\n        }\n    });\n\n    resolve();\n});\n\nconst _overridePlugins = (c, pluginsPath, dir) => {\n    const source = path.resolve(pluginsPath, dir, 'overrides');\n    const dest = path.resolve(c.paths.project.dir, 'node_modules', dir);\n\n    if (fs.existsSync(source)) {\n        copyFolderContentsRecursiveSync(source, dest, false);\n        // fs.readdirSync(pp).forEach((dir) => {\n        //     copyFileSync(path.resolve(pp, file), path.resolve(c.paths.project.dir, 'node_modules', dir));\n        // });\n    } else {\n        logInfo(`Your plugin configuration has no override path ${chalk.white(source)}. skipping folder override action`);\n    }\n\n    const overrideConfig = readObjectSync(path.resolve(pluginsPath, dir, 'overrides.json'));\n    if (overrideConfig?.overrides) {\n        for (const k in overrideConfig.overrides) {\n            const override = overrideConfig.overrides[k];\n            ovDir = path.join(dest, k);\n            if (fs.existsSync(ovDir)) {\n                if (fs.lstatSync(ovDir).isDirectory()) {\n                    logWarning('overrides.json: Directories not supported yet. specify path to actual file');\n                } else {\n                    let fileToFix = fs.readFileSync(ovDir).toString();\n                    for (const fk in override) {\n                        fileToFix = fileToFix.replace(new RegExp(fk, 'g'), override[fk]);\n                    }\n                    fs.writeFileSync(ovDir, fileToFix);\n                }\n            }\n        }\n    }\n};\n"],"mappings":"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"}