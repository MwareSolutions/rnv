{"version":3,"sources":["../../src/projectTools/index.js"],"names":["rnvConfigure","c","p","platform","Config","injectPlatformDependencies","_checkAndCreatePlatforms","ptDirs","paths","rnv","pluginTemplates","dirs","i","length","overridePlugins","project","projectConfig","pluginsDir","originalPlatform","_configurePlatform","ANDROID","configureGradleProject","ANDROID_TV","ANDROID_WEAR","TIZEN","configureTizenProject","TIZEN_WATCH","TIZEN_MOBILE","WEBOS","configureWebOSProject","WEB","configureWebProject","MACOS","configureElectronProject","WINDOWS","KAIOS","configureKaiOSProject","FIREFOX_OS","FIREFOX_TV","IOS","configureXcodeProject","TVOS","method","_isOK","rnvSwitch","Promise","resolve","reject","program","then","catch","e","rnvLink","fs","existsSync","npmLinkPolyfill","l","JSON","parse","readFileSync","toString","Object","keys","forEach","key","source","path","nm","join","dest","nodeModulesDir","list","result","v","builds","dir","command","subCommand","appConfig","runtime","appId","appFolder","platforms","buildConfig","chalk","white","config","ks","k","pluginsPath","grey","readdirSync","startsWith","pluginsPathNested","subDir","_overridePlugins","overrideConfig","overrides","override","ovDir","lstatSync","isDirectory","fileToFix","fk","replace","RegExp","writeFileSync"],"mappings":";;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;;;;AAKA;;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,GAAMA,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAOC,CAAP;AAClBC,CADkB,CACdD,CAAC,CAACE,QAAF,EAAc,KADA;AAExB,oCAAwBF,CAAC,CAACE,QAA1B,KAAsCD,CAAtC,EAFwB;;;AAKpBA,CAAC,GAAK,KALc,4EAKDE,gBAAOC,0BAAP,CAAkCH,CAAlC,CALC;;AAOlBI,wBAAwB,CAACL,CAAD,CAAIA,CAAC,CAACE,QAAN,CAPN;AAQlB,qCAAkBF,CAAlB,CARkB;AASlB,uCAAoBA,CAApB,CATkB;AAUlB,wCAAsBA,CAAtB,CAVkB;AAWlBM,MAXkB,CAWTN,CAAC,CAACO,KAAF,CAAQC,GAAR,CAAYC,eAAZ,CAA4BC,IAXnB;AAYfC,CAZe,CAYX,CAZW,cAYRA,CAAC,CAAGL,MAAM,CAACM,MAZH;AAadC,eAAe,CAACb,CAAD,CAAIM,MAAM,CAACK,CAAD,CAAV,CAbD,UAYWA,CAAC,EAZZ;;;AAgBlBE,eAAe,CAACb,CAAD,CAAIA,CAAC,CAACO,KAAF,CAAQO,OAAR,CAAgBC,aAAhB,CAA8BC,UAAlC,CAhBG;;AAkBlBC,gBAlBkB,CAkBCjB,CAAC,CAACE,QAlBH;;AAoBlBgB,kBAAkB,CAAClB,CAAD,CAAIC,CAAJ,CAAOkB,kBAAP,CAAgBC,+BAAhB,CApBA;AAqBlBF,kBAAkB,CAAClB,CAAD,CAAIC,CAAJ,CAAOoB,qBAAP,CAAmBD,+BAAnB,CArBA;AAsBlBF,kBAAkB,CAAClB,CAAD,CAAIC,CAAJ,CAAOqB,uBAAP,CAAqBF,+BAArB,CAtBA;AAuBlBF,kBAAkB,CAAClB,CAAD,CAAIC,CAAJ,CAAOsB,gBAAP,CAAcC,4BAAd,CAvBA;AAwBlBN,kBAAkB,CAAClB,CAAD,CAAIC,CAAJ,CAAOwB,sBAAP,CAAoBD,4BAApB,CAxBA;AAyBlBN,kBAAkB,CAAClB,CAAD,CAAIC,CAAJ,CAAOyB,uBAAP,CAAqBF,4BAArB,CAzBA;AA0BlBN,kBAAkB,CAAClB,CAAD,CAAIC,CAAJ,CAAO0B,gBAAP,CAAcC,4BAAd,CA1BA;AA2BlBV,kBAAkB,CAAClB,CAAD,CAAIC,CAAJ,CAAO4B,cAAP,CAAYC,wBAAZ,CA3BA;AA4BlBZ,kBAAkB,CAAClB,CAAD,CAAIC,CAAJ,CAAO8B,gBAAP,CAAcC,kCAAd,CA5BA;AA6BlBd,kBAAkB,CAAClB,CAAD,CAAIC,CAAJ,CAAOgC,kBAAP,CAAgBD,kCAAhB,CA7BA;AA8BlBd,kBAAkB,CAAClB,CAAD,CAAIC,CAAJ,CAAOiC,gBAAP,CAAcC,8BAAd,CA9BA;AA+BlBjB,kBAAkB,CAAClB,CAAD,CAAIC,CAAJ,CAAOmC,qBAAP,CAAmBD,8BAAnB,CA/BA;AAgClBjB,kBAAkB,CAAClB,CAAD,CAAIC,CAAJ,CAAOoC,qBAAP,CAAmBF,8BAAnB,CAhCA;AAiClBjB,kBAAkB,CAAClB,CAAD,CAAIC,CAAJ,CAAOqC,cAAP,CAAYC,4BAAZ,CAjCA;AAkClBrB,kBAAkB,CAAClB,CAAD,CAAIC,CAAJ,CAAOuC,eAAP,CAAaD,4BAAb,CAlCA;;AAoCxBvC,CAAC,CAACE,QAAF,CAAae,gBAAb,CApCwB,sEAArB,C;;;AAuCP,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAOlB,CAAP,CAAUC,CAAV,CAAaC,QAAb,CAAuBuC,MAAvB;AACnBC,KAAK,CAAC1C,CAAD,CAAIC,CAAJ,CAAO,CAACC,QAAD,CAAP,CADc;AAEnBF,CAAC,CAACE,QAAF,CAAaA,QAAb,CAFmB;AAGbuC,MAAM,CAACzC,CAAD,CAAIE,QAAJ,CAHO,wEAA3B;;;;AAOO,GAAMyC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAA3C,CAAC,QAAI,IAAI4C,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB;AAC3D,GAAM7C,CAAAA,CAAC,CAAGD,CAAC,CAAC+C,OAAF,CAAU7C,QAAV,EAAsB,KAAhC;AACA,iCAAqBD,CAArB;;;AAGA,qCAAkBD,CAAlB;AACKgD,IADL,CACU,iBAAM,uCAAoBhD,CAApB,CAAN,EADV;AAEKgD,IAFL,CAEU,iBAAM,wCAAsBhD,CAAtB,CAAN,EAFV;AAGKgD,IAHL,CAGU,iBAAMH,CAAAA,OAAO,EAAb,EAHV;AAIKI,KAJL,CAIW,SAAAC,CAAC,QAAIJ,CAAAA,MAAM,CAACI,CAAD,CAAV,EAJZ;AAKH,CAV6B,CAAJ,EAAnB,C;;AAYA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAnD,CAAC,QAAI,IAAI4C,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAa;AACjD,GAAIO,YAAGC,UAAH,CAAcrD,CAAC,CAACO,KAAF,CAAQO,OAAR,CAAgBwC,eAA9B,CAAJ,CAAoD;AAChD,GAAMC,CAAAA,CAAC,CAAGC,IAAI,CAACC,KAAL,CAAWL,YAAGM,YAAH,CAAgB1D,CAAC,CAACO,KAAF,CAAQO,OAAR,CAAgBwC,eAAhC,EAAiDK,QAAjD,EAAX,CAAV;AACAC,MAAM,CAACC,IAAP,CAAYN,CAAZ,EAAeO,OAAf,CAAuB,SAACC,GAAD,CAAS;;AAE5B,GAAMC,CAAAA,MAAM,CAAGC,cAAKpB,OAAL,CAAaU,CAAC,CAACQ,GAAD,CAAd,CAAf;AACA,GAAMG,CAAAA,EAAE,CAAGD,cAAKE,IAAL,CAAUH,MAAV,CAAkB,cAAlB,CAAX;AACA,GAAMI,CAAAA,IAAI,CAAGH,cAAKE,IAAL,CAAUnE,CAAC,CAACO,KAAF,CAAQO,OAAR,CAAgBuD,cAA1B,CAA0CN,GAA1C,CAAb;AACA,GAAIX,YAAGC,UAAH,CAAcW,MAAd,CAAJ,CAA2B;AACvB,+CAAgCA,MAAhC,CAAwCI,IAAxC,CAA8C,KAA9C,CAAqD,CAACF,EAAD,CAArD;AACH,CAFD,IAEO;AACH,kCAAsBF,MAAtB;AACH;AACJ,CAVD;AAWH,CAbD,IAaO;AACH,uBAAchE,CAAC,CAACO,KAAF,CAAQO,OAAR,CAAgBwC,eAA9B;AACAT,OAAO;AACV;AACJ,CAlB2B,CAAJ,EAAjB,C;;AAoBP,GAAMH,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAAC1C,CAAD,CAAIC,CAAJ,CAAOqE,IAAP,CAAgB;AAC1B,GAAIC,CAAAA,MAAM,CAAG,KAAb;AACAD,IAAI,CAACR,OAAL,CAAa,SAACU,CAAD,CAAO;AAChB,GAAI,oCAAiBxE,CAAjB,CAAoBwE,CAApB,IAA2BvE,CAAC,GAAKuE,CAAN,EAAWvE,CAAC,GAAK,KAA5C,CAAJ,CAAwDsE,MAAM,CAAG,IAAT;AAC3D,CAFD;AAGA,MAAOA,CAAAA,MAAP;AACH,CAND;;;AASA,GAAMlE,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAAOL,CAAP,CAAUE,QAAV;AAC7B,gDAAoCA,QAApC,EAD6B;;AAGxBkD,YAAGC,UAAH,CAAcrD,CAAC,CAACO,KAAF,CAAQO,OAAR,CAAgB2D,MAAhB,CAAuBC,GAArC,CAHwB;AAIzB,uBAAW,qDAAX,EAJyB;AAKnB,iBAAI1E,CAAJ,CAAO;AACT2E,OAAO,CAAE,UADA;AAETC,UAAU,CAAE,WAFH;AAGT7B,OAAO,CAAE,CAAE8B,SAAS,CAAE7E,CAAC,CAAC8E,OAAF,CAAUC,KAAvB,CAA8B7E,QAAQ,CAARA,QAA9B,CAHA,CAAP,CALmB;;;;AAYzBA,QAZyB;AAanB8E,SAbmB,CAaP,yBAAahF,CAAb,CAAgBE,QAAhB,CAbO;AAcpBkD,YAAGC,UAAH,CAAc2B,SAAd,CAdoB;AAerB,mCAAuB9E,QAAvB,+CAA6E8E,SAA7E,EAfqB;AAgBf,iBAAIhF,CAAJ,CAAO;AACT2E,OAAO,CAAE,UADA;AAETC,UAAU,CAAE,WAFH;AAGT7B,OAAO,CAAE,CAAE8B,SAAS,CAAE7E,CAAC,CAAC8E,OAAF,CAAUC,KAAvB,CAA8B7E,QAAQ,CAARA,QAA9B,CAHA,CAAP,CAhBe;;;;AAuBjB+E,SAvBiB,CAuBHjF,CAAC,CAACkF,WAvBC,CAuBjBD,SAvBiB;AAwBpBA,SAxBoB;AAyBrBnC,MAAM,SAASqC,eAAMC,KAAN,CAAYpF,CAAC,CAACO,KAAF,CAAQsE,SAAR,CAAkBQ,MAA9B,CAAT,iEAA8GF,eAAMC,KAAN,CAAY,mBAAZ,CAA9G,mBAAN,CAzBqB;;;AA4BnBE,EA5BmB,CA4Bd1B,MAAM,CAACC,IAAP,CAAYoB,SAAZ,CA5Bc;AA6BhBtE,CA7BgB,CA6BZ,CA7BY,cA6BTA,CAAC,CAAG2E,EAAE,CAAC1E,MA7BE;AA8Bf2E,CA9Be,CA8BXD,EAAE,CAAC3E,CAAD,CA9BS;AA+BfqE,UA/Be,CA+BH,yBAAahF,CAAb,CAAgBuF,CAAhB,CA/BG;AAgChBnC,YAAGC,UAAH,CAAc2B,UAAd,CAhCgB;AAiCjB,mCAAuBO,CAAvB,8CAAqEP,UAArE,EAjCiB;AAkCX,iBAAIhF,CAAJ,CAAO;AACT2E,OAAO,CAAE,UADA;AAETC,UAAU,CAAE,WAFH;AAGT1E,QAAQ,CAAEqF,CAHD;AAITxC,OAAO,CAAE,CAAE8B,SAAS,CAAE7E,CAAC,CAAC8E,OAAF,CAAUC,KAAvB,CAA8B7E,QAAQ,CAAEqF,CAAxC,CAJA,CAAP,CAlCW,UA6BM5E,CAAC,EA7BP,gGAAjC;;;;;;;AA6CA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACb,CAAD,CAAIwF,WAAJ,QAAoB,IAAI5C,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAa;AACjE,uCAA2B2C,WAA3B,CAA0CL,eAAMM,IAAhD;;AAEA,GAAI,CAACrC,YAAGC,UAAH,CAAcmC,WAAd,CAAL,CAAiC;AAC7B,kDAAsCL,eAAMC,KAAN,CAAYI,WAAZ,CAAtC;AACA3C,OAAO;AACP;AACH;;AAEDO,YAAGsC,WAAH,CAAeF,WAAf,EAA4B1B,OAA5B,CAAoC,SAACY,GAAD,CAAS;AACzC,GAAIA,GAAG,CAACiB,UAAJ,CAAe,GAAf,CAAJ,CAAyB;AACrB,GAAMC,CAAAA,iBAAiB,CAAG3B,cAAKE,IAAL,CAAUqB,WAAV,CAAuBd,GAAvB,CAA1B;AACAtB,YAAGsC,WAAH,CAAeE,iBAAf,EAAkC9B,OAAlC,CAA0C,SAAC+B,MAAD,CAAY;AAClDC,gBAAgB,CAAC9F,CAAD,CAAIwF,WAAJ,CAAoBd,GAApB,KAA2BmB,MAA3B,CAAhB;AACH,CAFD;AAGH,CALD,IAKO;AACHC,gBAAgB,CAAC9F,CAAD,CAAIwF,WAAJ,CAAiBd,GAAjB,CAAhB;AACH;AACJ,CATD;;AAWA7B,OAAO;AACV,CArB2C,CAApB,EAAxB;;AAuBA,GAAMiD,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAC9F,CAAD,CAAIwF,WAAJ,CAAiBd,GAAjB,CAAyB;AAC9C,GAAMV,CAAAA,MAAM,CAAGC,cAAKpB,OAAL,CAAa2C,WAAb,CAA0Bd,GAA1B,CAA+B,WAA/B,CAAf;AACA,GAAMN,CAAAA,IAAI,CAAGH,cAAKpB,OAAL,CAAa7C,CAAC,CAACO,KAAF,CAAQO,OAAR,CAAgB4D,GAA7B,CAAkC,cAAlC,CAAkDA,GAAlD,CAAb;;AAEA,GAAItB,YAAGC,UAAH,CAAcW,MAAd,CAAJ,CAA2B;AACvB,+CAAgCA,MAAhC,CAAwCI,IAAxC,CAA8C,KAA9C;;;;AAIH,CALD,IAKO;AACH,sEAA0De,eAAMC,KAAN,CAAYpB,MAAZ,CAA1D;AACH;;AAED,GAAM+B,CAAAA,cAAc,CAAG,8BAAe9B,cAAKpB,OAAL,CAAa2C,WAAb,CAA0Bd,GAA1B,CAA+B,gBAA/B,CAAf,CAAvB;AACA,GAAIqB,cAAJ,QAAIA,cAAc,CAAEC,SAApB,CAA+B;AAC3B,IAAK,GAAMT,CAAAA,CAAX,GAAgBQ,CAAAA,cAAc,CAACC,SAA/B,CAA0C;AACtC,GAAMC,CAAAA,QAAQ,CAAGF,cAAc,CAACC,SAAf,CAAyBT,CAAzB,CAAjB;AACAW,KAAK,CAAGjC,cAAKE,IAAL,CAAUC,IAAV,CAAgBmB,CAAhB,CAAR;AACA,GAAInC,YAAGC,UAAH,CAAc6C,KAAd,CAAJ,CAA0B;AACtB,GAAI9C,YAAG+C,SAAH,CAAaD,KAAb,EAAoBE,WAApB,EAAJ,CAAuC;AACnC,uBAAW,4EAAX;AACH,CAFD,IAEO;AACH,GAAIC,CAAAA,SAAS,CAAGjD,YAAGM,YAAH,CAAgBwC,KAAhB,EAAuBvC,QAAvB,EAAhB;AACA,IAAK,GAAM2C,CAAAA,EAAX,GAAiBL,CAAAA,QAAjB,CAA2B;AACvBI,SAAS,CAAGA,SAAS,CAACE,OAAV,CAAkB,GAAIC,CAAAA,MAAJ,CAAWF,EAAX,CAAe,GAAf,CAAlB,CAAuCL,QAAQ,CAACK,EAAD,CAA/C,CAAZ;AACH;AACDlD,YAAGqD,aAAH,CAAiBP,KAAjB,CAAwBG,SAAxB;AACH;AACJ;AACJ;AACJ;AACJ,CA/BD","sourcesContent":["/* eslint-disable import/no-cycle */\n// @todo fix cycle dep\nimport path from 'path';\nimport fs from 'fs';\nimport chalk from 'chalk';\nimport {\n    getAppFolder,\n} from '../common';\nimport { isPlatformActive } from '../platformTools';\nimport {\n    logTask,\n    logWarning,\n    logInfo,\n} from '../systemTools/logger';\nimport {\n    IOS,\n    ANDROID,\n    TVOS,\n    TIZEN,\n    WEBOS,\n    ANDROID_TV,\n    ANDROID_WEAR,\n    WEB,\n    MACOS,\n    WINDOWS,\n    TIZEN_MOBILE,\n    TIZEN_WATCH,\n    KAIOS,\n    FIREFOX_OS,\n    FIREFOX_TV,\n} from '../constants';\nimport { configureXcodeProject } from '../platformTools/apple';\nimport { configureGradleProject } from '../platformTools/android';\nimport { configureTizenProject } from '../platformTools/tizen';\nimport { configureWebOSProject } from '../platformTools/webos';\nimport { configureElectronProject } from '../platformTools/electron';\nimport { configureKaiOSProject } from '../platformTools/firefox';\nimport { configureWebProject } from '../platformTools/web';\nimport { copyFolderContentsRecursiveSync, readObjectSync } from '../systemTools/fileutils';\nimport CLI from '../cli';\nimport { copyRuntimeAssets, copySharedPlatforms } from './projectParser';\nimport { generateRuntimeConfig } from '../configTools/configParser';\nimport Config from '../config';\nimport { commandExistsSync, executeAsync } from '../systemTools/exec';\n\nexport const rnvConfigure = async (c) => {\n    const p = c.platform || 'all';\n    logTask(`rnvConfigure:${c.platform}:${p}`);\n\n    // inject packages if needed\n    if (p !== 'all') await Config.injectPlatformDependencies(p);\n\n    await _checkAndCreatePlatforms(c, c.platform);\n    await copyRuntimeAssets(c);\n    await copySharedPlatforms(c);\n    await generateRuntimeConfig(c);\n    const ptDirs = c.paths.rnv.pluginTemplates.dirs;\n    for (let i = 0; i < ptDirs.length; i++) {\n        await overridePlugins(c, ptDirs[i]);\n    }\n    // await overridePlugins(c, c.paths.rnv.pluginTemplates.dir);\n    await overridePlugins(c, c.paths.project.projectConfig.pluginsDir);\n\n    const originalPlatform = c.platform;\n\n    await _configurePlatform(c, p, ANDROID, configureGradleProject);\n    await _configurePlatform(c, p, ANDROID_TV, configureGradleProject);\n    await _configurePlatform(c, p, ANDROID_WEAR, configureGradleProject);\n    await _configurePlatform(c, p, TIZEN, configureTizenProject);\n    await _configurePlatform(c, p, TIZEN_WATCH, configureTizenProject);\n    await _configurePlatform(c, p, TIZEN_MOBILE, configureTizenProject);\n    await _configurePlatform(c, p, WEBOS, configureWebOSProject);\n    await _configurePlatform(c, p, WEB, configureWebProject);\n    await _configurePlatform(c, p, MACOS, configureElectronProject);\n    await _configurePlatform(c, p, WINDOWS, configureElectronProject);\n    await _configurePlatform(c, p, KAIOS, configureKaiOSProject);\n    await _configurePlatform(c, p, FIREFOX_OS, configureKaiOSProject);\n    await _configurePlatform(c, p, FIREFOX_TV, configureKaiOSProject);\n    await _configurePlatform(c, p, IOS, configureXcodeProject);\n    await _configurePlatform(c, p, TVOS, configureXcodeProject);\n\n    c.platform = originalPlatform;\n};\n\nconst _configurePlatform = async (c, p, platform, method) => {\n    if (_isOK(c, p, [platform])) {\n        c.platform = platform;\n        await method(c, platform);\n    }\n};\n\nexport const rnvSwitch = c => new Promise((resolve, reject) => {\n    const p = c.program.platform || 'all';\n    logTask(`rnvSwitch:${p}`);\n\n\n    copyRuntimeAssets(c)\n        .then(() => copySharedPlatforms(c))\n        .then(() => generateRuntimeConfig(c))\n        .then(() => resolve())\n        .catch(e => reject(e));\n});\n\nexport const rnvLink = c => new Promise((resolve) => {\n    if (fs.existsSync(c.paths.project.npmLinkPolyfill)) {\n        const l = JSON.parse(fs.readFileSync(c.paths.project.npmLinkPolyfill).toString());\n        Object.keys(l).forEach((key) => {\n            // console.log('COPY', key, l[key]);\n            const source = path.resolve(l[key]);\n            const nm = path.join(source, 'node_modules');\n            const dest = path.join(c.paths.project.nodeModulesDir, key);\n            if (fs.existsSync(source)) {\n                copyFolderContentsRecursiveSync(source, dest, false, [nm]);\n            } else {\n                logWarning(`Source: ${source} doesn't exists!`);\n            }\n        });\n    } else {\n        logWarning(`${c.paths.project.npmLinkPolyfill} file not found. nothing to link!`);\n        resolve();\n    }\n});\n\nconst _isOK = (c, p, list) => {\n    let result = false;\n    list.forEach((v) => {\n        if (isPlatformActive(c, v) && (p === v || p === 'all')) result = true;\n    });\n    return result;\n};\n\n\nconst _checkAndCreatePlatforms = async (c, platform) => {\n    logTask(`_checkAndCreatePlatforms:${platform}`);\n\n    if (!fs.existsSync(c.paths.project.builds.dir)) {\n        logWarning('Platforms not created yet. creating them for you...');\n        await CLI(c, {\n            command: 'platform',\n            subCommand: 'configure',\n            program: { appConfig: c.runtime.appId, platform }\n        });\n        return;\n    }\n    if (platform) {\n        const appFolder = getAppFolder(c, platform);\n        if (!fs.existsSync(appFolder)) {\n            logWarning(`Platform ${platform} not created yet. creating them for you at ${appFolder}`);\n            await CLI(c, {\n                command: 'platform',\n                subCommand: 'configure',\n                program: { appConfig: c.runtime.appId, platform }\n            });\n        }\n    } else {\n        const { platforms } = c.buildConfig;\n        if (!platforms) {\n            reject(`Your ${chalk.white(c.paths.appConfig.config)} is missconfigured. (Maybe you have older version?). Missing ${chalk.white('{ platforms: {} }')} object at root`);\n            return;\n        }\n        const ks = Object.keys(platforms);\n        for (let i = 0; i < ks.length; i++) {\n            const k = ks[i];\n            const appFolder = getAppFolder(c, k);\n            if (!fs.existsSync(appFolder)) {\n                logWarning(`Platform ${k} not created yet. creating one for you at ${appFolder}`);\n                await CLI(c, {\n                    command: 'platform',\n                    subCommand: 'configure',\n                    platform: k,\n                    program: { appConfig: c.runtime.appId, platform: k }\n                });\n            }\n        }\n    }\n};\n\nconst overridePlugins = (c, pluginsPath) => new Promise((resolve) => {\n    logTask(`overridePlugins:${pluginsPath}`, chalk.grey);\n\n    if (!fs.existsSync(pluginsPath)) {\n        logInfo(`Your project plugin folder ${chalk.white(pluginsPath)} does not exists. skipping plugin configuration`);\n        resolve();\n        return;\n    }\n\n    fs.readdirSync(pluginsPath).forEach((dir) => {\n        if (dir.startsWith('@')) {\n            const pluginsPathNested = path.join(pluginsPath, dir);\n            fs.readdirSync(pluginsPathNested).forEach((subDir) => {\n                _overridePlugins(c, pluginsPath, `${dir}/${subDir}`);\n            });\n        } else {\n            _overridePlugins(c, pluginsPath, dir);\n        }\n    });\n\n    resolve();\n});\n\nconst _overridePlugins = (c, pluginsPath, dir) => {\n    const source = path.resolve(pluginsPath, dir, 'overrides');\n    const dest = path.resolve(c.paths.project.dir, 'node_modules', dir);\n\n    if (fs.existsSync(source)) {\n        copyFolderContentsRecursiveSync(source, dest, false);\n        // fs.readdirSync(pp).forEach((dir) => {\n        //     copyFileSync(path.resolve(pp, file), path.resolve(c.paths.project.dir, 'node_modules', dir));\n        // });\n    } else {\n        logInfo(`Your plugin configuration has no override path ${chalk.white(source)}. skipping folder override action`);\n    }\n\n    const overrideConfig = readObjectSync(path.resolve(pluginsPath, dir, 'overrides.json'));\n    if (overrideConfig?.overrides) {\n        for (const k in overrideConfig.overrides) {\n            const override = overrideConfig.overrides[k];\n            ovDir = path.join(dest, k);\n            if (fs.existsSync(ovDir)) {\n                if (fs.lstatSync(ovDir).isDirectory()) {\n                    logWarning('overrides.json: Directories not supported yet. specify path to actual file');\n                } else {\n                    let fileToFix = fs.readFileSync(ovDir).toString();\n                    for (const fk in override) {\n                        fileToFix = fileToFix.replace(new RegExp(fk, 'g'), override[fk]);\n                    }\n                    fs.writeFileSync(ovDir, fileToFix);\n                }\n            }\n        }\n    }\n};\n"],"file":"index.js"}