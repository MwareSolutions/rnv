{"version":3,"file":"workspace.js","names":["rnvWorkspaceList","c","logTask","opts","generateOptions","files","rnv","configWorkspaces","workspaces","i","obj","mapping","defaultVal","isConnected","chalk","grey","bold","logToSummary","asString","rnvWorkspaceAdd","inquirerPrompt","name","type","message","validate","workspace","workspacePath","path","join","fs","existsSync","confirm","workspaceID","split","pop","replace","workspaceIDInput","createWorkspace","workspaceConfig","sdks","defaultWorkspace","config","defaultTargets","mkdirSync","writeFileSync","paths","getWorkspaceDirPath","wss","ws","runtime","selectedWorkspace","buildConfig","dirPath","wsDir","home","dir","logInfo","isWSConfirmed","program","ci","white","warningMessage","conf","globalConfigDir","logWarning","project","GLOBAL_RNV_DIR","rnvWorkspaceConnect","Object","keys","map","v","_getConnectionString","choices","selectedWS","remoteUrl","remote","url","connectMsg","green","rnvWorkspaceUpdate","getWorkspaceOptions","logDebug"],"sources":["../../src/projectTools/workspace.js"],"sourcesContent":["import chalk from 'chalk';\nimport path from 'path';\nimport fs from 'fs';\nimport { generateOptions, inquirerPrompt } from '../systemTools/prompt';\nimport {\n    logTask,\n    logWarning, logDebug, logInfo,\n    logToSummary\n} from '../systemTools/logger';\nimport { writeFileSync, mkdirSync } from '../systemTools/fileutils';\n\nexport const rnvWorkspaceList = async (c) => {\n    logTask('rnvWorkspaceList');\n\n\n    const opts = generateOptions(c.files.rnv.configWorkspaces?.workspaces, true, null, (i, obj, mapping, defaultVal) => {\n        const isConnected = '';\n        return ` [${chalk.grey(i + 1)}]> ${chalk.bold(defaultVal)}${isConnected} \\n`;\n    });\n\n    logToSummary(`Workspaces:\\n\\n${opts.asString}`);\n};\n\nexport const rnvWorkspaceAdd = async (c) => {\n    logTask('rnvWorkspaceAdd');\n\n    const { workspace } = await inquirerPrompt({\n        name: 'workspace',\n        type: 'input',\n        message: 'absolute path to new workspace',\n        validate: i => !!i || 'No path provided'\n    });\n\n    const workspacePath = path.join(workspace);\n\n    if (fs.existsSync(workspacePath)) {\n        const { confirm } = await inquirerPrompt({\n            name: 'confirm',\n            type: 'confirm',\n            message: `Folder ${workspacePath} already exists are you sure you want to override it?`,\n        });\n        if (!confirm) return;\n    }\n\n    let workspaceID = workspacePath.split('/').pop().replace(/@|\\./g, '');\n\n    const { workspaceIDInput } = await inquirerPrompt({\n        name: 'workspaceIDInput',\n        type: 'input',\n        message: `ID of the workspace (${workspaceID})`\n    });\n\n    workspaceID = workspaceIDInput || workspaceID;\n    createWorkspace(c, workspaceID, workspacePath);\n};\n\nexport const createWorkspace = async (c, workspaceID, workspacePath) => {\n    c.files.rnv.configWorkspaces.workspaces[workspaceID] = {\n        path: workspacePath\n    };\n\n    const workspaceConfig = {\n        sdks: c.files.defaultWorkspace?.config?.sdks,\n        defaultTargets: c.files.defaultWorkspace?.config?.defaultTargets,\n    };\n\n    mkdirSync(workspacePath);\n    writeFileSync(path.join(workspacePath, 'renative.json'), workspaceConfig);\n\n    writeFileSync(c.paths.rnv.configWorkspaces, c.files.rnv.configWorkspaces);\n    return true;\n};\n\nexport const getWorkspaceDirPath = async (c) => {\n    logTask('getWorkspaceDirPath');\n    const wss = c.files.rnv.configWorkspaces;\n    const ws = c.runtime.selectedWorkspace || c.buildConfig?.workspaceID;\n    let dirPath;\n    if (wss?.workspaces && ws) {\n        dirPath = wss.workspaces[ws]?.path;\n        if (!dirPath) {\n            const wsDir = path.join(c.paths.home.dir, `.${ws}`);\n            if (fs.existsSync(wsDir)) {\n                wss.workspaces[ws] = {\n                    path: wsDir\n                };\n                writeFileSync(c.paths.rnv.configWorkspaces, wss);\n                logInfo(`Found workspace id ${ws} and compatible directory ${wsDir}. Your ${c.paths.rnv.configWorkspaces} has been updated.`);\n            } else if (!c.runtime.isWSConfirmed || c.program.ci === true) {\n                let confirm = true;\n                if (c.program.ci !== true) {\n                    const { conf } = await inquirerPrompt({\n                        name: 'conf',\n                        type: 'confirm',\n                        message: `Your project belongs to workspace ${chalk.white(\n                            ws,\n                        )}. do you want to add new workspace ${chalk.white(\n                            ws,\n                        )} to your local system at ${chalk.white(wsDir)}?`,\n                        warningMessage: 'No app configs found for this project'\n                    });\n                    confirm = conf;\n                    c.runtime.isWSConfirmed = true;\n                }\n                if (confirm) {\n                    await createWorkspace(c, ws, wsDir);\n                }\n            }\n        }\n    }\n    if (c.buildConfig?.paths?.globalConfigDir) {\n        logWarning(`paths.globalConfigDir in ${c.paths.project.config} is DEPRECATED. use workspaceID instead. more info at https://renative.org/docs/workspaces`);\n    }\n    if (!dirPath) {\n        return c.buildConfig?.paths?.globalConfigDir || c.paths.GLOBAL_RNV_DIR;\n    }\n    return dirPath;\n};\n\nexport const rnvWorkspaceConnect = async (c) => {\n    logTask('rnvWorkspaceConnect');\n\n    const opts = Object.keys(c.files.rnv.configWorkspaces?.workspaces).map(v => `${v} ${_getConnectionString(c.files.rnv.configWorkspaces?.workspaces[v])}`);\n\n    const { selectedWS } = await inquirerPrompt({\n        type: 'list',\n        name: 'selectedWS',\n        message: 'Pick a workspace',\n        choices: opts\n    });\n};\n\nconst _getConnectionString = (obj) => {\n    const remoteUrl = obj.remote?.url;\n    const connectMsg = remoteUrl ? chalk.green(`(${obj.remote.type}:${remoteUrl})`) : '';\n    return connectMsg;\n};\n\nexport const rnvWorkspaceUpdate = async (c) => {\n    logTask('rnvWorkspaceUpdate');\n};\n\n\nexport const getWorkspaceOptions = c => generateOptions(c.files.rnv.configWorkspaces?.workspaces, false, null, (i, obj, mapping, defaultVal) => {\n    logDebug('getWorkspaceOptions');\n\n    return ` [${chalk.grey(i + 1)}]> ${chalk.bold(defaultVal)} ${_getConnectionString(obj)}\\n`;\n});\n"],"mappings":"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"}