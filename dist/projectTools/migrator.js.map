{"version":3,"file":"migrator.js","names":["checkAndMigrateProject","c","logTask","prjDir","paths","project","dir","globalConfig","path","join","GLOBAL_RNV_DIR","projectConfigDir","config","configNew","package","plugins","permissions","appConfigs","metroConfig","metroConfigNew","RN_CLI_CONFIG_NAME","appConfigDirs","listAppConfigsFoldersSync","map","v","e","logWarning","fs","existsSync","program","ci","Promise","reject","inquirer","prompt","name","type","message","confirm","reset","_migrateProject","_migrateProjectSoft","rnvClean","configureNodeModules","PATH_PROPS","oldKey","newKey","requiresSave","files","readObjectSync","forEach","chalk","white","packageString","readFileSync","toString","includes","writeFileSync","removeFilesSync","android","platforms","mergeObjects","androidtv","androidwear","ios","tvos","red","green","inquirerPrompt","copyFolderContentsRecursiveSync","projectConfig","removeDirs","logError","_migrateFile","oldPath","newPath","copyFileSync","resolve","workspace","logDebug","newConfig","projectName","defaults","defaultProjectConfigs","currentTemplate","template","templates","version","rnv","appConfigDir","defaultPorts","ports","crypto","pathsToDelete","concat","replace","logSuccess"],"sources":["../../src/projectTools/migrator.js"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport chalk from 'chalk';\nimport inquirer from 'inquirer';\n\nimport { logWarning, logTask, logDebug, logSuccess, logError } from '../systemTools/logger';\nimport { readObjectSync, mergeObjects, copyFileSync, removeFilesSync, writeFileSync, copyFolderContentsRecursiveSync, removeDirs } from '../systemTools/fileutils';\nimport { listAppConfigsFoldersSync } from '../configTools/configParser';\nimport { rnvClean } from '../systemTools/cleaner';\nimport { RN_CLI_CONFIG_NAME } from '../constants';\nimport { configureNodeModules } from './projectParser';\nimport { inquirerPrompt } from '../systemTools/prompt';\n\nexport const checkAndMigrateProject = async (c) => {\n    logTask('checkAndMigrateProject');\n    const prjDir = c.paths.project.dir;\n\n\n    const paths = {\n        project: prjDir,\n        globalConfig: path.join(c.paths.GLOBAL_RNV_DIR, 'config.json'),\n        // privateProjectConfig: path.join(c.paths.workspace.project.dir, 'config.json'),\n        // privateProjectConfig2: path.join(c.paths.workspace.project.dir, 'config.private.json'),\n        // privateProjectConfigNew: path.join(c.paths.workspace.project.dir, 'renative.private.json'),\n        projectConfigDir: path.join(prjDir, 'projectConfig'),\n        config: path.join(prjDir, 'rnv-config.json'),\n        configNew: path.join(prjDir, 'renative.json'),\n        package: path.join(prjDir, 'package.json'),\n        plugins: path.join(prjDir, 'projectConfig/plugins.json'),\n        permissions: path.join(prjDir, 'projectConfig/permissions.json'),\n        appConfigs: path.join(prjDir, 'appConfigs'),\n        metroConfig: path.join(prjDir, 'rn-cli.config.js'),\n        metroConfigNew: path.join(prjDir, RN_CLI_CONFIG_NAME)\n    };\n\n    try {\n        paths.appConfigDirs = listAppConfigsFoldersSync(c).map(v => `${prjDir}/appConfigs/${v}/config.json`);\n    } catch (e) {\n        logWarning(e);\n    }\n\n    if (fs.existsSync(paths.config)) {\n        if (c.program.ci) {\n            return Promise.reject('Your project has been created with previous version of ReNative');\n        }\n        const { confirm } = await inquirer.prompt({\n            name: 'confirm',\n            type: 'confirm',\n            message: 'Your project has been created with previous version of ReNative. Do you want to migrate it to new format? Backing up project is recommended!'\n        });\n\n        if (confirm) {\n            c.program.reset = true;\n            await _migrateProject(c, paths);\n            await _migrateProjectSoft(c, paths);\n            await rnvClean(c);\n            await configureNodeModules(c);\n            return true;\n        }\n    } else {\n        await _migrateProjectSoft(c, paths);\n    }\n    return true;\n};\n\nconst PATH_PROPS = [\n    { oldKey: 'globalConfigFolder', newKey: 'globalConfigDir' },\n    { oldKey: 'appConfigsFolder', newKey: 'appConfigsDir' },\n    { oldKey: 'platformTemplatesFolder', newKey: 'platformTemplatesDir' },\n    { oldKey: 'entryFolder', newKey: 'entryDir' },\n    { oldKey: 'platformAssetsFolder', newKey: 'platformAssetsDir' },\n    { oldKey: 'platformBuildsFolder', newKey: 'platformBuildsDir' },\n    { oldKey: 'projectConfigFolder', newKey: 'projectConfigDir' },\n];\n\nconst _migrateProjectSoft = async (c, paths) => {\n    logTask('_migrateProjectSoft');\n    let files;\n    try {\n        let requiresSave = false;\n        files = {\n            configNew: fs.existsSync(paths.configNew) ? readObjectSync(paths.configNew) : null,\n        };\n\n        if (files.configNew?.paths) {\n            PATH_PROPS.forEach((v) => {\n                if (files.configNew.paths[v.oldKey]) {\n                    logWarning(`You use old key ${chalk.white(v.oldKey)} instead of new one: ${chalk.white(v.newKey)}. ReNative will try to fix it for you!`);\n                    files.configNew.paths[v.newKey] = files.configNew.paths[v.oldKey];\n                    delete files.configNew.paths[v.oldKey];\n                    requiresSave = true;\n                }\n            });\n        }\n\n        if (fs.existsSync(paths.package)) {\n            const packageString = fs.readFileSync(paths.package).toString();\n            if (!packageString.includes('jetify') && !packageString.includes('postinstall')) {\n                logWarning(`You're missing ${chalk.white('\"scripts\": { \"postinstall\": \"jetify\" }')} in your package.json. Your android build might fail!`);\n            }\n        }\n\n        if (fs.existsSync(paths.metroConfig)) {\n            logWarning(`Found deprecated metro config ${paths.metroConfig} and it needs to be migrated to ${paths.metroConfigNew}. ReNative will try to fix it for you!`);\n            const metroConfig = fs.readFileSync(paths.metroConfig).toString();\n            fs.writeFileSync(paths.metroConfigNew, metroConfig);\n            removeFilesSync([paths.metroConfig]);\n        }\n\n        if (files.configNew?.android) {\n            logWarning('Found legacy object \"android\" at root. ReNative will try to fix it for you!');\n            files.configNew.platforms = files.configNew.platforms || {};\n\n            files.configNew.platforms.android = mergeObjects(c, files.configNew.platforms.android || {}, files.configNew.android);\n            if (files.configNew.platforms.androidtv) {\n                files.configNew.platforms.androidtv = mergeObjects(c, files.configNew.platforms.androidtv || {}, files.configNew.android);\n            }\n            if (files.configNew.platforms.androidwear) {\n                files.configNew.platforms.androidwear = mergeObjects(c, files.configNew.platforms.androidwear || {}, files.configNew.android);\n            }\n            delete files.configNew.android;\n            requiresSave = true;\n        }\n\n        if (files.configNew?.ios) {\n            logWarning('Found legacy object \"ios\" at root. ReNative will try to fix it for you!');\n            files.configNew.platforms = files.configNew.platforms || {};\n            files.configNew.platforms.ios = mergeObjects(c, files.configNew.platforms.ios || {}, files.configNew.ios);\n            if (files.configNew.platforms.tvos) {\n                files.configNew.platforms.tvos = mergeObjects(c, files.configNew.platforms.tvos || {}, files.configNew.ios);\n            }\n            delete files.configNew.ios;\n            requiresSave = true;\n        }\n\n        if (fs.existsSync(paths.permissions)) {\n            logWarning(`Found legacy object ${chalk.red(paths.permissions)}. this should be migrated to ${chalk.green('./renative.json')}`);\n        }\n\n        if (fs.existsSync(paths.plugins)) {\n            logWarning(`Found legacy object ${chalk.red(paths.plugins)}. this should be migrated to ${chalk.green('./renative.json')}`);\n        }\n\n        if (requiresSave) writeFileSync(paths.configNew, files.configNew);\n\n        if (fs.existsSync(paths.projectConfigDir)) {\n            const { confirm } = await inquirerPrompt({\n                type: 'confirm',\n                message: 'in RNV 0.28.12+ ./projectConfig has been migrated to ./appConfigs/base. confirm to migrate to new structure. (having a backup or clean git status is recommended)'\n            });\n\n            if (confirm) {\n                copyFolderContentsRecursiveSync(paths.projectConfigDir, c.paths.project.projectConfig.dir);\n\n                await removeDirs([paths.projectConfigDir]);\n            } else {\n                logError('Not migrating ./projectConfig will most likely result in errors');\n            }\n        }\n\n        // _migrateFile(paths.privateProjectConfig, paths.privateProjectConfigNew);\n        // _migrateFile(paths.privateProjectConfig2, paths.privateProjectConfigNew);\n    } catch (e) {\n        logError(`Migration not successfull. ${e}`);\n    }\n};\n\nconst _migrateFile = (oldPath, newPath) => {\n    if (!fs.existsSync(newPath)) {\n        if (fs.existsSync(oldPath)) {\n            logWarning(`Found old app config at ${chalk.white(oldPath)}. will copy to ${chalk.white(newPath)}`);\n        }\n        copyFileSync(oldPath, newPath);\n    }\n};\n\nconst _migrateProject = (c, paths) => new Promise((resolve, reject) => {\n    logTask('MIGRATION STARTED');\n\n    if (!fs.existsSync(c.paths.workspace.config)) {\n        if (fs.existsSync(paths.globalConfig)) {\n            copyFileSync(paths.globalConfig, c.paths.workspace.config);\n        }\n    }\n\n    const files = {\n        config: readObjectSync(paths.config),\n        package: readObjectSync(paths.package),\n        plugins: readObjectSync(paths.plugins),\n        permissions: readObjectSync(paths.permissions)\n    };\n\n    logDebug(`paths to migrate: \\n ${paths}`);\n\n    const newConfig = {};\n\n    if (files.package) {\n        newConfig.projectName = files.package.name;\n    }\n\n    if (files.config) {\n        newConfig.defaults = {};\n\n        if (files.config.defaultProjectConfigs) {\n            newConfig.defaults = mergeObjects(c, newConfig.defaults, files.config.defaultProjectConfigs);\n        }\n        newConfig.currentTemplate = newConfig.defaults.template || 'renative-template-hello-world';\n\n        newConfig.templates = {};\n\n        if (newConfig.defaults.template) {\n            newConfig.templates[newConfig.defaults.template] = {\n                version: c.files.rnv.package.version\n            };\n        }\n\n        delete newConfig.defaults.template;\n\n        newConfig.paths = {};\n        PATH_PROPS.forEach((v) => {\n            if (files.config[v.oldKey]) {\n                newConfig.paths[v.newKey] = files.config[v.oldKey];\n            }\n        });\n        newConfig.paths.appConfigDirs = [newConfig.paths.appConfigDir];\n        delete newConfig.paths.appConfigDir;\n\n        if (files.config.defaultPorts) {\n            newConfig.defaults.ports = files.config.defaultPorts;\n        }\n\n        if (files.config.crypto) {\n            newConfig.crypto = files.config.crypto;\n        }\n    }\n\n    if (!newConfig.platforms) newConfig.platforms = {};\n\n    if (files.plugins) {\n        newConfig.plugins = files.plugins.plugins;\n\n        if (files.plugins.android) {\n            newConfig.platforms.android = files.plugins.android;\n        }\n        if (files.plugins.ios) {\n            newConfig.platforms.ios = files.plugins.ios;\n        }\n    }\n\n    if (files.permissions) {\n        newConfig.permissions = files.permissions.permissions;\n    }\n\n    const pathsToDelete = [\n        paths.config,\n        paths.plugins,\n        paths.permissions\n    ].concat(paths.appConfigDirs);\n\n    paths.appConfigDirs.forEach((v) => {\n        if (fs.existsSync(v)) {\n            copyFileSync(v, v.replace('/config.json', '/renative.json'));\n        }\n    });\n\n    writeFileSync(c.paths.project.config, newConfig);\n\n    logDebug(`Paths to delete, ${pathsToDelete.join('\\n')}`);\n\n    removeFilesSync(pathsToDelete);\n\n    logSuccess('Migration Complete!');\n\n    resolve();\n});\n"],"mappings":"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"}