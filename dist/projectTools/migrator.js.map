{"version":3,"sources":["../../src/projectTools/migrator.js"],"names":["checkAndMigrateProject","c","prjDir","paths","project","dir","globalConfig","path","join","GLOBAL_RNV_DIR","projectConfigDir","config","configNew","package","plugins","permissions","appConfigs","metroConfig","metroConfigNew","RN_CLI_CONFIG_NAME","appConfigDirs","map","v","e","fs","existsSync","program","ci","Promise","reject","inquirer","prompt","name","type","message","confirm","reset","_migrateProject","_migrateProjectSoft","PATH_PROPS","oldKey","newKey","requiresSave","files","forEach","chalk","white","packageString","readFileSync","toString","includes","writeFileSync","android","platforms","androidtv","androidwear","ios","tvos","red","green","projectConfig","_migrateFile","oldPath","newPath","resolve","workspace","newConfig","projectName","defaults","defaultProjectConfigs","currentTemplate","template","templates","version","rnv","appConfigDir","defaultPorts","ports","crypto","pathsToDelete","concat","replace"],"mappings":"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","sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport chalk from 'chalk';\nimport inquirer from 'inquirer';\n\nimport { logWarning, logTask, logDebug, logSuccess, logError } from '../systemTools/logger';\nimport { readObjectSync, mergeObjects, copyFileSync, removeFilesSync, writeFileSync, copyFolderContentsRecursiveSync, removeDirs } from '../systemTools/fileutils';\nimport { listAppConfigsFoldersSync } from '../configTools/configParser';\nimport { rnvClean } from '../systemTools/cleaner';\nimport { RN_CLI_CONFIG_NAME } from '../constants';\nimport { configureNodeModules } from './projectParser';\nimport { inquirerPrompt } from '../systemTools/prompt';\n\nexport const checkAndMigrateProject = async (c) => {\n    logTask('checkAndMigrateProject');\n    const prjDir = c.paths.project.dir;\n\n\n    const paths = {\n        project: prjDir,\n        globalConfig: path.join(c.paths.GLOBAL_RNV_DIR, 'config.json'),\n        // privateProjectConfig: path.join(c.paths.workspace.project.dir, 'config.json'),\n        // privateProjectConfig2: path.join(c.paths.workspace.project.dir, 'config.private.json'),\n        // privateProjectConfigNew: path.join(c.paths.workspace.project.dir, 'renative.private.json'),\n        projectConfigDir: path.join(prjDir, 'projectConfig'),\n        config: path.join(prjDir, 'rnv-config.json'),\n        configNew: path.join(prjDir, 'renative.json'),\n        package: path.join(prjDir, 'package.json'),\n        plugins: path.join(prjDir, 'projectConfig/plugins.json'),\n        permissions: path.join(prjDir, 'projectConfig/permissions.json'),\n        appConfigs: path.join(prjDir, 'appConfigs'),\n        metroConfig: path.join(prjDir, 'rn-cli.config.js'),\n        metroConfigNew: path.join(prjDir, RN_CLI_CONFIG_NAME)\n    };\n\n    try {\n        paths.appConfigDirs = listAppConfigsFoldersSync(c).map(v => `${prjDir}/appConfigs/${v}/config.json`);\n    } catch (e) {\n        logWarning(e);\n    }\n\n    if (fs.existsSync(paths.config)) {\n        if (c.program.ci) {\n            return Promise.reject('Your project has been created with previous version of ReNative');\n        }\n        const { confirm } = await inquirer.prompt({\n            name: 'confirm',\n            type: 'confirm',\n            message: 'Your project has been created with previous version of ReNative. Do you want to migrate it to new format? Backing up project is recommended!'\n        });\n\n        if (confirm) {\n            c.program.reset = true;\n            await _migrateProject(c, paths);\n            await _migrateProjectSoft(c, paths);\n            await rnvClean(c);\n            await configureNodeModules(c);\n            return true;\n        }\n    } else {\n        await _migrateProjectSoft(c, paths);\n    }\n    return true;\n};\n\nconst PATH_PROPS = [\n    { oldKey: 'globalConfigFolder', newKey: 'globalConfigDir' },\n    { oldKey: 'appConfigsFolder', newKey: 'appConfigsDir' },\n    { oldKey: 'platformTemplatesFolder', newKey: 'platformTemplatesDir' },\n    { oldKey: 'entryFolder', newKey: 'entryDir' },\n    { oldKey: 'platformAssetsFolder', newKey: 'platformAssetsDir' },\n    { oldKey: 'platformBuildsFolder', newKey: 'platformBuildsDir' },\n    { oldKey: 'projectConfigFolder', newKey: 'projectConfigDir' },\n];\n\nconst _migrateProjectSoft = async (c, paths) => {\n    logTask('_migrateProjectSoft');\n    let files;\n    try {\n        let requiresSave = false;\n        files = {\n            configNew: fs.existsSync(paths.configNew) ? readObjectSync(paths.configNew) : null,\n        };\n\n        if (files.configNew?.paths) {\n            PATH_PROPS.forEach((v) => {\n                if (files.configNew.paths[v.oldKey]) {\n                    logWarning(`You use old key ${chalk.white(v.oldKey)} instead of new one: ${chalk.white(v.newKey)}. ReNative will try to fix it for you!`);\n                    files.configNew.paths[v.newKey] = files.configNew.paths[v.oldKey];\n                    delete files.configNew.paths[v.oldKey];\n                    requiresSave = true;\n                }\n            });\n        }\n\n        if (fs.existsSync(paths.package)) {\n            const packageString = fs.readFileSync(paths.package).toString();\n            if (!packageString.includes('jetify') && !packageString.includes('postinstall')) {\n                logWarning(`You're missing ${chalk.white('\"scripts\": { \"postinstall\": \"jetify\" }')} in your package.json. Your android build might fail!`);\n            }\n        }\n\n        if (fs.existsSync(paths.metroConfig)) {\n            logWarning(`Found deprecated metro config ${paths.metroConfig} and it needs to be migrated to ${paths.metroConfigNew}. ReNative will try to fix it for you!`);\n            const metroConfig = fs.readFileSync(paths.metroConfig).toString();\n            fs.writeFileSync(paths.metroConfigNew, metroConfig);\n            removeFilesSync([paths.metroConfig]);\n        }\n\n        if (files.configNew?.android) {\n            logWarning('Found legacy object \"android\" at root. ReNative will try to fix it for you!');\n            files.configNew.platforms = files.configNew.platforms || {};\n\n            files.configNew.platforms.android = mergeObjects(c, files.configNew.platforms.android || {}, files.configNew.android);\n            if (files.configNew.platforms.androidtv) {\n                files.configNew.platforms.androidtv = mergeObjects(c, files.configNew.platforms.androidtv || {}, files.configNew.android);\n            }\n            if (files.configNew.platforms.androidwear) {\n                files.configNew.platforms.androidwear = mergeObjects(c, files.configNew.platforms.androidwear || {}, files.configNew.android);\n            }\n            delete files.configNew.android;\n            requiresSave = true;\n        }\n\n        if (files.configNew?.ios) {\n            logWarning('Found legacy object \"ios\" at root. ReNative will try to fix it for you!');\n            files.configNew.platforms = files.configNew.platforms || {};\n            files.configNew.platforms.ios = mergeObjects(c, files.configNew.platforms.ios || {}, files.configNew.ios);\n            if (files.configNew.platforms.tvos) {\n                files.configNew.platforms.tvos = mergeObjects(c, files.configNew.platforms.tvos || {}, files.configNew.ios);\n            }\n            delete files.configNew.ios;\n            requiresSave = true;\n        }\n\n        if (fs.existsSync(paths.permissions)) {\n            logWarning(`Found legacy object ${chalk.red(paths.permissions)}. this should be migrated to ${chalk.green('./renative.json')}`);\n        }\n\n        if (fs.existsSync(paths.plugins)) {\n            logWarning(`Found legacy object ${chalk.red(paths.plugins)}. this should be migrated to ${chalk.green('./renative.json')}`);\n        }\n\n        if (requiresSave) writeFileSync(paths.configNew, files.configNew);\n\n        if (fs.existsSync(paths.projectConfigDir)) {\n            const { confirm } = await inquirerPrompt({\n                type: 'confirm',\n                message: 'in RNV 0.28.12+ ./projectConfig has been migrated to ./appConfigs/base. confirm to migrate to new structure. (having a backup or clean git status is recommended)'\n            });\n\n            if (confirm) {\n                copyFolderContentsRecursiveSync(paths.projectConfigDir, c.paths.project.projectConfig.dir);\n\n                await removeDirs([paths.projectConfigDir]);\n            } else {\n                logError('Not migrating ./projectConfig will most likely result in errors');\n            }\n        }\n\n        // _migrateFile(paths.privateProjectConfig, paths.privateProjectConfigNew);\n        // _migrateFile(paths.privateProjectConfig2, paths.privateProjectConfigNew);\n    } catch (e) {\n        logError(`Migration not successfull. ${e}`);\n    }\n};\n\nconst _migrateFile = (oldPath, newPath) => {\n    if (!fs.existsSync(newPath)) {\n        if (fs.existsSync(oldPath)) {\n            logWarning(`Found old app config at ${chalk.white(oldPath)}. will copy to ${chalk.white(newPath)}`);\n        }\n        copyFileSync(oldPath, newPath);\n    }\n};\n\nconst _migrateProject = (c, paths) => new Promise((resolve, reject) => {\n    logTask('MIGRATION STARTED');\n\n    if (!fs.existsSync(c.paths.workspace.config)) {\n        if (fs.existsSync(paths.globalConfig)) {\n            copyFileSync(paths.globalConfig, c.paths.workspace.config);\n        }\n    }\n\n    const files = {\n        config: readObjectSync(paths.config),\n        package: readObjectSync(paths.package),\n        plugins: readObjectSync(paths.plugins),\n        permissions: readObjectSync(paths.permissions)\n    };\n\n    logDebug(`paths to migrate: \\n ${paths}`);\n\n    const newConfig = {};\n\n    if (files.package) {\n        newConfig.projectName = files.package.name;\n    }\n\n    if (files.config) {\n        newConfig.defaults = {};\n\n        if (files.config.defaultProjectConfigs) {\n            newConfig.defaults = mergeObjects(c, newConfig.defaults, files.config.defaultProjectConfigs);\n        }\n        newConfig.currentTemplate = newConfig.defaults.template || 'renative-template-hello-world';\n\n        newConfig.templates = {};\n\n        if (newConfig.defaults.template) {\n            newConfig.templates[newConfig.defaults.template] = {\n                version: c.files.rnv.package.version\n            };\n        }\n\n        delete newConfig.defaults.template;\n\n        newConfig.paths = {};\n        PATH_PROPS.forEach((v) => {\n            if (files.config[v.oldKey]) {\n                newConfig.paths[v.newKey] = files.config[v.oldKey];\n            }\n        });\n        newConfig.paths.appConfigDirs = [newConfig.paths.appConfigDir];\n        delete newConfig.paths.appConfigDir;\n\n        if (files.config.defaultPorts) {\n            newConfig.defaults.ports = files.config.defaultPorts;\n        }\n\n        if (files.config.crypto) {\n            newConfig.crypto = files.config.crypto;\n        }\n    }\n\n    if (!newConfig.platforms) newConfig.platforms = {};\n\n    if (files.plugins) {\n        newConfig.plugins = files.plugins.plugins;\n\n        if (files.plugins.android) {\n            newConfig.platforms.android = files.plugins.android;\n        }\n        if (files.plugins.ios) {\n            newConfig.platforms.ios = files.plugins.ios;\n        }\n    }\n\n    if (files.permissions) {\n        newConfig.permissions = files.permissions.permissions;\n    }\n\n    const pathsToDelete = [\n        paths.config,\n        paths.plugins,\n        paths.permissions\n    ].concat(paths.appConfigDirs);\n\n    paths.appConfigDirs.forEach((v) => {\n        if (fs.existsSync(v)) {\n            copyFileSync(v, v.replace('/config.json', '/renative.json'));\n        }\n    });\n\n    writeFileSync(c.paths.project.config, newConfig);\n\n    logDebug(`Paths to delete, ${pathsToDelete.join('\\n')}`);\n\n    removeFilesSync(pathsToDelete);\n\n    logSuccess('Migration Complete!');\n\n    resolve();\n});\n"],"file":"migrator.js"}