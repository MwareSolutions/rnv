{"version":3,"file":"publish.js","names":["includesPre","version","includes","rnvPublish","Config","checkRequiredPackage","pkgJson","getProjectConfig","package","existingPath","getConfig","paths","project","git","tagName","requireCleanWorkingDir","npm","publish","hooks","writeFileSync","skipRootPublish","rootPublishCommand","args","program","rawArgs","slice","maybeVersion","secondArg","prereleaseMark","splice","semver","valid","dir","execCommonOpts","interactive","env","process","cwd","ci","publishMode","rootPublishIfNecessary","executeAsync","Error","releaseIt","join","catch","e","Promise","resolve","reject","then","logWarning"],"sources":["../../src/projectTools/publish.js"],"sourcesContent":["/* eslint-disable global-require, import/no-dynamic-require */\nimport semver from 'semver';\n\nimport Config from '../config';\nimport { executeAsync } from '../systemTools/exec';\nimport { logWarning } from '../systemTools/logger';\nimport { writeFileSync } from '../systemTools/fileutils';\n\n/*\n *\n * Usage\n * rnv publish\n * rnv publish patch|minor|major\n * rnv publish patch|minor|major alpha|beta|rc\n * rnv publish 1.0.0\n * rnv publish 1.0.0-alpha.1\n * rnv publish ... --dry-run\n *\n * Basically the same as release-it documentation. The only difference is that you don't need to specify --preRelease=beta\n * if you are publishing a beta/alpha/rc. That is done automatically by checking if the second arg is alpha, beta, rc.\n *\n */\n\nconst includesPre = (version) => {\n    if (version.includes('alpha')) return 'alpha';\n    if (version.includes('beta')) return 'beta';\n    if (version.includes('rc')) return 'rc';\n    return false;\n};\n\nconst rnvPublish = async () => {\n    // make sure release-it is installed\n    await Config.checkRequiredPackage('release-it', '12.4.3', 'devDependencies');\n    // make sure required object is present in package.json\n    const pkgJson = Config.getProjectConfig().package;\n    const existingPath = Config.getConfig().paths.project.package;\n\n    if (!pkgJson['release-it']) {\n        pkgJson['release-it'] = {\n            git: {\n                // eslint-disable-next-line no-template-curly-in-string\n                tagName: 'v${version}',\n                requireCleanWorkingDir: false\n            },\n            npm: {\n                publish: false\n            },\n            hooks: {\n                // eslint-disable-next-line no-template-curly-in-string\n                'before:git': 'npx rnv pkg version ${version}'\n            }\n        };\n        writeFileSync(existingPath, pkgJson);\n    }\n\n    // backwards compatibility and user change friendly\n    if (!pkgJson['release-it']?.hooks?.['before:git']) {\n        if (!pkgJson['release-it'].hooks) {\n            pkgJson['release-it'].hooks = {};\n        }\n        // eslint-disable-next-line no-template-curly-in-string\n        pkgJson['release-it'].hooks['before:git'] = 'npx rnv pkg version ${version}';\n        writeFileSync(existingPath, pkgJson);\n    }\n\n    if (!pkgJson['release-it'].publish) {\n        pkgJson['release-it'].publish = 'local';\n        pkgJson['release-it'].skipRootPublish = true;\n        pkgJson['release-it'].rootPublishCommand = 'npx rnv deploy -p ios -s debug';\n        writeFileSync(existingPath, pkgJson);\n    }\n\n    let args = [...Config.getConfig().program.rawArgs];\n    args = args.slice(3);\n\n    const maybeVersion = args[0];\n    const secondArg = args[1];\n    let prereleaseMark = '';\n\n    // for handling `rnv publish patch alpha`\n    if (['alpha', 'beta', 'rc'].includes(secondArg)) {\n        args.splice(1, 1); // remove it so it won't interfere with release-it\n        prereleaseMark = `--preRelease=${secondArg}`;\n    }\n\n    // for handling `rnv publish 1.0.0-alpha.1`\n    if (semver.valid(maybeVersion) && includesPre(maybeVersion)) {\n        prereleaseMark = `--preRelease=${includesPre(maybeVersion)}`;\n    }\n\n    const { dir } = Config.getConfig().paths.project;\n    const execCommonOpts = { interactive: true, env: process.env, cwd: dir };\n    const { ci } = Config.getConfig().program;\n    const publishMode = pkgJson['release-it'].publish || 'local';\n    const { skipRootPublish, rootPublishCommand } = pkgJson['release-it'];\n\n    const rootPublishIfNecessary = async () => {\n        await executeAsync('npx rnv pkg publish', execCommonOpts);\n        if (!skipRootPublish) {\n            if (!rootPublishCommand) throw new Error('You don\\'t have a rootPublishCommand specified in package.json');\n            return executeAsync(rootPublishCommand, execCommonOpts);\n        }\n    };\n\n    const releaseIt = () => executeAsync(`npx release-it ${args.join(' ')} ${prereleaseMark}`, execCommonOpts).catch((e) => {\n        if (e.includes('SIGINT')) return Promise.resolve();\n        if (e.includes('--no-git.requireUpstream')) return Promise.reject(new Error('Seems like you have no upstream configured for current branch. Run `git push -u <origin> <your_branch>` to fix it then try again.'));\n        return Promise.reject(e);\n    }).then(rootPublishIfNecessary);\n\n    // we have a ci flag, checking if the project is configured for ci releases to do a bumpless deploy\n    if (ci) {\n        if (publishMode !== 'ci') return logWarning('You are running publish with --ci flag but this project is set for local deployments. Check package.json release-it.publish property');\n        return rootPublishIfNecessary();\n    }\n\n    return releaseIt();\n};\n\nexport default rnvPublish;\n"],"mappings":"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"}