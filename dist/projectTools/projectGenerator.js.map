{"version":3,"file":"projectGenerator.js","names":["highlight","chalk","green","configureGit","c","projectPath","paths","project","dir","logTask","fs","existsSync","path","join","logInfo","commandExistsSync","executeAsync","cwd","logWarning","_generateProject","data","base","resolve","projectName","replace","package","config","RENATIVE_CONFIG_NAME","packageName","appTitle","toLowerCase","mkdirSync","templates","optionTemplates","selectedOption","selectedVersion","grey","version","workspaceID","optionWorkspaces","appConfigsDir","platformTemplatesDir","entryDir","platformAssetsDir","platformBuildsDir","projectConfigDir","defaults","title","id","appID","supportedPlatforms","optionPlatforms","selectedOptions","currentTemplate","isNew","writeFileSync","gitEnabled","logSuccess","white","_prepareProjectOverview","inputProjectName","inputAppTitle","defaultAppTitle","teamID","inputAppID","inputVersion","defaultVersion","tempString","str","printBoxStart","printIntoBox","printArrIntoBox","gray","printBoxEnd","confirmString","createNewProject","args","program","defaultTemplate","defaultProjectName","defaultWorkspace","generateOptions","SUPPORTED_PLATFORMS","getWorkspaceOptions","inquirer","prompt","name","type","validate","value","message","inputProjectNameObj","default","val","match","v","semver","valid","coerce","choices","keysAsArray","inputWorkspace","runtime","selectedWorkspace","parseRenativeConfigs","getTemplateOptions","inputTemplate","templateVersionsStr","versionArr","split","reverse","rnvVersion","validVersions","filter","lte","map","inputTemplateVersion","pageSize","length","inputSupportedPlatforms","confirm","Analytics","captureEvent","template","platforms"],"sources":["../../src/projectTools/projectGenerator.js"],"sourcesContent":["/* eslint-disable import/no-cycle */\n// @todo fix cycle dep\nimport path from 'path';\nimport chalk from 'chalk';\nimport inquirer from 'inquirer';\nimport semver from 'semver';\nimport fs from 'fs';\nimport { generateOptions } from '../systemTools/prompt';\nimport {\n    RENATIVE_CONFIG_NAME,\n    SUPPORTED_PLATFORMS\n} from '../constants';\nimport { getTemplateOptions } from '../templateTools';\nimport { mkdirSync, writeFileSync } from '../systemTools/fileutils';\nimport { executeAsync, commandExistsSync } from '../systemTools/exec';\nimport { printIntoBox, printBoxStart, printBoxEnd, printArrIntoBox,\n    logTask,\n    logSuccess,\n    logInfo,\n    logWarning } from '../systemTools/logger';\nimport { getWorkspaceOptions } from './workspace';\nimport { parseRenativeConfigs } from '../configTools/configParser';\nimport Analytics from '../systemTools/analytics';\n\nconst highlight = chalk.green;\n\nconst configureGit = async (c) => {\n    const projectPath = c.paths.project.dir;\n    logTask(`configureGit:${projectPath}`);\n\n    if (!fs.existsSync(path.join(projectPath, '.git'))) {\n        logInfo('Your project does not have a git repo. Creating one...');\n        if (commandExistsSync('git')) {\n            await executeAsync('git init', { cwd: projectPath });\n            await executeAsync('git add -A', { cwd: projectPath });\n            await executeAsync('git commit -m \"Initial\"', { cwd: projectPath });\n        } else {\n            logWarning('We tried to create a git repo inside your project but you don\\'t seem to have git installed');\n        }\n    }\n};\n\nconst _generateProject = async (c, data) => {\n    logTask('_generateProject');\n\n    const base = path.resolve('.');\n\n    c.paths.project.dir = path.join(base, data.projectName.replace(/(\\s+)/g, '_'));\n    c.paths.project.package = path.join(c.paths.project.dir, 'package.json');\n    c.paths.project.config = path.join(c.paths.project.dir, RENATIVE_CONFIG_NAME);\n\n    data.packageName = data.appTitle.replace(/\\s+/g, '-').toLowerCase();\n\n    mkdirSync(c.paths.project.dir);\n\n    const templates = {};\n\n\n    logTask(`_generateProject:${data.optionTemplates.selectedOption}:${data.optionTemplates.selectedVersion}`, chalk.grey);\n\n    templates[data.optionTemplates.selectedOption] = {\n        version: data.optionTemplates.selectedVersion\n    };\n\n    const config = {\n        projectName: data.projectName,\n        workspaceID: data.optionWorkspaces.selectedOption,\n        paths: {\n            appConfigsDir: './appConfigs',\n            platformTemplatesDir: '$RNV_HOME/platformTemplates',\n            entryDir: './',\n            platformAssetsDir: './platformAssets',\n            platformBuildsDir: './platformBuilds',\n            projectConfigDir: './projectConfig'\n        },\n        defaults: {\n            title: data.appTitle,\n            id: data.appID,\n            supportedPlatforms: data.optionPlatforms.selectedOptions\n        },\n        templates,\n        currentTemplate: data.optionTemplates.selectedOption,\n        isNew: true\n    };\n\n    writeFileSync(c.paths.project.config, config);\n\n    if (data.gitEnabled) {\n        await configureGit(c);\n    }\n\n    logSuccess(\n        `Your project is ready! navigate to project ${chalk.white(`cd ${data.projectName}`)} and run ${chalk.white(\n            `rnv run -p ${data.optionPlatforms.selectedOptions[0]}`,\n        )} to see magic happen!`,\n    );\n};\n\nconst _prepareProjectOverview = (c, data) => {\n    data.projectName = data.inputProjectName;\n    data.appTitle = data.inputAppTitle || data.defaultAppTitle;\n    data.teamID = '';\n    data.appID = data.inputAppID ? data.inputAppID.replace(/\\s+/g, '-').toLowerCase() : data.appID;\n    data.version = data.inputVersion || data.defaultVersion;\n    const tempString = `${data.optionTemplates.selectedOption}@${data.optionTemplates.selectedVersion}`;\n\n    let str = printBoxStart('ðŸš€  ReNative Project Generator');\n    str += printIntoBox('');\n    str += printIntoBox(`Project Name (folder): ${highlight(data.projectName)}`, 1);\n    str += printIntoBox(`Workspace: ${highlight(data.optionWorkspaces.selectedOption)}`, 1);\n    str += printIntoBox(`Project Title: ${highlight(data.appTitle)}`, 1);\n    str += printIntoBox(`Project Version: ${highlight(data.version)}`, 1);\n    str += printIntoBox(`App ID: ${highlight(data.appID)}`, 1);\n    str += printIntoBox(`Project Template: ${highlight(tempString)}`, 1);\n    str += printIntoBox(`Git Enabled: ${highlight(data.gitEnabled)}`, 1);\n    str += printIntoBox('');\n    str += printIntoBox('Project Platforms:');\n    str += printArrIntoBox(data.optionPlatforms.selectedOptions);\n    str += printIntoBox('');\n    str += printIntoBox('Project Structure:');\n    str += printIntoBox('');\n    str += printIntoBox(data.projectName);\n    str += chalk.gray(`â”‚   â”œâ”€â”€ appConfigs            # Application flavour configuration files/assets â”‚\nâ”‚   â”‚   â””â”€â”€ [APP_ID]          # Example application flavour                    â”‚\nâ”‚   â”‚       â”œâ”€â”€ assets        # Platform assets injected to ./platformAssets   â”‚\nâ”‚   â”‚       â”œâ”€â”€ builds        # Platform files injected to ./platformBuilds    â”‚\nâ”‚   â”‚       â”œâ”€â”€ fonts             # Folder for all custom fonts                â”‚\nâ”‚   â”‚       â”œâ”€â”€ plugins           # Multi-platform plugins injections          â”‚\nâ”‚   â”‚       â””â”€â”€ renative.json # Application flavour config                     â”‚\nâ”‚   â”œâ”€â”€ platformAssets        # Generated cross-platform assets                â”‚\nâ”‚   â”œâ”€â”€ platformBuilds        # Generated platform app projects                â”‚\nâ”‚   â”œâ”€â”€ src                   # Source code files                              â”‚\nâ”‚   â”œâ”€â”€ index.*.js            # Entry files                                    â”‚\nâ”‚   â””â”€â”€ renative.json         # ReNative project configuration                 â”‚\n`);\n    str += printIntoBox('');\n    str += printBoxEnd();\n    str += '\\n';\n\n    data.confirmString = str;\n};\n\nexport const createNewProject = async (c) => {\n    logTask('createNewProject');\n    const { args } = c.program;\n\n    let data = {\n        defaultVersion: '0.1.0',\n        defaultTemplate: 'renative-template-hello-world',\n        defaultProjectName: 'helloRenative',\n        defaultAppTitle: 'Hello Renative',\n        defaultWorkspace: 'rnv'\n    };\n    data.optionPlatforms = generateOptions(SUPPORTED_PLATFORMS, true);\n    data.optionTemplates = {};\n    data.optionWorkspaces = getWorkspaceOptions(c);\n\n    // logWelcome();\n    let inputProjectName;\n\n    if (args[1] && args[1] !== '') {\n        inputProjectName = args[1];\n    } else {\n        const inputProjectNameObj = await inquirer.prompt({\n            name: 'inputProjectName',\n            type: 'input',\n            validate: value => !!value,\n            message: \"What's your project Name? (no spaces, folder based on ID will be created in this directory)\"\n        });\n        inputProjectName = inputProjectNameObj.inputProjectName;\n    }\n\n    const {\n        inputAppTitle, inputAppID, inputVersion, inputWorkspace\n    } = await inquirer.prompt([{\n        name: 'inputAppTitle',\n        type: 'input',\n        default: data.defaultAppTitle,\n        validate: val => !!val || 'Please enter a title',\n        message: 'What\\'s your project Title?'\n    }, {\n        name: 'inputAppID',\n        type: 'input',\n        default: () => {\n            data.appID = `com.mycompany.${inputProjectName.replace(/\\s+/g, '').toLowerCase()}`;\n            return data.appID;\n        },\n        validate: id => !!id.match(/[a-z]+\\.[a-z0-9]+\\.[a-z0-9]+/) || 'Please enter a valid appID (com.test.app)',\n        message: 'What\\'s your App ID?'\n    }, {\n        name: 'inputVersion',\n        type: 'input',\n        default: data.defaultVersion,\n        validate: v => !!semver.valid(semver.coerce(v)) || 'Please enter a valid semver version (1.0.0, 42.6.7.9.3-alpha, etc.)',\n        message: 'What\\'s your Version?'\n    }, {\n        name: 'inputWorkspace',\n        type: 'list',\n        message: 'What workspace to use?',\n        default: data.defaultWorkspace,\n        choices: data.optionWorkspaces.keysAsArray\n    }]);\n    data.optionWorkspaces.selectedOption = inputWorkspace;\n\n    c.runtime.selectedWorkspace = inputWorkspace;\n    await parseRenativeConfigs(c);\n    data.optionTemplates = getTemplateOptions(c);\n\n    const {\n        inputTemplate\n    } = await inquirer.prompt({\n        name: 'inputTemplate',\n        type: 'list',\n        message: 'What template to use?',\n        default: data.defaultTemplate,\n        choices: data.optionTemplates.keysAsArray\n    });\n    data.optionTemplates.selectedOption = inputTemplate;\n\n    const templateVersionsStr = await executeAsync(c, `npm view ${data.optionTemplates.selectedOption} versions`);\n    const versionArr = templateVersionsStr.replace(/\\r?\\n|\\r|\\s|'|\\[|\\]/g, '').split(',').reverse();\n    const { rnvVersion } = c;\n\n    // filter greater versions than rnv\n    const validVersions = versionArr.filter(version => semver.lte(version, rnvVersion)).map(v => ({ name: v, value: v }));\n    if (validVersions[0].name === rnvVersion) {\n        // mark the same versions as recommended\n        validVersions[0].name = `${validVersions[0].name} (recommended)`;\n    }\n\n    data.optionTemplates.selectedVersion = versionArr[0];\n\n    const {\n        inputTemplateVersion\n    } = await inquirer.prompt({\n        name: 'inputTemplateVersion',\n        type: 'list',\n        message: 'What version of template to use?',\n        default: data.optionTemplates.selectedVersion,\n        choices: validVersions\n    });\n    data.optionTemplates.selectedVersion = inputTemplateVersion;\n\n\n    const {\n        inputSupportedPlatforms\n    } = await inquirer.prompt({\n        name: 'inputSupportedPlatforms',\n        type: 'checkbox',\n        pageSize: 20,\n        message: 'What platforms would you like to use?',\n        validate: val => !!val.length || 'Please select at least a platform',\n        default: data.optionPlatforms.keysAsArray,\n        choices: data.optionPlatforms.keysAsArray\n    });\n\n    const {\n        gitEnabled\n    } = await inquirer.prompt({\n        name: 'gitEnabled',\n        type: 'confirm',\n        message: 'Do you want to set-up git in your new project?'\n    });\n\n    data = {\n        ...data, inputProjectName, inputAppTitle, inputAppID, inputVersion, inputTemplate, inputSupportedPlatforms, inputWorkspace, gitEnabled\n    };\n    data.optionPlatforms.selectedOptions = inputSupportedPlatforms;\n\n\n    _prepareProjectOverview(c, data);\n\n    const { confirm } = await inquirer.prompt({\n        type: 'confirm',\n        name: 'confirm',\n        message: `\\n${data.confirmString}\\nIs all this correct?`\n    });\n\n    if (confirm) {\n        try {\n            await Analytics.captureEvent({\n                type: 'newProject',\n                template: inputTemplate,\n                platforms: inputSupportedPlatforms\n            });\n        } catch {}\n\n        await _generateProject(c, data);\n    }\n};\n"],"mappings":"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"}