{"version":3,"file":"buildHooks.js","names":["rnvHooksRun","c","Promise","resolve","reject","logTask","buildHooks","then","program","exeMethod","catch","e","chalk","white","executePipe","key","pipe","buildPipes","Array","isArray","reduce","accumulatorPromise","next","fs","existsSync","paths","index","isBuildHooksReady","executeAsync","dir","dist","cwd","h","require","hooks","pipes","rnvHooksList","hookOpts","generateOptions","hooksAsString","asString","pipeOpts","logToSummary","rnvHooksPipes","console","log"],"sources":["../../src/projectTools/buildHooks.js"],"sourcesContent":["import chalk from 'chalk';\nimport fs from 'fs';\nimport {\n    getConfig\n} from '../common';\nimport { logToSummary, logTask } from '../systemTools/logger';\nimport { generateOptions } from '../systemTools/prompt';\nimport { executeAsync } from '../systemTools/exec';\n\n// ##########################################\n// PUBLIC API\n// ##########################################\n\nconst rnvHooksRun = c => new Promise((resolve, reject) => {\n    logTask('rnvHooksRun');\n\n    buildHooks(c)\n        .then(() => {\n            if (!c.buildHooks) {\n                reject('Build hooks have not been compiled properly!');\n                return;\n            }\n            if (c.buildHooks[c.program?.exeMethod]) {\n                c.buildHooks[c.program?.exeMethod](c)\n                    .then(() => resolve())\n                    .catch(e => reject(e));\n            } else {\n                reject(`Method name ${chalk.white(c.program.exeMethod)} does not exists in your buildHooks!`);\n            }\n        })\n        .catch(e => reject(e));\n});\n\nconst executePipe = async (c, key) => {\n    logTask(`executePipe:${key}`);\n\n    await buildHooks(c);\n\n    const pipe = c.buildPipes ? c.buildPipes[key] : null;\n\n    if (Array.isArray(pipe)) {\n        await pipe.reduce((accumulatorPromise, next) => accumulatorPromise.then(() => next(c)), Promise.resolve());\n    } else if (pipe) {\n        await pipe(c);\n    }\n};\n\nconst buildHooks = c => new Promise((resolve, reject) => {\n    logTask('buildHooks');\n\n    if (fs.existsSync(c.paths.buildHooks.index)) {\n        if (c.isBuildHooksReady) {\n            resolve();\n            return;\n        }\n\n        executeAsync(c, `babel --no-babelrc --plugins @babel/plugin-proposal-optional-chaining,@babel/plugin-proposal-nullish-coalescing-operator ${c.paths.buildHooks.dir} -d ${c.paths.buildHooks.dist.dir} --presets=@babel/env`, {\n            cwd: c.paths.buildHooks.dir\n        })\n            .then(() => {\n                const h = require(c.paths.buildHooks.dist.index);\n                c.buildHooks = h.hooks;\n                c.buildPipes = h.pipes;\n                c.isBuildHooksReady = true;\n                resolve();\n            })\n            .catch((e) => {\n                // logWarning(`BUILD_HOOK Failed with error: ${e}`);\n                // resolve();\n                // Fail Builds instead of warn when hook fails\n                reject(`BUILD_HOOK Failed with error: ${e}`);\n            });\n    } else {\n        // logWarning(`Your buildHook ${chalk.white(c.paths.buildHooks.index)} is missing!. Skipping operation`);\n        resolve();\n    }\n});\n\nconst rnvHooksList = c => new Promise((resolve, reject) => {\n    logTask('rnvHooksList');\n\n    buildHooks(c)\n        .then(() => {\n            if (c.buildHooks) {\n                const hookOpts = generateOptions(c.buildHooks);\n                let hooksAsString = `\\n${'Hooks:'}\\n${hookOpts.asString}`;\n\n                if (c.buildPipes) {\n                    const pipeOpts = generateOptions(c.buildPipes);\n                    hooksAsString += `\\n${'Pipes:'}\\n${pipeOpts.asString}`;\n                }\n                logToSummary(hooksAsString);\n                resolve();\n            } else {\n                reject('Your buildHooks object is empty!');\n            }\n        })\n        .catch(e => reject(e));\n});\n\nconst rnvHooksPipes = c => new Promise((resolve, reject) => {\n    logTask('rnvHooksPipes');\n\n    buildHooks(c)\n        .then(() => {\n            const pipeOpts = generateOptions(c.buildPipes);\n            console.log(`Pipes:\\n${pipeOpts.asString}`);\n        }).catch(e => reject(e));\n});\n\nexport { buildHooks, rnvHooksList, rnvHooksRun, executePipe, rnvHooksPipes };\n"],"mappings":"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"}